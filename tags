!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$FZF_DEFAULT_COMMAND	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let $FZF_DEFAULT_COMMAND = a:grep_command$/;"	v
$FZF_DEFAULT_COMMAND	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let $FZF_DEFAULT_COMMAND = prev_default_command$/;"	v
$FZF_DEFAULT_COMMAND	plug-config/fzf.vim	/^let $FZF_DEFAULT_COMMAND="rg --files --hidden --glob '!.git\/**'"$/;"	v
$FZF_DEFAULT_OPTS	plug-config/fzf.vim	/^let $FZF_DEFAULT_OPTS = '--layout=reverse --inline-info'$/;"	v
$GIT_EDITOR	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^    let $GIT_EDITOR = 'nvr --remote-wait'$/;"	v
$GIT_EDITOR	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^    let $GIT_EDITOR = printf($/;"	v
$NODE_CLIENT_LOG_FILE	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^    let $NODE_CLIENT_LOG_FILE = s:logfile$/;"	v
$NODE_CLIENT_LOG_LEVEL	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^  let $NODE_CLIENT_LOG_LEVEL = 'debug'$/;"	v
$NVIM_TUI_ENABLE_TRUE_COLOR	general/settings.vim	/^let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
$PATH	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^    let $PATH .= ':' . s:script$/;"	v
$PATH	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^    let $PATH .= ';' . s:script$/;"	v
$VIM_EXE	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^let $VIM_EXE = v:progpath$/;"	v
$VIM_SERVERNAME	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^let $VIM_SERVERNAME = v:servername$/;"	v
,	autoload/plugged/vim-sneak/plugin/sneak.vim	/^    nmap , <Plug>Sneak_,$/;"	m
,	autoload/plugged/vim-sneak/plugin/sneak.vim	/^    omap , <Plug>Sneak_,$/;"	m
.	autoload/plugged/vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
;	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  nmap ; <Plug>Sneak_;$/;"	m
;	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  omap ; <Plug>Sneak_;$/;"	m
<	keys/mappings.vim	/^vnoremap < <gv$/;"	m
<C-/>	vscode/settings.vim	/^nnoremap <expr> <C-\/> <SID>vscodeCommentary() . '_'$/;"	m
<C-A>	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap  <C-A>     <Plug>SpeedDatingUp$/;"	m
<C-G>S	autoload/plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	autoload/plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-Q>	keys/mappings.vim	/^  nnoremap <silent> <C-Q> :wq!<CR>$/;"	m
<C-R>	autoload/plugged/vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-S>	autoload/plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-X>	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap  <C-X>     <Plug>SpeedDatingDown$/;"	m
<C-c>	keys/mappings.vim	/^  nnoremap <silent> <C-c> <Esc>$/;"	m
<C-h>	keys/mappings.vim	/^  inoremap <C-h> <C-\\><C-N><C-w>h$/;"	m
<C-h>	keys/mappings.vim	/^  nnoremap <C-h> <C-w>h$/;"	m
<C-h>	keys/mappings.vim	/^imap <C-h> <C-w>h$/;"	m
<C-h>	vscode/settings.vim	/^nnoremap <silent> <C-h> :call VSCodeNotify('workbench.action.navigateLeft')<CR>$/;"	m
<C-j>	keys/mappings.vim	/^  inoremap <C-j> <C-\\><C-N><C-w>j$/;"	m
<C-j>	keys/mappings.vim	/^  nnoremap <C-j> <C-w>j$/;"	m
<C-j>	keys/mappings.vim	/^imap <C-j> <C-w>j$/;"	m
<C-j>	plug-config/coc.vim	/^imap <C-j> <Plug>(coc-snippets-expand-jump)$/;"	m
<C-j>	plug-config/coc.vim	/^vmap <C-j> <Plug>(coc-snippets-select)$/;"	m
<C-j>	vscode/settings.vim	/^nnoremap <silent> <C-j> :call VSCodeNotify('workbench.action.navigateDown')<CR>$/;"	m
<C-k>	keys/mappings.vim	/^  inoremap <C-k> <C-\\><C-N><C-w>k$/;"	m
<C-k>	keys/mappings.vim	/^  nnoremap <C-k> <C-w>k$/;"	m
<C-k>	keys/mappings.vim	/^imap <C-k> <C-w>k$/;"	m
<C-k>	vscode/settings.vim	/^nnoremap <silent> <C-k> :call VSCodeNotify('workbench.action.navigateUp')<CR>$/;"	m
<C-l>	keys/mappings.vim	/^  inoremap <C-l> <C-\\><C-N><C-w>l$/;"	m
<C-l>	keys/mappings.vim	/^  nnoremap <C-l> <C-w>l$/;"	m
<C-l>	keys/mappings.vim	/^imap <C-l> <C-w>l$/;"	m
<C-l>	plug-config/coc.vim	/^imap <C-l> <Plug>(coc-snippets-expand)$/;"	m
<C-l>	vscode/settings.vim	/^nnoremap <silent> <C-l> :call VSCodeNotify('workbench.action.navigateRight')<CR>$/;"	m
<C-s>	keys/mappings.vim	/^  nnoremap <silent> <C-s> :w<CR>$/;"	m
<C-w>_	vscode/settings.vim	/^nnoremap <silent> <C-w>_ :<C-u>call VSCodeNotify('workbench.action.toggleEditorWidths')<CR>$/;"	m
<Leader>e	plug-config/coc.vim	/^nmap <Leader>e <Plug>(coc-translator-e)$/;"	m
<Leader>e	plug-config/coc.vim	/^vmap <Leader>e <Plug>(coc-translator-ev)$/;"	m
<Leader>gm	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^    nmap <Leader>gm <Plug>(git-messenger)$/;"	m
<Leader>r	plug-config/coc.vim	/^nmap <Leader>r <Plug>(coc-translator-r)$/;"	m
<Leader>r	plug-config/coc.vim	/^vmap <Leader>r <Plug>(coc-translator-rv)$/;"	m
<Leader>t	plug-config/coc.vim	/^nmap <Leader>t <Plug>(coc-translator-p)$/;"	m
<Leader>t	plug-config/coc.vim	/^vmap <Leader>t <Plug>(coc-translator-pv)$/;"	m
<M-h>	keys/mappings.vim	/^  nnoremap <silent> <M-h>    :vertical resize -2<CR>$/;"	m
<M-j>	keys/mappings.vim	/^  nnoremap <silent> <M-j>    :resize -2<CR>$/;"	m
<M-k>	keys/mappings.vim	/^  nnoremap <silent> <M-k>    :resize +2<CR>$/;"	m
<M-l>	keys/mappings.vim	/^  nnoremap <silent> <M-l>    :vertical resize +2<CR>$/;"	m
<Plug>(-fzf-complete-trigger)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(GitGutterNextHunk)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterNextHunk) &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>(GitGutterPrevHunk)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterPrevHunk) &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>(GitGutterPreviewHunk)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterPreviewHunk) :GitGutterPreviewHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterTextObjectInnerPending)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectInnerPending) :<C-U>call gitgutter#hunk#text_object(1)<CR>$/;"	m
<Plug>(GitGutterTextObjectOuterPending)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectOuterPending) :<C-U>call gitgutter#hunk#text_object(0)<CR>$/;"	m
<Plug>(GitGutterUndoHunk)	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterUndoHunk)    :GitGutterUndoHunk<CR>$/;"	m
<Plug>(RepeatDot)	autoload/plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	autoload/plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	autoload/plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	autoload/plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(SmoothieBackwards)	autoload/plugged/vim-smoothie/plugin/smoothie.vim	/^nnoremap <silent> <Plug>(SmoothieBackwards) :<C-U>call smoothie#backwards() <CR>$/;"	m
<Plug>(SmoothieDownwards)	autoload/plugged/vim-smoothie/plugin/smoothie.vim	/^nnoremap <silent> <Plug>(SmoothieDownwards) :<C-U>call smoothie#downwards() <CR>$/;"	m
<Plug>(SmoothieForwards)	autoload/plugged/vim-smoothie/plugin/smoothie.vim	/^nnoremap <silent> <Plug>(SmoothieForwards)  :<C-U>call smoothie#forwards()  <CR>$/;"	m
<Plug>(SmoothieUpwards)	autoload/plugged/vim-smoothie/plugin/smoothie.vim	/^nnoremap <silent> <Plug>(SmoothieUpwards)   :<C-U>call smoothie#upwards()   <CR>$/;"	m
<Plug>(SneakStreak)	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nmap <Plug>(SneakStreak)         <Plug>SneakLabel_s$/;"	m
<Plug>(SneakStreak)	autoload/plugged/vim-sneak/plugin/sneak.vim	/^omap <Plug>(SneakStreak)         <Plug>SneakLabel_s$/;"	m
<Plug>(SneakStreakBackward)	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nmap <Plug>(SneakStreakBackward) <Plug>SneakLabel_S$/;"	m
<Plug>(SneakStreakBackward)	autoload/plugged/vim-sneak/plugin/sneak.vim	/^omap <Plug>(SneakStreakBackward) <Plug>SneakLabel_S$/;"	m
<Plug>(coc-classobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call coc#rpc#request('selectSymbolRange', [v:false, '', ['Interface', 'Struct', 'Class']])<CR>$/;"	m
<Plug>(coc-classobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call coc#rpc#request('selectSymbolRange', [v:false, visualmode(), ['Interface', 'Struct', 'Class']])<CR>$/;"	m
<Plug>(coc-classobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call coc#rpc#request('selectSymbolRange', [v:true, '', ['Interface', 'Struct', 'Class']])<CR>$/;"	m
<Plug>(coc-classobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call coc#rpc#request('selectSymbolRange', [v:true, visualmode(), ['Interface', 'Struct', 'Class']])<CR>$/;"	m
<Plug>(coc-codeaction)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)            :<C-u>call       CocActionAsync('codeAction',         '')<CR>$/;"	m
<Plug>(coc-codeaction-line)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-line)       :<C-u>call       CocActionAsync('codeAction',         'n')<CR>$/;"	m
<Plug>(coc-codeaction-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected)   :<C-u>set        operatorfunc=<SID>CodeActionFromSelected<CR>g@$/;"	m
<Plug>(coc-codeaction-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-codeaction-selected)   :<C-u>call       CocActionAsync('codeAction',         visualmode())<CR>$/;"	m
<Plug>(coc-codelens-action)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)       :<C-u>call       CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-command-repeat)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-command-repeat)        :<C-u>call       CocAction('repeatCommand')<CR>$/;"	m
<Plug>(coc-cursors-operator)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-operator) :<C-u>set operatorfunc=<SID>CursorRangeFromSelected<CR>g@$/;"	m
<Plug>(coc-cursors-position)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-position) :<C-u>call coc#rpc#request('cursorsSelect', [bufnr('%'), 'position', 'n'])<CR>$/;"	m
<Plug>(coc-cursors-range)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-cursors-range)    :<C-u>call coc#rpc#request('cursorsSelect', [bufnr('%'), 'range', visualmode()])<CR>$/;"	m
<Plug>(coc-cursors-word)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-word)     :<C-u>call coc#rpc#request('cursorsSelect', [bufnr('%'), 'word', 'n'])<CR>$/;"	m
<Plug>(coc-declaration)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-declaration)           :<C-u>call       CocActionAsync('jumpDeclaration')<CR>$/;"	m
<Plug>(coc-definition)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-definition)            :<C-u>call       CocActionAsync('jumpDefinition')<CR>$/;"	m
<Plug>(coc-diagnostic-info)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-info)       :<C-u>call       CocActionAsync('diagnosticInfo')<CR>$/;"	m
<Plug>(coc-diagnostic-next)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next)       :<C-u>call       CocActionAsync('diagnosticNext')<CR>$/;"	m
<Plug>(coc-diagnostic-next-error)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next-error) :<C-u>call       CocActionAsync('diagnosticNext',     'error')<CR>$/;"	m
<Plug>(coc-diagnostic-prev)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev)       :<C-u>call       CocActionAsync('diagnosticPrevious')<CR>$/;"	m
<Plug>(coc-diagnostic-prev-error)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev-error) :<C-u>call       CocActionAsync('diagnosticPrevious', 'error')<CR>$/;"	m
<Plug>(coc-fix-current)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-fix-current)           :<C-u>call       CocActionAsync('doQuickfix')<CR>$/;"	m
<Plug>(coc-float-hide)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-hide)            :<C-u>call       coc#util#float_hide()<CR>$/;"	m
<Plug>(coc-float-jump)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-jump)            :<c-u>call       coc#util#float_jump()<cr>$/;"	m
<Plug>(coc-format)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format)                :<C-u>call       CocActionAsync('format')<CR>$/;"	m
<Plug>(coc-format-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format-selected)       :<C-u>set        operatorfunc=<SID>FormatFromSelected<CR>g@$/;"	m
<Plug>(coc-format-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-format-selected)       :<C-u>call       CocActionAsync('formatSelected',     visualmode())<CR>$/;"	m
<Plug>(coc-funcobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call coc#rpc#request('selectSymbolRange', [v:false, '', ['Method', 'Function']])<CR>$/;"	m
<Plug>(coc-funcobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call coc#rpc#request('selectSymbolRange', [v:false, visualmode(), ['Method', 'Function']])<CR>$/;"	m
<Plug>(coc-funcobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call coc#rpc#request('selectSymbolRange', [v:true, '', ['Method', 'Function']])<CR>$/;"	m
<Plug>(coc-funcobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call coc#rpc#request('selectSymbolRange', [v:true, visualmode(), ['Method', 'Function']])<CR>$/;"	m
<Plug>(coc-implementation)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-implementation)        :<C-u>call       CocActionAsync('jumpImplementation')<CR>$/;"	m
<Plug>(coc-openlink)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-openlink)              :<C-u>call       CocActionAsync('openLink')<CR>$/;"	m
<Plug>(coc-range-select)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect',     '', v:true)<CR>$/;"	m
<Plug>(coc-range-select)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect',     visualmode(), v:true)<CR>$/;"	m
<Plug>(coc-range-select-backward)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select-backward) :<C-u>call       CocActionAsync('rangeSelect',     visualmode(), v:false)<CR>$/;"	m
<Plug>(coc-refactor)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-refactor)              :<C-u>call       CocActionAsync('refactor')<CR>$/;"	m
<Plug>(coc-references)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references)            :<C-u>call       CocActionAsync('jumpReferences')<CR>$/;"	m
<Plug>(coc-references-used)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references-used)       :<C-u>call       CocActionAsync('jumpUsed')<CR>$/;"	m
<Plug>(coc-rename)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-rename)                :<C-u>call       CocActionAsync('rename')<CR>$/;"	m
<Plug>(coc-type-definition)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-type-definition)       :<C-u>call       CocActionAsync('jumpTypeDefinition')<CR>$/;"	m
<Plug>(git-messenger)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger) :<C-u>GitMessenger<CR>$/;"	m
<Plug>(git-messenger-close)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-close) :<C-u>call gitmessenger#close_popup(bufnr('%'))<CR>$/;"	m
<Plug>(git-messenger-into-popup)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-into-popup) :<C-u>call gitmessenger#into_popup(bufnr('%'))<CR>$/;"	m
<Plug>(git-messenger-scroll-down-1)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-down-1) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C-e')<CR>$/;"	m
<Plug>(git-messenger-scroll-down-half)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-down-half) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C-d')<CR>$/;"	m
<Plug>(git-messenger-scroll-down-page)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-down-page) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C-f')<CR>$/;"	m
<Plug>(git-messenger-scroll-up-1)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-up-1) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C-y')<CR>$/;"	m
<Plug>(git-messenger-scroll-up-half)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-up-half) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C-u')<CR>$/;"	m
<Plug>(git-messenger-scroll-up-page)	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^nnoremap <silent><Plug>(git-messenger-scroll-up-page) :<C-u>call gitmessenger#scroll(bufnr('%'), 'C-b')<CR>$/;"	m
<Plug>AutoPairsReturn	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>CSurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	autoload/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>CocRefresh	autoload/plugged/coc.nvim/plugin/coc.vim	/^inoremap <silent>                          <Plug>CocRefresh <C-r>=coc#_complete()<CR>$/;"	m
<Plug>Commentary	autoload/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	autoload/plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==# 'c')<CR>$/;"	m
<Plug>CommentaryLine	autoload/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	autoload/plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>$/;"	m
<Plug>Csurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk   &diff ? ']c' : ":\\<C-U>call gitgutter#utility#warn('please change your map \\<lt>Plug>GitGutterNextHunk to \\<lt>Plug>(GitGutterNextHunk)')\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk   &diff ? '[c' : ":\\<C-U>call gitgutter#utility#warn('please change your map \\<lt>Plug>GitGutterPrevHunk to \\<lt>Plug>(GitGutterPrevHunk)')\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk   :call gitgutter#utility#warn('please change your map <lt>Plug>GitGutterPreviewHunk to <lt>Plug>(GitGutterPreviewHunk)')<CR>$/;"	m
<Plug>GitGutterStageHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('please change your map <lt>Plug>GitGutterStageHunk to <lt>Plug>(GitGutterStageHunk)')<CR>$/;"	m
<Plug>GitGutterUndoHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk      :call gitgutter#utility#warn('please change your map <lt>Plug>GitGutterUndoHunk to <lt>Plug>(GitGutterUndoHunk)')<CR>$/;"	m
<Plug>ISurround	autoload/plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	autoload/plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>RadicalCoerceToBinary	autoload/plugged/vim-radical/plugin/radical.vim	/^nnoremap <silent> <Plug>RadicalCoerceToBinary :<C-U>call radical#CoerceToBase(2, v:count)<CR>$/;"	m
<Plug>RadicalCoerceToDecimal	autoload/plugged/vim-radical/plugin/radical.vim	/^nnoremap <silent> <Plug>RadicalCoerceToDecimal :<C-U>call radical#CoerceToBase(10, v:count)<CR>$/;"	m
<Plug>RadicalCoerceToHex	autoload/plugged/vim-radical/plugin/radical.vim	/^nnoremap <silent> <Plug>RadicalCoerceToHex :<C-U>call radical#CoerceToBase(16, v:count)<CR>$/;"	m
<Plug>RadicalCoerceToOctal	autoload/plugged/vim-radical/plugin/radical.vim	/^nnoremap <silent> <Plug>RadicalCoerceToOctal :<C-U>call radical#CoerceToBase(8, v:count)<CR>$/;"	m
<Plug>RadicalView	autoload/plugged/vim-radical/plugin/radical.vim	/^nnoremap <silent> <Plug>RadicalView :<C-U>call radical#NormalView(v:count)<CR>$/;"	m
<Plug>SneakBackward	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakBackward  <Plug>Sneak_S$/;"	m
<Plug>SneakForward	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakForward   <Plug>Sneak_s$/;"	m
<Plug>SneakLabel_S	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>SneakLabel_S :<c-u>call sneak#wrap('', 2, 1, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_S	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakLabel_S :<c-u>call sneak#wrap(v:operator, 2, 1, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_s	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>SneakLabel_s :<c-u>call sneak#wrap('', 2, 0, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_s	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakLabel_s :<c-u>call sneak#wrap(v:operator, 2, 0, 2, 2)<cr>$/;"	m
<Plug>SneakNext	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakNext     <Plug>Sneak_;$/;"	m
<Plug>SneakNext	autoload/plugged/vim-sneak/plugin/sneak.vim	/^omap <Plug>SneakNext     <Plug>Sneak_;$/;"	m
<Plug>SneakPrevious	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakPrevious <Plug>Sneak_,$/;"	m
<Plug>SneakPrevious	autoload/plugged/vim-sneak/plugin/sneak.vim	/^omap <Plug>SneakPrevious <Plug>Sneak_,$/;"	m
<Plug>SneakRepeat	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakRepeat :<c-u>call sneak#wrap(v:operator, sneak#util#getc(), sneak#util#getc(), sneak#util#getc(), sneak#util#getc())<cr>$/;"	m
<Plug>Sneak_,	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_, :<c-u>call <SID>rpt('', 1)<cr>$/;"	m
<Plug>Sneak_,	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_, :<c-u>call <SID>rpt(v:operator, 1)<cr>$/;"	m
<Plug>Sneak_;	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_; :<c-u>call <SID>rpt('', 0)<cr>$/;"	m
<Plug>Sneak_;	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_; :<c-u>call <SID>rpt(v:operator, 0)<cr>$/;"	m
<Plug>Sneak_F	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_F :<c-u>call sneak#wrap('', 1, 1, 1, 0)<cr>$/;"	m
<Plug>Sneak_F	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_F :<c-u>call sneak#wrap(v:operator, 1, 1, 1, 0)<cr>$/;"	m
<Plug>Sneak_S	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_S :<c-u>call sneak#wrap('', 2, 1, 2, 1)<cr>$/;"	m
<Plug>Sneak_S	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_S :<c-u>call sneak#wrap(v:operator, 2, 1, 2, 1)<cr>$/;"	m
<Plug>Sneak_T	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_T :<c-u>call sneak#wrap('', 1, 1, 0, 0)<cr>$/;"	m
<Plug>Sneak_T	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_T :<c-u>call sneak#wrap(v:operator, 1, 1, 0, 0)<cr>$/;"	m
<Plug>Sneak_f	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_f :<c-u>call sneak#wrap('', 1, 0, 1, 0)<cr>$/;"	m
<Plug>Sneak_f	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_f :<c-u>call sneak#wrap(v:operator, 1, 0, 1, 0)<cr>$/;"	m
<Plug>Sneak_s	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_s :<c-u>call sneak#wrap('', 2, 0, 2, 1)<cr>$/;"	m
<Plug>Sneak_s	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_s :<c-u>call sneak#wrap(v:operator, 2, 0, 2, 1)<cr>$/;"	m
<Plug>Sneak_t	autoload/plugged/vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_t :<c-u>call sneak#wrap('', 1, 0, 0, 0)<cr>$/;"	m
<Plug>Sneak_t	autoload/plugged/vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_t :<c-u>call sneak#wrap(v:operator, 1, 0, 0, 0)<cr>$/;"	m
<Plug>SpeedDatingDown	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingDown :<C-U>call speeddating#increment(-v:count1)<CR>$/;"	m
<Plug>SpeedDatingNowLocal	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingNowLocal :<C-U>call speeddating#timestamp(0,v:count)<CR>$/;"	m
<Plug>SpeedDatingNowUTC	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingNowUTC   :<C-U>call speeddating#timestamp(1,v:count)<CR>$/;"	m
<Plug>SpeedDatingUp	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingUp   :<C-U>call speeddating#increment(v:count1)<CR>$/;"	m
<Plug>SurroundRepeat	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>TagalongReapply	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^nnoremap <silent> <Plug>TagalongReapply :call tagalong#Reapply()<cr>$/;"	m
<Plug>VSurround	autoload/plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	autoload/plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>XTablineCdCurrent	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown1	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown2	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown3	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdHome	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineNextBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<Plug>YSsurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	autoload/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<S-TAB>	keys/mappings.vim	/^  nnoremap <silent> <S-TAB> :bprevious<CR>$/;"	m
<S-TAB>	plug-config/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<S-Tab>	keys/mappings.vim	/^  nmap <S-Tab> :Tabprev<CR>$/;"	m
<SID>:	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>AutoPairsReturn	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>NextBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:count1)$/;"	m
<SID>PrevBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:count1)$/;"	m
<SID>ReopenLastTab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>call airline#extensions#tabline#xtabline#select_buffer(v:count)\\<cr>"$/;"	m
<SID>ToggleFiltering	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buffers()<cr>$/;"	m
<SID>ToggleTabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr>$/;"	m
<Space>	keys/mappings.vim	/^nnoremap <Space> <Nop>$/;"	m
<Space>	vscode/settings.vim	/^nnoremap <silent> <Space> :call VSCodeNotify('whichkey.show')<CR>$/;"	m
<TAB>	keys/mappings.vim	/^  inoremap <silent> <expr><TAB> pumvisible() ? "\\<C-n>" : "\\<TAB>"$/;"	m
<TAB>	keys/mappings.vim	/^  nnoremap <silent> <TAB> :bnext<CR>$/;"	m
<TAB>	plug-config/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<Tab>	keys/mappings.vim	/^  nmap <Tab> :Tabnext<CR>$/;"	m
<c-c>	plug-config/coc.vim	/^noremap <c-c> :CocCommand<CR>$/;"	m
<c-j>	init.vim	/^inoremap <expr> <c-j> ("\\<C-n>")$/;"	m
<c-j>	keys/mappings.vim	/^  inoremap <expr> <c-j> ("\\<C-n>")$/;"	m
<c-j>	keys/mappings.vim	/^inoremap <expr> <c-j> ("\\<C-n>")$/;"	m
<c-k>	init.vim	/^inoremap <expr> <c-k> ("\\<C-p>")$/;"	m
<c-k>	keys/mappings.vim	/^  inoremap <expr> <c-k> ("\\<C-p>")$/;"	m
<c-k>	keys/mappings.vim	/^inoremap <expr> <c-k> ("\\<C-p>")$/;"	m
<c-n>	plug-config/ultisnips.vim	/^inoremap <c-n> <nop>$/;"	m
<c-o>	plug-config/coc.vim	/^inoremap <silent><expr> <c-o> coc#refresh()$/;"	m
<c-space>	plug-config/coc.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-space>	plug-config/coc.vim	/^nnoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	plug-config/coc.vim	/^	imap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	plug-config/coc.vim	/^	inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	plug-config/coc.vim	/^inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<down>	keys/mappings.vim	/^  noremap <down> :res -5<CR>$/;"	m
<f10>	general/functions.vim	/^nnoremap <f10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'$/;"	m
<leader>	keys/which-key.vim	/^nnoremap <silent> <leader> :silent <c-u> :silent WhichKey '<Space>'<CR>$/;"	m
<leader>	keys/which-key.vim	/^vnoremap <silent> <leader> :silent <c-u> :silent WhichKeyVisual '<Space>'<CR>$/;"	m
<leader>?	keys/which-key.vim	/^nnoremap <leader>? :CocSearch <C-R>=expand("<cword>")<CR><CR>$/;"	m
<leader>a	plug-config/coc.vim	/^nmap <silent> <leader>a :<C-u>set operatorfunc=<SID>cocActionsOpenFromSelected<CR>g@$/;"	m
<leader>cd2	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<leader>fl	plug-config/nerdtree.vim	/^noremap <leader>fl :NERDTreeToggle<CR>$/;"	m
<leader>pw	autoload/plugged/vim-windowswap/plugin/WindowSwap.vim	/^   nnoremap <silent> <leader>pw :call WindowSwap#DeprecatedDo()<CR>$/;"	m
<leader>qf	plug-config/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	plug-config/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>tl	plug-config/coc.vim	/^nnoremap <leader>tl :CocList todolist<CR>$/;"	m
<leader>tn	plug-config/coc.vim	/^nnoremap <leader>tn :CocCommand todolist.create<CR>$/;"	m
<leader>tu	plug-config/coc.vim	/^nnoremap <leader>tu :CocCommand todolist.download<CR>:CocCommand todolist.upload<CR>$/;"	m
<leader>ww	autoload/plugged/vim-windowswap/plugin/WindowSwap.vim	/^   nnoremap <silent> <leader>ww :call WindowSwap#EasyWindowSwap()<CR>$/;"	m
<leader>yw	autoload/plugged/vim-windowswap/plugin/WindowSwap.vim	/^   nnoremap <silent> <leader>yw :call WindowSwap#DeprecatedMark()<CR>$/;"	m
<left>	keys/mappings.vim	/^  noremap <left> :vertical resize-5<CR>$/;"	m
<nowait>	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<nowait>	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<nowait>	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<nowait>	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<nowait>	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<plug>(-fzf-/)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(QuickScopeToggle)	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^nnoremap <silent> <plug>(QuickScopeToggle) :call quick_scope#Toggle()<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print \\| sed 's:^..::'")$/;"	m
<plug>(fzf-complete-file)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print \\| sed '1d;s:^..::'")$/;"	m
<plug>(fzf-complete-path)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(goyo-resize)	autoload/plugged/goyo.vim/autoload/goyo.vim	/^nnoremap <silent> <plug>(goyo-resize) :<c-u>call <sid>resize_pads()<cr>$/;"	m
<plug>(startify-open-buffers)	autoload/plugged/vim-startify/plugin/startify.vim	/^nnoremap <silent><plug>(startify-open-buffers) :<c-u>call startify#open_buffers()<cr>$/;"	m
<right>	keys/mappings.vim	/^  noremap <right> :vertical resize+5<CR>$/;"	m
<space>/	plug-config/nerd-commenter.vim	/^vnoremap <silent> <space>\/ :Commentary<CR>$/;"	m
<space>cc	plug-config/vim-commentary.vim	/^noremap <silent> <space>cc :call Comment()<cr>$/;"	m
<space>y	plug-config/coc.vim	/^nnoremap <silent> <space>y :<C-u>CocList -A --normal yank<cr>$/;"	m
<up>	keys/mappings.vim	/^  noremap <up> :res +5<CR>$/;"	m
>	keys/mappings.vim	/^vnoremap > >gv$/;"	m
ADJ_ESTERROR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	60;"	d
ADJ_FREQUENCY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	58;"	d
ADJ_MAXERROR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	59;"	d
ADJ_MICRO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	65;"	d
ADJ_NANO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	66;"	d
ADJ_OFFSET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	57;"	d
ADJ_OFFSET_SINGLESHOT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	68;"	d
ADJ_OFFSET_SS_READ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	69;"	d
ADJ_SETOFFSET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	64;"	d
ADJ_STATUS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	61;"	d
ADJ_TAI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	63;"	d
ADJ_TICK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	67;"	d
ADJ_TIMECONST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	62;"	d
ALWAYS	autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
ARR_D	autoload/plugged/ultisnips/test/constant.py	/^ARR_D = "\\x1bOB"$/;"	v
ARR_L	autoload/plugged/ultisnips/test/constant.py	/^ARR_L = "\\x1bOD"$/;"	v
ARR_R	autoload/plugged/ultisnips/test/constant.py	/^ARR_R = "\\x1bOC"$/;"	v
ARR_U	autoload/plugged/ultisnips/test/constant.py	/^ARR_U = "\\x1bOA"$/;"	v
ASE_IMAGE	autoload/plugged/ultisnips/Makefile	/^	docker build -t ultisnips:repro --build-arg BASE_IMAGE=$< -f Dockerfile.repro .$/;"	m
Add	autoload/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []Result) {$/;"	f
AddAnsiGroups	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:AddAnsiGroups() abort$/;"	f
AddFunc_Opt	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
AddNewSnippetSource	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddSection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
AddedSnippetsSource	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
AirlineExtensions	autoload/plugged/vim-airline/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
AirlineRefresh	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineTheme	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
Algo	autoload/plugged/fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)$/;"	t
Aliases	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Aliases(dir) abort$/;"	f
Align	autoload/plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
Alt0	autoload/plugged/fzf/src/tui/tui.go	/^	Alt0$/;"	c
AltA	autoload/plugged/fzf/src/tui/tui.go	/^	AltA = Alt0 + 'a' - '0' + iota$/;"	c
AltB	autoload/plugged/fzf/src/tui/tui.go	/^	AltB$/;"	c
AltBS	autoload/plugged/fzf/src/tui/tui.go	/^	AltBS$/;"	c
AltC	autoload/plugged/fzf/src/tui/tui.go	/^	AltC$/;"	c
AltD	autoload/plugged/fzf/src/tui/tui.go	/^	AltD$/;"	c
AltDown	autoload/plugged/fzf/src/tui/tui.go	/^	AltDown$/;"	c
AltE	autoload/plugged/fzf/src/tui/tui.go	/^	AltE$/;"	c
AltF	autoload/plugged/fzf/src/tui/tui.go	/^	AltF$/;"	c
AltLeft	autoload/plugged/fzf/src/tui/tui.go	/^	AltLeft$/;"	c
AltRight	autoload/plugged/fzf/src/tui/tui.go	/^	AltRight$/;"	c
AltSlash	autoload/plugged/fzf/src/tui/tui.go	/^	AltSlash$/;"	c
AltSpace	autoload/plugged/fzf/src/tui/tui.go	/^	AltSpace$/;"	c
AltUp	autoload/plugged/fzf/src/tui/tui.go	/^	AltUp$/;"	c
AltZ	autoload/plugged/fzf/src/tui/tui.go	/^	AltZ     = AltA + 'z' - 'a'$/;"	c
Anon_NoTrigger_AfterSpace	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
App	autoload/plugged/vim-autoformat/samples/python.py	/^class App:     $/;"	c
AppArray	autoload/plugged/vim-autoformat/samples/python.py	/^class AppArray:     $/;"	c
Append	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Append(line, rows, depth) abort$/;"	f
AppendChild	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:AppendChild(line, rows, depth) abort$/;"	f
ApplyAppend	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:ApplyAppend(line, row, rows) abort$/;"	f
ApplyAutoUpdate	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:ApplyAutoUpdate() abort$/;"	f
ApplyAutoUpdate	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! s:ApplyAutoUpdate() abort$/;"	f
ApplyClose	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:ApplyClose() abort$/;"	f
ApplyExecute	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyExecute(bang, fpath) abort$/;"	f
ApplyExtracted	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyExtracted() abort$/;"	f
ApplyJump	autoload/plugged/vista.vim/autoload/vista/jump.vim	/^function! s:ApplyJump(lnum) abort$/;"	f
ApplyPeek	autoload/plugged/vista.vim/autoload/vista/source.vim	/^function! s:ApplyPeek(lnum, tag) abort$/;"	f
ApplyRun	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyRun(cmd) abort$/;"	f
ApplyRun	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:ApplyRun() abort$/;"	f
ApplyRun	autoload/plugged/vista.vim/autoload/vista/finder/skim.vim	/^function! s:ApplyRun() abort$/;"	f
ApplyRunAsync	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  function! s:ApplyRunAsync(cmd) abort$/;"	f
AsString	autoload/plugged/fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f
AsString	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f
AsUint16	autoload/plugged/fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f
AskPassArgs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
Assemble	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Assemble(line, depth) abort$/;"	f
AsyncRequest	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
AsyncRun	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^command! -bang -nargs=+ -range=0 -complete=file AsyncRun$/;"	c
AsyncRun_Job_AutoCmd	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoCmd(mode, auto)$/;"	f
AsyncRun_Job_AutoScroll	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoScroll()$/;"	f
AsyncRun_Job_CheckScroll	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_CheckScroll()$/;"	f
AsyncRun_Job_Cursor	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Cursor()$/;"	f
AsyncRun_Job_NeoVim	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_NeoVim(job_id, data, event)$/;"	f
AsyncRun_Job_OnCallback	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnCallback(channel, text)$/;"	f
AsyncRun_Job_OnClose	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnClose(channel)$/;"	f
AsyncRun_Job_OnExit	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnExit(job, message)$/;"	f
AsyncRun_Job_OnFinish	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnFinish()$/;"	f
AsyncRun_Job_OnTimer	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! g:AsyncRun_Job_OnTimer(id)$/;"	f
AsyncRun_Job_Start	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Start(cmd)$/;"	f
AsyncRun_Job_Status	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Status()$/;"	f
AsyncRun_Job_Stop	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Stop(how)$/;"	f
AsyncRun_Job_Update	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Update(count)$/;"	f
AsyncStop	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^command! -bar -bang -nargs=0 AsyncStop call asyncrun#stop('<bang>')$/;"	c
AsyncTask	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^command! -bang -nargs=* -range=0 -complete=customlist,s:complete AsyncTask$/;"	c
AsyncTaskEdit	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^command! -bang -nargs=? -complete=customlist,s:complete_edit AsyncTaskEdit $/;"	c
AsyncTaskFzf	plug-config/asynctask.vim	/^command! -nargs=0 AsyncTaskFzf call s:fzf_task()$/;"	c
AsyncTaskList	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^command! -bang -nargs=0 AsyncTaskList $/;"	c
AsyncTaskMacro	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^command! -bang -nargs=0 AsyncTaskMacro$/;"	c
AsyncTaskProfile	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^command! -nargs=? AsyncTaskProfile$/;"	c
AtomicBool	autoload/plugged/fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	t
Attr	autoload/plugged/fzf/src/tui/dummy.go	/^type Attr int$/;"	t
Attr	autoload/plugged/fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t
AttrRegular	autoload/plugged/fzf/src/tui/dummy.go	/^	AttrRegular Attr = Attr(0)$/;"	c
AttrRegular	autoload/plugged/fzf/src/tui/tcell.go	/^	AttrRegular Attr = 0$/;"	c
AutoCmd	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AutoCmd(name)$/;"	f
AutoPairsBackInsert	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:AutoUpdate(_fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdate	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
AutoUpdateWithDelay	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:AutoUpdateWithDelay(bufnr, fpath) abort$/;"	f
Autocmd	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
Autocommands	autoload/plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
Autoformat	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^    \\ Autoformat let winview=winsaveview()|wviminfo|<line1>,<line2>call s:TryAllFormatters(<f-args>)|call winrestview(winview)|rviminfo$/;"	c
AutoformatLine	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^    \\ AutoformatLine let winview=winsaveview()|wviminfo|<line1>,<line2>call s:TryAllFormatters(<f-args>)|call winrestview(winview)|rviminfo$/;"	c
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
BACKWARD	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    BACKWARD = 2$/;"	v	class:JumpDirection
BAR	autoload/plugged/vista.vim/test/data/175.cpp	/^		BAR$/;"	e	enum:example::__anon8	file:
BAR	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                BAR = 12$/;"	v	class:Foo.Bar.Qux.Bar
BAR	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                BAR = 12$/;"	v	class:Foo.Bar1.Qux.Bar
BAR	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                BAR = 12$/;"	v	class:Foo.Bar2.Qux.Bar
BAR	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        BAR = 12$/;"	v	class:Foo.Bar
BAR	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        BAR = 12$/;"	v	class:Foo.Bar1
BAR	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        BAR = 12$/;"	v	class:Foo.Bar2
BAZ	autoload/plugged/vista.vim/test/data/175.cpp	/^		BAZ$/;"	e	enum:__anon9::__anon10	file:
BIG_ENDIAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	28;"	d
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM5)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM6)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM7)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM8)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYPPC64LE)$/;"	m
BINARY64	autoload/plugged/fzf/Makefile	/^BINARY64       := fzf-$(GOOS)_amd64$/;"	m
BINARYARM5	autoload/plugged/fzf/Makefile	/^BINARYARM5     := fzf-$(GOOS)_arm5$/;"	m
BINARYARM6	autoload/plugged/fzf/Makefile	/^BINARYARM6     := fzf-$(GOOS)_arm6$/;"	m
BINARYARM7	autoload/plugged/fzf/Makefile	/^BINARYARM7     := fzf-$(GOOS)_arm7$/;"	m
BINARYARM8	autoload/plugged/fzf/Makefile	/^BINARYARM8     := fzf-$(GOOS)_arm8$/;"	m
BINARYPPC64LE	autoload/plugged/fzf/Makefile	/^BINARYPPC64LE  := fzf-$(GOOS)_ppc64le$/;"	m
BRACES	autoload/plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	autoload/plugged/ultisnips/test/constant.py	/^BS = "\\x7f"$/;"	v
BSpace	autoload/plugged/fzf/src/tui/tui.go	/^	BSpace$/;"	c
BTab	autoload/plugged/fzf/src/tui/tui.go	/^	BTab$/;"	c
BUFSIZ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	99;"	d
BUILD_FLAGS	autoload/plugged/fzf/Makefile	/^BUILD_FLAGS    := -a -ldflags "-X main.revision=$(REVISION) -w '-extldflags=$(LDFLAGS)'" -tags "$(TAGS)"$/;"	m
BYTE_ORDER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	30;"	d
Backspace_TabStop_NotZero	autoload/plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	autoload/plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BackwardEOF	autoload/plugged/fzf/src/tui/tui.go	/^	BackwardEOF$/;"	c
Bar	autoload/plugged/vista.vim/test/data/70.py	/^    class Bar:$/;"	c	class:Foo
Bar	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            class Bar:$/;"	c	class:Foo.Bar.Qux
Bar	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            class Bar:$/;"	c	class:Foo.Bar1.Qux
Bar	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            class Bar:$/;"	c	class:Foo.Bar2.Qux
Bar	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^    class Bar:$/;"	c	class:Foo
Bar1	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^    class Bar1:$/;"	c	class:Foo
Bar2	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^    class Bar2:$/;"	c	class:Foo
BasesForBuffer	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:BasesForBuffer() abort$/;"	f
Baz	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Baz:$/;"	c	class:Foo.Bar.Qux.Bar
Baz	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Baz:$/;"	c	class:Foo.Bar1.Qux.Bar
Baz	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Baz:$/;"	c	class:Foo.Bar2.Qux.Bar
Baz	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Baz:$/;"	c	class:Foo.Bar
Baz	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Baz:$/;"	c	class:Foo.Bar1
Baz	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Baz:$/;"	c	class:Foo.Bar2
Bdelete	autoload/plugged/vim-bbye/plugin/bbye.vim	/^command! -bang -complete=buffer -nargs=? Bdelete$/;"	c
Bg	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Bg() Color {$/;"	f
BlameBufnr	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
BlameCommit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
BlameCommitFileLnum	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
BlameFileType	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameFileType() abort$/;"	f
BlameJump	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
BlameLeave	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
BlameQuit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
BlameRehighlight	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
BlameSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
Blastoff	autoload/plugged/vim-autoformat/samples/java.java	/^public class Blastoff{ public static void main(String[] args) { public static void countdown(int n, int m) { if (n == 0) { System.out.println("Blastoff!"); } else { System.out.println(n); countdown(n - 1); } } }}$/;"	c
Blink	autoload/plugged/fzf/src/tui/dummy.go	/^	Blink            = Attr(1 << 4)$/;"	c
Blink	autoload/plugged/fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c
Blink2	autoload/plugged/fzf/src/tui/dummy.go	/^	Blink2           = Attr(1 << 5)$/;"	c
BlobTemp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
BlurStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
Bold	autoload/plugged/fzf/src/tui/dummy.go	/^	Bold             = Attr(1)$/;"	c
Bold	autoload/plugged/fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c
Bookmark.AddBookmark	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.Edit	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
Bookmark.GetNodeForName	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BorderCharacter	autoload/plugged/fzf/src/tui/tui.go	/^type BorderCharacter int$/;"	t
BorderHorizontal	autoload/plugged/fzf/src/tui/tui.go	/^	BorderHorizontal$/;"	c
BorderNone	autoload/plugged/fzf/src/tui/tui.go	/^	BorderNone BorderShape = iota$/;"	c
BorderRounded	autoload/plugged/fzf/src/tui/tui.go	/^	BorderRounded$/;"	c
BorderShape	autoload/plugged/fzf/src/tui/tui.go	/^type BorderShape int$/;"	t
BorderSharp	autoload/plugged/fzf/src/tui/tui.go	/^	BorderSharp$/;"	c
BorderStyle	autoload/plugged/fzf/src/tui/tui.go	/^type BorderStyle struct {$/;"	t
Bracey	autoload/plugged/bracey.vim/plugin/bracey.vim	/^command! -nargs=0 Bracey call bracey#start()$/;"	c
BraceyEval	autoload/plugged/bracey.vim/plugin/bracey.vim	/^command! -nargs=* BraceyEval call bracey#evalFile(<f-args>)$/;"	c
BraceyReload	autoload/plugged/bracey.vim/plugin/bracey.vim	/^command! -nargs=0 BraceyReload call bracey#reload()$/;"	c
BraceyStop	autoload/plugged/bracey.vim/plugin/bracey.vim	/^command! -nargs=0 BraceyStop  call bracey#stop()$/;"	c
BufName	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
Bug1251994	autoload/plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
BuildCmd	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:BuildCmd(origin_fpath) abort$/;"	f
BuildESLintLocalCmd	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    function! g:BuildESLintLocalCmd()$/;"	f
BuildESLintTmpFile	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    function! g:BuildESLintTmpFile(path, ext)$/;"	f
BuildEnvPrefix	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
BuildPattern	autoload/plugged/fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, normalize bool, forward bool,$/;"	f
BuildRow	autoload/plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:BuildRow(idx, line) abort$/;"	f
BuildShell	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, args) abort$/;"	f
BuildStyleLintCmd	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    function! g:BuildStyleLintCmd()$/;"	f
BuildXOLocalCmd	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    function! g:BuildXOLocalCmd()$/;"	f
BuiltinTempname	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:BuiltinTempname() abort$/;"	f
Bwipeout	autoload/plugged/vim-bbye/plugin/bbye.vim	/^command! -bang -complete=buffer -nargs=? Bwipeout$/;"	c
ByOrder	autoload/plugged/fzf/src/result.go	/^type ByOrder []Offset$/;"	t
ByRelevance	autoload/plugged/fzf/src/result.go	/^type ByRelevance []Result$/;"	t
ByRelevanceTac	autoload/plugged/fzf/src/result.go	/^type ByRelevanceTac []Result$/;"	t
Bytes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Bytes() []byte {$/;"	f
CFill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CFill(fg Color, bg Color, attr Attr, text string) FillReturn {$/;"	f
CFill	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CFill(fg Color, bg Color, a Attr, str string) FillReturn {$/;"	f
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\$\\d+")$/;"	v	class:MirrorToken
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+[:}]")$/;"	v	class:TabStopToken
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\\/")$/;"	v	class:TransformationToken
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\|")$/;"	v	class:ChoicesToken
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!p\\s")$/;"	v	class:PythonCodeToken
CHECK	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!v\\s")$/;"	v	class:VimLCodeToken
CLK_TCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	41;"	d
CLOCKS_PER_SEC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	34;"	d
CLOCK_BOOTTIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	60;"	d
CLOCK_BOOTTIME_ALARM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	64;"	d
CLOCK_MONOTONIC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	48;"	d
CLOCK_MONOTONIC_COARSE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	58;"	d
CLOCK_MONOTONIC_RAW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	54;"	d
CLOCK_PROCESS_CPUTIME_ID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	50;"	d
CLOCK_REALTIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	46;"	d
CLOCK_REALTIME_ALARM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	62;"	d
CLOCK_REALTIME_COARSE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	56;"	d
CLOCK_TAI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	66;"	d
CLOCK_THREAD_CPUTIME_ID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	52;"	d
CLONE_CHILD_CLEARTID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	60;"	d
CLONE_CHILD_SETTID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	65;"	d
CLONE_DETACHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	62;"	d
CLONE_FILES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	45;"	d
CLONE_FS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	44;"	d
CLONE_IO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	73;"	d
CLONE_NEWCGROUP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	67;"	d
CLONE_NEWIPC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	69;"	d
CLONE_NEWNET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	72;"	d
CLONE_NEWNS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	55;"	d
CLONE_NEWPID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	71;"	d
CLONE_NEWUSER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	70;"	d
CLONE_NEWUTS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	68;"	d
CLONE_PARENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	52;"	d
CLONE_PARENT_SETTID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	58;"	d
CLONE_PIDFD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	47;"	d
CLONE_PTRACE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	49;"	d
CLONE_SETTLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	57;"	d
CLONE_SIGHAND	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	46;"	d
CLONE_SYSVSEM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	56;"	d
CLONE_THREAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	54;"	d
CLONE_UNTRACED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	63;"	d
CLONE_VFORK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	50;"	d
CLONE_VM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	43;"	d
CODI	autoload/plugged/codi.vim/autoload/codi.vim	/^augroup CODI$/;"	a
CODI_TARGET	autoload/plugged/codi.vim/autoload/codi.vim	/^augroup CODI_TARGET$/;"	a
COLORIZER_SETUP_HOOK	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	function COLORIZER_SETUP_HOOK()$/;"	f
COMPLETION_OPTIONS	autoload/plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	autoload/plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	autoload/plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
CPU_ALLOC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	116;"	d
CPU_ALLOC_SIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	115;"	d
CPU_AND	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	102;"	d
CPU_AND_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	108;"	d
CPU_CLR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	84;"	d
CPU_CLR_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	91;"	d
CPU_COUNT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	88;"	d
CPU_COUNT_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	95;"	d
CPU_EQUAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	97;"	d
CPU_EQUAL_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	99;"	d
CPU_FREE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	117;"	d
CPU_ISSET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	85;"	d
CPU_ISSET_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	92;"	d
CPU_OR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	104;"	d
CPU_OR_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	110;"	d
CPU_SET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	83;"	d
CPU_SETSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	82;"	d
CPU_SET_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	90;"	d
CPU_XOR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	106;"	d
CPU_XOR_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	112;"	d
CPU_ZERO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	87;"	d
CPU_ZERO_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	94;"	d
CPrint	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CPrint(pair ColorPair, attr Attr, text string) {$/;"	f
CPrint	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CPrint(pair ColorPair, attr Attr, text string) {$/;"	f
CSIGNAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	42;"	d
CacheKey	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f
CalculatePosition	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:CalculatePosition(lines) abort$/;"	f
Call	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
Canceled	autoload/plugged/vim-autoformat/samples/python.py	/^    Canceled=__name__+".Canceled"     $/;"	v
Canceled	autoload/plugged/vim-autoformat/samples/python.py	/^    class Canceled(Exception):     $/;"	c
Case	autoload/plugged/fzf/src/options.go	/^type Case int$/;"	t
CaseIgnore	autoload/plugged/fzf/src/options.go	/^	CaseIgnore$/;"	c
CaseRespect	autoload/plugged/fzf/src/options.go	/^	CaseRespect$/;"	c
CaseSmart	autoload/plugged/fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c
CeilingDirectories	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
Cfind	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Cfind   exe s:Grep(<q-bang>, <q-args>, 'find', '')$/;"	c
Change	autoload/plugged/fzf/src/tui/tui.go	/^	Change$/;"	c
ChangedLines	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ChangedLines()$/;"	f
ChannelSet	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:ChannelSet(dict, key, val)$/;"	f
Chars	autoload/plugged/fzf/src/util/chars.go	/^type Chars struct {$/;"	t
CheckDefined	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors)$/;"	f
CheckIsValidBase	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:CheckIsValidBase(number) abort$/;"	f
Chmod	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=+ Chmod$/;"	c
Chmod	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:Chmod(bang, perm, ...) abort$/;"	f
Choices	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^class Choices(TabStop):$/;"	c
ChoicesToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ChoicesToken(Token):$/;"	c
Choices_AsNestedElement_CanBeTabbedInto	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedInto(_VimTest):$/;"	c
Choices_AsNestedElement_CanBeTabbedThrough	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedThrough(_VimTest):$/;"	c
Choices_AsNestedElement_ShallNotTakeActionIfParentInput	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShallNotTakeActionIfParentInput(_VimTest):$/;"	c
Choices_AsNestedElement_ShouldOverwriteDefaultText	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShouldOverwriteDefaultText(_VimTest):$/;"	c
Choices_CanTakeNonAsciiCharacters	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_CanTakeNonAsciiCharacters(_VimTest):$/;"	c
Choices_EmptyChoiceWillBeDiscarded	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_EmptyChoiceWillBeDiscarded(_VimTest):$/;"	c
Choices_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_ExpectCorrectResult(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldWaitForInputs	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldWaitForInputs(_VimTest):$/;"	c
Choices_ShouldThrowErrorWithZeroTabstop	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_ShouldThrowErrorWithZeroTabstop(_VimTest):$/;"	c
Choices_WilNotMessWithTabstopsAfterIt	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_WilNotMessWithTabstopsAfterIt(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_CharTyped	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_CharTyped(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex(_VimTest):$/;"	c
Choices_WillBeExpandedToInlineSelection	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillBeExpandedToInlineSelection(_VimTest):$/;"	c
Choices_WillNotExpand_If_ChoiceListIsEmpty	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillNotExpand_If_ChoiceListIsEmpty(_VimTest):$/;"	c
Choices_With_Mirror	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror(_VimTest):$/;"	c
Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone	autoload/plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone(_VimTest):$/;"	c
ChompDefault	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
ChompError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompError(...) abort$/;"	f
Chunk	autoload/plugged/fzf/src/chunklist.go	/^type Chunk struct {$/;"	t
ChunkCache	autoload/plugged/fzf/src/cache.go	/^type ChunkCache struct {$/;"	t
ChunkList	autoload/plugged/fzf/src/chunklist.go	/^type ChunkList struct {$/;"	t
ClangFormatConfigFileExists	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^function! g:ClangFormatConfigFileExists()$/;"	f
Clear	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Clear() {$/;"	f
Clear	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Clear()            {}$/;"	f
Clear	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Clear() {$/;"	f
Clear	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Clear() {$/;"	f
Clear	autoload/plugged/fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f
ClearAugroups	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! s:ClearAugroups(...) abort$/;"	f
ClearHighlighting	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:ClearHighlighting()$/;"	f
ClearOtherEvents	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:ClearOtherEvents(group) abort$/;"	f
ClearTempData	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:ClearTempData() abort$/;"	f
Clocate	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Clocate exe s:Grep(<q-bang>, <q-args>, 'locate', '')$/;"	c
Close	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Close()            {}$/;"	f
Close	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Close() {$/;"	f
Close	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Close() {$/;"	f
Close	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Close() {$/;"	f
Close	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Close() {$/;"	f
CloseOnCursorMoved	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:CloseOnCursorMoved() abort$/;"	f
CloseOnWinEnter	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:CloseOnWinEnter() abort$/;"	f
ClosePopup	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:ClosePopup() abort$/;"	f
CocAction	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocAction :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, <f-args>])$/;"	c
CocAction	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocAction(name, ...) abort$/;"	f
CocActionAsync	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(name, ...) abort$/;"	f
CocCommand	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList -range CocCommand :call coc#rpc#notify('runCommand', [<f-args>])$/;"	c
CocConfig	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDiagnostics	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? CocDiagnostics  :call s:OpenDiagnostics(<f-args>)$/;"	c
CocDisable	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable(0)$/;"	c
CocFirst	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocFirst        :call coc#rpc#notify('listFirst', [<f-args>])$/;"	c
CocFix	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocFix    :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, 'quickfix'])$/;"	c
CocHasProvider	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocHasProvider(name) abort$/;"	f
CocInfo	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:ShowInfo()$/;"	c
CocInstall	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -bar -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_extension([<f-args>])$/;"	c
CocLast	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocLast         :call coc#rpc#notify('listLast', [<f-args>])$/;"	c
CocList	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call coc#rpc#notify('openList',  [<f-args>])$/;"	c
CocListResume	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListResume   :call coc#rpc#notify('listResume', [<f-args>])$/;"	c
CocLocalConfig	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocLocalConfig  :call coc#rpc#notify('openLocalConfig', [])$/;"	c
CocLocations	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocNext         :call coc#rpc#notify('listNext', [<f-args>])$/;"	c
CocNotify	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocNotify(...) abort$/;"	f
CocOpenLog	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call coc#rpc#notify('openLog',  [])$/;"	c
CocPrev	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocPrev         :call coc#rpc#notify('listPrev', [<f-args>])$/;"	c
CocRebuild	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRebuild      :call coc#util#rebuild()$/;"	c
CocRegistNotification	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocRegistNotification(id, method, cb) abort$/;"	f
CocRequest	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocSearch	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:SearchOptions  CocSearch    :call coc#rpc#notify('search', [<f-args>])$/;"	c
CocStart	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocTagFunc	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocTagFunc(pattern, flags, info) abort$/;"	f
CocUninstall	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call CocActionAsync('uninstallExtension', <f-args>)$/;"	c
CocUpdate	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call coc#util#update_extensions(1)$/;"	c
CocUpdateSync	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 -bar CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CodeActionFromSelected	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
Codi	autoload/plugged/codi.vim/plugin/codi.vim	/^command! -nargs=? -bang -bar -complete=customlist,codi#complete Codi call codi#run(<bang>0, <f-args>)$/;"	c
CodiUpdate	autoload/plugged/codi.vim/plugin/codi.vim	/^command! -bar CodiUpdate call codi#update()$/;"	c
ColBorder	autoload/plugged/fzf/src/tui/tui.go	/^	ColBorder          ColorPair$/;"	v
ColCurrent	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrent         ColorPair$/;"	v
ColCurrentCursor	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentCursor   ColorPair$/;"	v
ColCurrentMatch	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentMatch    ColorPair$/;"	v
ColCurrentSelected	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentSelected ColorPair$/;"	v
ColCursor	autoload/plugged/fzf/src/tui/tui.go	/^	ColCursor          ColorPair$/;"	v
ColHeader	autoload/plugged/fzf/src/tui/tui.go	/^	ColHeader          ColorPair$/;"	v
ColInfo	autoload/plugged/fzf/src/tui/tui.go	/^	ColInfo            ColorPair$/;"	v
ColMatch	autoload/plugged/fzf/src/tui/tui.go	/^	ColMatch           ColorPair$/;"	v
ColNormal	autoload/plugged/fzf/src/tui/tui.go	/^	ColNormal          ColorPair$/;"	v
ColPreview	autoload/plugged/fzf/src/tui/tui.go	/^	ColPreview         ColorPair$/;"	v
ColPreviewBorder	autoload/plugged/fzf/src/tui/tui.go	/^	ColPreviewBorder   ColorPair$/;"	v
ColPrompt	autoload/plugged/fzf/src/tui/tui.go	/^	ColPrompt          ColorPair$/;"	v
ColSelected	autoload/plugged/fzf/src/tui/tui.go	/^	ColSelected        ColorPair$/;"	v
ColSpinner	autoload/plugged/fzf/src/tui/tui.go	/^	ColSpinner         ColorPair$/;"	v
Color	autoload/plugged/fzf/src/tui/tui.go	/^type Color int32$/;"	t
ColorPair	autoload/plugged/fzf/src/tui/tui.go	/^type ColorPair struct {$/;"	t
ColorTheme	autoload/plugged/fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	t
ColorizerAttachToBuffer	autoload/plugged/nvim-colorizer.lua/plugin/colorizer.vim	/^command! ColorizerAttachToBuffer lua require'colorizer'.attach_to_buffer(0)$/;"	c
ColorizerDetachFromBuffer	autoload/plugged/nvim-colorizer.lua/plugin/colorizer.vim	/^command! ColorizerDetachFromBuffer lua require'colorizer'.detach_from_buffer(0)$/;"	c
ColorizerReloadAllBuffers	autoload/plugged/nvim-colorizer.lua/plugin/colorizer.vim	/^command! ColorizerReloadAllBuffers lua require'colorizer'.reload_all_buffers()$/;"	c
ColorizerToggle	autoload/plugged/nvim-colorizer.lua/plugin/colorizer.vim	/^command! ColorizerToggle lua local c = require'colorizer'$/;"	c
Colors	autoload/plugged/fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f
CommandList	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
Comment	plug-config/vim-commentary.vim	/^function! Comment()$/;"	f
Commentary	autoload/plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
CommitInteractive	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
CommitSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Compare	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:Compare(s1, s2) abort$/;"	f
Compare	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Compare(s1, s2) abort$/;"	f
Compare	autoload/plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:Compare(i1, i2) abort$/;"	f
CompareAge	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
CompleteArgs	autoload/plugged/vim-gist/plugin/gist.vim	/^function! s:CompleteArgs(arg_lead,cmdline,cursor_pos)$/;"	f
CompleteHeads	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
CompleteRemote	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
CompleteRevision	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
CompleteSub	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
CompletionTest	autoload/plugged/fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	autoload/plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	autoload/plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	autoload/plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
Config	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^function! s:Config() abort$/;"	f
ConfigTimestamps	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
Constrain	autoload/plugged/fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f
Constrain32	autoload/plugged/fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f
ContainWhitespaceOnly	autoload/plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:ContainWhitespaceOnly(str) abort$/;"	f
ContainingCommit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
ContextCommentstringBootstrap	autoload/plugged/vim-context-commentstring/plugin/context-commentstring.vim	/^augroup ContextCommentstringBootstrap$/;"	a
ContextSnippet	autoload/plugged/coc-snippets/python/ultisnips.py	/^class ContextSnippet(object):$/;"	c
ContextSnippets_ContextHasAccessToVisual	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
CopyRunes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) CopyRunes(dest []rune) {$/;"	f
CountItems	autoload/plugged/fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f
CreateTabTreeVCS	autoload/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
Creator.BufNamePrefix	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CssFile	autoload/plugged/bracey.vim/server/cssfile.js	/^function CssFile(source, path, callback){$/;"	c
CtrlA	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlA$/;"	c
CtrlAltA	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlAltA = AltZ + 1$/;"	c
CtrlAltM	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlAltM = CtrlAltA + 'm' - 'a'$/;"	c
CtrlB	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlB$/;"	c
CtrlBackSlash	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlBackSlash$/;"	c
CtrlC	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlC$/;"	c
CtrlCaret	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlCaret$/;"	c
CtrlD	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlD$/;"	c
CtrlE	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlE$/;"	c
CtrlF	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlF$/;"	c
CtrlG	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlG$/;"	c
CtrlH	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlH$/;"	c
CtrlJ	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlJ$/;"	c
CtrlK	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlK$/;"	c
CtrlL	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlL$/;"	c
CtrlM	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlM$/;"	c
CtrlN	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlN$/;"	c
CtrlO	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlO$/;"	c
CtrlP	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlP$/;"	c
CtrlQ	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlQ$/;"	c
CtrlR	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlR$/;"	c
CtrlRightBracket	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlRightBracket$/;"	c
CtrlS	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlS$/;"	c
CtrlSlash	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlSlash$/;"	c
CtrlSpace	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlSpace$/;"	c
CtrlT	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlT$/;"	c
CtrlU	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlU$/;"	c
CtrlV	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlV$/;"	c
CtrlW	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlW$/;"	c
CtrlX	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlX$/;"	c
CtrlY	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlY$/;"	c
CtrlZ	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlZ$/;"	c
CurrentFormatter	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^command! CurrentFormatter call s:CurrentFormatter()$/;"	c
CurrentFormatter	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:CurrentFormatter()$/;"	f
CurrentLineWhitespaceOff	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -nargs=* CurrentLineWhitespaceOff echoerr 'E492: Deprecated command CurrentLineWhitespaceOff: '.s:errmsg$/;"	c
CurrentLineWhitespaceOn	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! CurrentLineWhitespaceOn echoerr 'E492: Deprecated command CurrentLineWhitespaceOn: '.s:errmsg$/;"	c
CursorMovement_BS_InEditMode	autoload/plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
CursorRangeFromSelected	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:CursorRangeFromSelected(type, ...) abort$/;"	f
DEBUG	autoload/plugged/fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v
DELIMITER	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^DELIMITER = "\\u00a0:\\u00a0"$/;"	v
DUMP_FILENAME	autoload/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = ($/;"	v
Dark256	autoload/plugged/fzf/src/tui/tui.go	/^	Dark256   *ColorTheme$/;"	v
Debug	autoload/plugged/vim-rooter/test/runner.vim	/^function Debug(msg)$/;"	f
Default16	autoload/plugged/fzf/src/tui/tui.go	/^	Default16 *ColorTheme$/;"	v
Del	autoload/plugged/fzf/src/tui/tui.go	/^	Del$/;"	c
Delete	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Delete$/;"	c
DeleteCurrentTabStop1_JumpBack	autoload/plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	autoload/plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	autoload/plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	autoload/plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	autoload/plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	autoload/plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
Delimiter	autoload/plugged/fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	t
DescendantsOf	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:DescendantsOf(candidates, root_line, scope) abort$/;"	f
DescendantsOfRoot	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:DescendantsOfRoot(candidates, root_line) abort$/;"	f
DetectWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DetectWhitespace(line1, line2)$/;"	f
DifftoolSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Dim	autoload/plugged/fzf/src/tui/dummy.go	/^	Dim              = Attr(1 << 1)$/;"	c
Dim	autoload/plugged/fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c
Dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
DirCheck	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
DirCommitFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
DirRev	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
Disable	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
DisableStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableStripWhitespaceOnSave call <SID>DisableStripWhitespaceOnSave()$/;"	c
DisableStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableStripWhitespaceOnSave()$/;"	f
DisableWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableWhitespace call <SID>DisableWhitespace()$/;"	c
DisableWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableWhitespace()$/;"	f
Dispatch	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dispatch(bang, options) abort$/;"	f
Dispatch	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Dispatch(F, ...) abort$/;"	f
Dispatch	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Dispatch(F, ...) abort$/;"	f
DispatchDisplayer	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:DispatchDisplayer(Displayer, lnum, tag_or_raw_lines) abort$/;"	f
Display	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:Display(msg, win_id) abort$/;"	f
DisplayAt	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:DisplayAt(lnum, tag, vista_winid) abort$/;"	f
DisplayRawAt	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:DisplayRawAt(lnum, lines, vista_winid) abort$/;"	f
DisplayWithDelay	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:DisplayWithDelay(lines) abort$/;"	f
Do	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
Do	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
DoAutocmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(cmd) abort$/;"	f
DoAutocmdChanged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
DoNotCrashOnUndoAndJumpInNestedSnippet	autoload/plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	autoload/plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
DoStagePushHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
DoStageUnpushed	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
DoStageUnpushedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
DoStageUnstaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
DoStageUnstagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
DoStageUntracked	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
DoStageUntrackedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
DoToggleHeadHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
DoToggleHelpHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
DoTogglePushHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
DoToggleStaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
DoToggleStagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
DoToggleUnpulled	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
DoToggleUnpulledHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
DoToggleUnpushed	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
DoToggleUnpushedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
DoToggleUnstaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
DoToggleUnstagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
DoToggleUntracked	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
DoToggleUntrackedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
DoUnstageStaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
DoUnstageStagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
DoUnstageUnpulled	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
DoUnstageUnpulledHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
DoUnstageUnpushed	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
DoUnstageUnstaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
DoesAutoWrap	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) DoesAutoWrap() bool { return false }$/;"	f
DoesAutoWrap	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) DoesAutoWrap() bool {$/;"	f
DoesAutoWrap	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) DoesAutoWrap() bool {$/;"	f
DoesRangeEqualBuffer	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^function! g:DoesRangeEqualBuffer(first, last)$/;"	f
DotRelative	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
DoubleClick	autoload/plugged/fzf/src/tui/tui.go	/^	DoubleClick$/;"	c
Down	autoload/plugged/fzf/src/tui/tui.go	/^	Down$/;"	c
DurWithin	autoload/plugged/fzf/src/util/util.go	/^func DurWithin($/;"	f
E2BIG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	11;"	d
EA	autoload/plugged/ultisnips/test/constant.py	/^EA = "#"  # Expand anonymous$/;"	v
EACCES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	17;"	d
EADDRINUSE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	81;"	d
EADDRNOTAVAIL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	82;"	d
EADV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	51;"	d
EAFNOSUPPORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	80;"	d
EAGAIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	15;"	d
EALREADY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	97;"	d
EBADE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	33;"	d
EBADF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	13;"	d
EBADFD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	60;"	d
EBADMSG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	57;"	d
EBADR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	34;"	d
EBADRQC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	37;"	d
EBADSLT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	38;"	d
EBFONT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	42;"	d
EBUSY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	20;"	d
ECANCELED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	109;"	d
ECANCELED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	34;"	d
ECHILD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	14;"	d
ECHRNG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	25;"	d
ECOMM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	53;"	d
ECONNABORTED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	86;"	d
ECONNREFUSED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	94;"	d
ECONNRESET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	87;"	d
EDEADLK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	7;"	d
EDEADLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	40;"	d
EDESTADDRREQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	72;"	d
EDOM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	37;"	d
EDOTDOT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	56;"	d
EDQUOT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	105;"	d
EEXIST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	21;"	d
EFAULT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	18;"	d
EFBIG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	31;"	d
EHOSTDOWN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	95;"	d
EHOSTUNREACH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	96;"	d
EHWPOISON	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	121;"	d
EHWPOISON	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	50;"	d
EIDRM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	24;"	d
EILSEQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	67;"	d
EINPROGRESS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	98;"	d
EINTR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	8;"	d
EINVAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	26;"	d
EIO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	9;"	d
EISCONN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	89;"	d
EISDIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	25;"	d
EISNAM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	103;"	d
EKEYEXPIRED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	111;"	d
EKEYREJECTED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	113;"	d
EKEYREVOKED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	112;"	d
EL2HLT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	32;"	d
EL2NSYNC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	26;"	d
EL3HLT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	27;"	d
EL3RST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	28;"	d
ELIBACC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	62;"	d
ELIBBAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	63;"	d
ELIBEXEC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	66;"	d
ELIBMAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	65;"	d
ELIBSCN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	64;"	d
ELNRNG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	29;"	d
ELOOP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	21;"	d
EMEDIUMTYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	108;"	d
EMFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	28;"	d
EMLINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	35;"	d
EMSGSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	73;"	d
EMULTIHOP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	55;"	d
ENAMETOOLONG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	8;"	d
ENAVAIL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	102;"	d
ENETDOWN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	83;"	d
ENETRESET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	85;"	d
ENETUNREACH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	84;"	d
ENFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	27;"	d
ENOANO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	36;"	d
ENOBUFS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	88;"	d
ENOCSI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	31;"	d
ENODATA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	44;"	d
ENODEV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	23;"	d
ENOENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	6;"	d
ENOEXEC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	12;"	d
ENOKEY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	110;"	d
ENOLCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	9;"	d
ENOLINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	50;"	d
ENOMEDIUM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	107;"	d
ENOMEM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	16;"	d
ENOMSG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	23;"	d
ENONET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	47;"	d
ENOPKG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	48;"	d
ENOPROTOOPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	75;"	d
ENOSPC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	32;"	d
ENOSR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	46;"	d
ENOSTR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	43;"	d
ENOSYS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	18;"	d
ENOTBLK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	19;"	d
ENOTCONN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	90;"	d
ENOTDIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	24;"	d
ENOTEMPTY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	20;"	d
ENOTNAM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	101;"	d
ENOTRECOVERABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	117;"	d
ENOTRECOVERABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	42;"	d
ENOTSOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	71;"	d
ENOTSUP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	30;"	d
ENOTTY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	29;"	d
ENOTUNIQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	59;"	d
ENXIO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	10;"	d
EOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	104;"	d
EOPNOTSUPP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	78;"	d
EOVERFLOW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	58;"	d
EOWNERDEAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	116;"	d
EOWNERDEAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	38;"	d
EPERM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	5;"	d
EPFNOSUPPORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	79;"	d
EPIPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	36;"	d
EPROTO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	54;"	d
EPROTONOSUPPORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	76;"	d
EPROTOTYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	74;"	d
ERANGE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	38;"	d
EREMCHG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	61;"	d
EREMOTE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	49;"	d
EREMOTEIO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	104;"	d
ERESTART	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	68;"	d
ERFKILL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	119;"	d
ERFKILL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	46;"	d
EROFS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	34;"	d
ESC	autoload/plugged/fzf/src/tui/tui.go	/^	ESC$/;"	c
ESC	autoload/plugged/ultisnips/test/constant.py	/^ESC = "\\x1b"$/;"	v
ESHUTDOWN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	91;"	d
ESOCKTNOSUPPORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	77;"	d
ESPIPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	33;"	d
ESRCH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	7;"	d
ESRMNT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	52;"	d
ESTALE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	99;"	d
ESTRPIPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	69;"	d
ETIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	45;"	d
ETIMEDOUT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	93;"	d
ETOOMANYREFS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	92;"	d
ETXTBSY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	30;"	d
EUCLEAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	100;"	d
EUNATCH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	30;"	d
EUSERS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	70;"	d
EWOULDBLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	22;"	d
EX	autoload/plugged/ultisnips/test/constant.py	/^EX = "\\t"  # EXPAND$/;"	v
EXDEV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	22;"	d
EXFULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	35;"	d
EXIT_FAILURE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	91;"	d
EXIT_SUCCESS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	92;"	d
Echo	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! s:Echo(group, msg) abort$/;"	f
EchoExec	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:EchoExec(...) abort$/;"	f
EchoScope	autoload/plugged/vista.vim/autoload/vista/echo.vim	/^function! s:EchoScope(scope) abort$/;"	f
EchoScopeFromCacheIsOk	autoload/plugged/vista.vim/autoload/vista/echo.vim	/^function! s:EchoScopeFromCacheIsOk() abort$/;"	f
Echon	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! s:Echon(group, msg) abort$/;"	f
EditableTextObject	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class EditableTextObject(TextObject):$/;"	c
EditorconfigFileExists	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^function! g:EditorconfigFileExists()$/;"	f
Emmet	autoload/plugged/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	autoload/plugged/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	autoload/plugged/emmet-vim/unittest.vim	/^command! -bang -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests("<bang>", <f-args>)$/;"	c
EmptyMerger	autoload/plugged/fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]Result{}, false, false)$/;"	v
EmptyTheme	autoload/plugged/fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f
Enable	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Enable(initialize)$/;"	f
EnableStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableStripWhitespaceOnSave call <SID>EnableStripWhitespaceOnSave()$/;"	c
EnableStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableStripWhitespaceOnSave()$/;"	f
EnableWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableWhitespace call <SID>EnableWhitespace()$/;"	c
EnableWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableWhitespace()$/;"	f
Enclose	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Enclose(y int, x int) bool {$/;"	f
Enclose	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Enclose(y int, x int) bool {$/;"	f
End	autoload/plugged/fzf/src/tui/tui.go	/^	End$/;"	c
EndOfTextToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EndOfTextToken(Token):$/;"	c
EqualMatch	autoload/plugged/fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Erase	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Erase() {$/;"	f
Erase	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Erase() {$/;"	f
Error	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:Error(message) abort$/;"	f
ErrorMsg	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ErrorMsg(msg)$/;"	f
EscapeCharToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
EunuchRename	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! EunuchRename(src, dst) abort$/;"	f
Event	autoload/plugged/fzf/src/tui/tui.go	/^type Event struct {$/;"	t
Event.New	autoload/plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
EventBox	autoload/plugged/fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	t
EventType	autoload/plugged/fzf/src/util/eventbox.go	/^type EventType int$/;"	t
Events	autoload/plugged/fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t
EvtClose	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c
EvtHeader	autoload/plugged/fzf/src/constants.go	/^	EvtHeader$/;"	c
EvtReadFin	autoload/plugged/fzf/src/constants.go	/^	EvtReadFin$/;"	c
EvtReadFin	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c
EvtReadNew	autoload/plugged/fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c
EvtReadNew	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c
EvtReady	autoload/plugged/fzf/src/constants.go	/^	EvtReady$/;"	c
EvtSearchFin	autoload/plugged/fzf/src/constants.go	/^	EvtSearchFin$/;"	c
EvtSearchFin	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c
EvtSearchNew	autoload/plugged/fzf/src/constants.go	/^	EvtSearchNew$/;"	c
EvtSearchNew	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c
EvtSearchProgress	autoload/plugged/fzf/src/constants.go	/^	EvtSearchProgress$/;"	c
EvtSearchProgress	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c
ExactMatchNaive	autoload/plugged/fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Exception	autoload/plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExcludeOther	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
ExcludePaths	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
ExclusiveSelection_RealWorldCase_Test	autoload/plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	autoload/plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExecCommand	autoload/plugged/fzf/src/util/util_unix.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f
ExecCommand	autoload/plugged/fzf/src/util/util_windows.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f
ExecCommandWith	autoload/plugged/fzf/src/util/util_unix.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f
ExecCommandWith	autoload/plugged/fzf/src/util/util_windows.go	/^func ExecCommandWith(_shell string, command string, setpgid bool) *exec.Cmd {$/;"	f
ExecPath	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
Execute	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Execute(bang, should_display) abort$/;"	f
Execute	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Execute(bang, should_display) abort$/;"	f
ExitSnippetModeAfterTabstopZero	autoload/plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
Expand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
ExpandInTheMiddleOfLine_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
ExpandMap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
ExpandSplit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandSplit(string, ...) abort$/;"	f
ExpandVar	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
ExpandVarLegacy	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
ExpireStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
ExtensionList	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
Extract	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Extract(symbols) abort$/;"	f
ExtractLinewise	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ExtractLinewise(raw_data) abort$/;"	f
ExtractOpt	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ExtractOpt(command)$/;"	f
ExtractOpt	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:ExtractOpt(command)$/;"	f
F	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FindComplete -nargs=+ -range=-1 F$/;"	c
F1	autoload/plugged/fzf/src/tui/tui.go	/^	F1$/;"	c
F10	autoload/plugged/fzf/src/tui/tui.go	/^	F10$/;"	c
F11	autoload/plugged/fzf/src/tui/tui.go	/^	F11$/;"	c
F12	autoload/plugged/fzf/src/tui/tui.go	/^	F12$/;"	c
F2	autoload/plugged/fzf/src/tui/tui.go	/^	F2$/;"	c
F3	autoload/plugged/fzf/src/tui/tui.go	/^	F3$/;"	c
F4	autoload/plugged/fzf/src/tui/tui.go	/^	F4$/;"	c
F5	autoload/plugged/fzf/src/tui/tui.go	/^	F5$/;"	c
F6	autoload/plugged/fzf/src/tui/tui.go	/^	F6$/;"	c
F7	autoload/plugged/fzf/src/tui/tui.go	/^	F7$/;"	c
F8	autoload/plugged/fzf/src/tui/tui.go	/^	F8$/;"	c
F9	autoload/plugged/fzf/src/tui/tui.go	/^	F9$/;"	c
FD_CLR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	86;"	d
FD_ISSET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	87;"	d
FD_SET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	85;"	d
FD_SETSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	73;"	d
FD_ZERO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	88;"	d
FILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@FILE.h	/^typedef struct _IO_FILE FILE;$/;"	t	typeref:struct:_IO_FILE
FILENAME_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	27;"	d
FILE_TYPES	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^FILE_TYPES = {$/;"	v
FLOATERM_HIGHLIGHT_SYNTAX	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^FLOATERM_HIGHLIGHT_SYNTAX = [$/;"	v
FOO	autoload/plugged/vista.vim/test/data/175.cpp	/^		FOO$/;"	e	enum:example::__anon7	file:
FOPEN_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	36;"	d
FOPEN_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	37;"	d
FORWARD	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    FORWARD = 1$/;"	v	class:JumpDirection
FOSimple_Break_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FZF	autoload/plugged/fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
Fallback	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:Fallback()$/;"	f
Far	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarComplete -nargs=+ -range=-1 Far$/;"	c
Far	autoload/plugged/far.vim/plugin/far.vim	/^function! Far(rngmode, rngline1, rngline2, cmdline) range abort "{{{$/;"	f
FarDo	autoload/plugged/far.vim/plugin/far.vim	/^function! FarDo(...) abort range "{{{$/;"	f
FarModePrompt	autoload/plugged/far.vim/plugin/far.vim	/^function! FarModePrompt(rngmode, rngline1, rngline2, substitute_open, cmdline, ...) abort range "{{{$/;"	f
FarPlugin	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^    class FarPlugin(object):$/;"	c
FarPrompt	autoload/plugged/far.vim/plugin/far.vim	/^function! FarPrompt(rngmode, rngline1, rngline2, ...) abort range "{{{$/;"	f
FarUndo	autoload/plugged/far.vim/plugin/far.vim	/^function! FarUndo(...) abort range "{{{$/;"	f
Fardo	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FardoComplete -nargs=* -range=-1 Fardo$/;"	c
Farf	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farf$/;"	c
Farp	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farp$/;"	c
Farr	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farr$/;"	c
Farundo	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarundoComplete -nargs=* -range=-1 Farundo$/;"	c
FetchSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FetchSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Fg	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Fg() Color {$/;"	f
Fields	autoload/plugged/nvim-colorizer.lua/doc/modules/colorizer.html	/^    <h2 class="section-header "><a name="Fields"><\/a>Fields<\/h2>$/;"	a
FileIgnoreCase	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
FileManager	autoload/plugged/bracey.vim/server/filemanager.js	/^var FileManager = function(changePageCallback){$/;"	c
FileManager.prototypegetByName	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototypegetByName = function(name){$/;"	f
Files	plug-config/fzf.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
Fill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Fill(text string) FillReturn {$/;"	f
Fill	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Fill(str string) FillReturn {$/;"	f
FillChangeContents	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! s:FillChangeContents(change)$/;"	f
FillContinue	autoload/plugged/fzf/src/tui/tui.go	/^	FillContinue FillReturn = iota$/;"	c
FillNextLine	autoload/plugged/fzf/src/tui/tui.go	/^	FillNextLine$/;"	c
FillReturn	autoload/plugged/fzf/src/tui/tui.go	/^type FillReturn int$/;"	t
FillSuspend	autoload/plugged/fzf/src/tui/tui.go	/^	FillSuspend$/;"	c
FilterEscape	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
Find	autoload/plugged/far.vim/plugin/far.vim	/^function! Find(rngmode, rngline1, rngline2, cmdline, ...) range abort "{{{$/;"	f
FindColumnBoundary	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! s:FindColumnBoundary(grouped_data) abort$/;"	f
FindNearestMethodOrFunction	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:FindNearestMethodOrFunction(_timer) abort$/;"	f
FindNumberStringWithinLine	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:FindNumberStringWithinLine(base_or_zero, rightwards) abort$/;"	f
FindParentVCSRoot	autoload/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
FindRootDirectory	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! FindRootDirectory()$/;"	f
FinishFill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) FinishFill() {$/;"	f
FinishFill	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) FinishFill() {$/;"	f
FlagSet.New	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FloatermFirst	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^command! -nargs=0           FloatermFirst  call floaterm#first()$/;"	c
FloatermHide	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermHide   call floaterm#hide(<bang>0, <count>, <q-args>)$/;"	c
FloatermKill	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermKill   call floaterm#kill(<bang>0, <count>, <q-args>)$/;"	c
FloatermLast	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^command! -nargs=0           FloatermLast   call floaterm#last()$/;"	c
FloatermNew	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermNew    call floaterm#run('new', <bang>0, <f-args>)$/;"	c
FloatermNext	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^command! -nargs=0           FloatermNext   call floaterm#next()$/;"	c
FloatermPrev	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^command! -nargs=0           FloatermPrev   call floaterm#prev()$/;"	c
FloatermSend	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermSend   call floaterm#send(<bang>0, visualmode(), <range>, <line1>, <line2>, <q-args>)$/;"	c
FloatermShow	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermShow   call floaterm#show(<bang>0, <count>, <q-args>)$/;"	c
FloatermToggle	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermToggle call floaterm#toggle(<bang>0, <count>, <q-args>)$/;"	c
FloatermUpdate	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^                          \\ FloatermUpdate call floaterm#run('update', 0, <f-args>)$/;"	c
FocusGainedHandler	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
Fold	plug-config/coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
FoldOverwrite_Simple_ECR	autoload/plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	autoload/plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	autoload/plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
Foo	autoload/plugged/vim-autoformat/samples/csharp.cs	/^    public int Foo() { switch (1) { case 1: int i = 0; default: int j = 1; }$/;"	m	class:Program
Foo	autoload/plugged/vista.vim/test/data/114.py	/^class Foo:$/;"	c
Foo	autoload/plugged/vista.vim/test/data/70.py	/^class Foo:$/;"	c
Foo	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^class Foo:$/;"	c
Format	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
Format	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:Format(string, width) abort$/;"	f
Format	plug-config/coc.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
FormatFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
FormatFromSelected	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
FormatLog	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
FormatRebase	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
FriendlyName	autoload/plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
FromTMPDIR	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:FromTMPDIR() abort$/;"	f
FugitiveCommonDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveDetect	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveHead	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveStatusline	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
FullscreenRenderer	autoload/plugged/fzf/src/tui/tui.go	/^type FullscreenRenderer struct {$/;"	t
Functions	autoload/plugged/nvim-colorizer.lua/doc/modules/colorizer.html	/^    <h2 class="section-header "><a name="Functions"><\/a>Functions<\/h2>$/;"	a
FuzzyMatchV1	autoload/plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
FuzzyMatchV2	autoload/plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
G	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)$/;"	c
GF	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GGrep	plug-config/fzf.vim	/^command! -bang -nargs=* GGrep$/;"	c
GO	autoload/plugged/fzf/Makefile	/^GO             ?= go$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^	GOOS=darwin  make release$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^	GOOS=freebsd make release$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^	GOOS=linux   make release$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^	GOOS=openbsd make release$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^	GOOS=windows make release$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^GOOS           ?= $(word 1, $(subst \/, " ", $(word 4, $(shell go version))))$/;"	m
GV	autoload/plugged/gv.vim/plugin/gv.vim	/^command! -bang -nargs=* -range=0 -complete=customlist,s:gvcomplete GV call s:gv(<bang>0, <count>, <line1>, <line2>, <q-args>)$/;"	c
GatherHeaderMetadata	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:GatherHeaderMetadata() abort$/;"	f
GatherHeaderMetadata	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! s:GatherHeaderMetadata() abort$/;"	f
Generate	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(rev, ...) abort$/;"	f
GenericAutoUpdate	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:GenericAutoUpdate(event, bufnr, fpath) abort$/;"	f
GenericStopTimer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:GenericStopTimer(timer) abort$/;"	f
Get	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) Get(idx int) Result {$/;"	f
Get	autoload/plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f
Get	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f
GetAvaliableExecutives	autoload/plugged/vista.vim/autoload/vista/debugging.vim	/^function! s:GetAvaliableExecutives() abort$/;"	f
GetChangePositions	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! s:GetChangePositions()$/;"	f
GetChar	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) GetChar() Event     { return Event{} }$/;"	f
GetChar	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) GetChar() Event {$/;"	f
GetChar	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) GetChar() Event {$/;"	f
GetCustomCmd	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetCustomCmd(filetype) abort$/;"	f
GetDefaultCmd	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetDefaultCmd(file) abort$/;"	f
GetGlobalVariables	autoload/plugged/vista.vim/autoload/vista/debugging.vim	/^function! s:GetGlobalVariables() abort$/;"	f
GetHiCmd	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:GetHiCmd(list)$/;"	f
GetInfoFromLSPAndExtension	autoload/plugged/vista.vim/autoload/vista/cursor/lsp.vim	/^function! s:GetInfoFromLSPAndExtension() abort$/;"	f
GetInfoUnderCursor	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:GetInfoUnderCursor() abort$/;"	f
GetLanguageSpecificOptition	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetLanguageSpecificOptition(filetype) abort$/;"	f
GetTempDirectory	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetTempDirectory() abort$/;"	f
GetTrailingLnum	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:GetTrailingLnum() abort$/;"	f
GetVisibility	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:GetVisibility(line) abort$/;"	f
GetVisualSelection	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:GetVisualSelection(visualmode) abort$/;"	f
Gist	autoload/plugged/vim-gist/plugin/gist.vim	/^command! -nargs=? -range=% -bang -complete=customlist,s:CompleteArgs Gist :call gist#Gist(<count>, "<bang>", <line1>, <line2>, <f-args>)$/;"	c
GistDelete	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistDelete(gistid) abort$/;"	f
GistDetectFiletype	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistDetectFiletype(gistid) abort$/;"	f
GistGet	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistGet(gistid, clipboard) abort$/;"	f
GistGetAuthHeader	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistGetAuthHeader() abort$/;"	f
GistGetFileName	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistGetFileName(gistid) abort$/;"	f
GistList	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistList(gistls, page) abort$/;"	f
GistListAction	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistListAction(mode) abort$/;"	f
GistPost	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistPost(content, private, desc, anonymous) abort$/;"	f
GistPostBuffers	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistPostBuffers(private, desc, anonymous) abort$/;"	f
GistUpdate	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistUpdate(content, gistid, gistnm, desc) abort$/;"	f
GistWrite	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:GistWrite(fname) abort$/;"	f
Git	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)$/;"	c
GitGutter	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterBufferDisable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferDisable call gitgutter#buffer_disable()$/;"	c
GitGutterBufferEnable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferEnable  call gitgutter#buffer_enable()$/;"	c
GitGutterBufferToggle	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferToggle  call gitgutter#buffer_toggle()$/;"	c
GitGutterDebug	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterFold	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterFold call gitgutter#fold#toggle()$/;"	c
GitGutterGetHunkSummary	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterLineNrHighlightsDisable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsDisable call gitgutter#highlight#linenr_disable()$/;"	c
GitGutterLineNrHighlightsEnable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsEnable  call gitgutter#highlight#linenr_enable()$/;"	c
GitGutterLineNrHighlightsToggle	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsToggle  call gitgutter#highlight#linenr_toggle()$/;"	c
GitGutterNextHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterQuickFix	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFix call gitgutter#quickfix()$/;"	c
GitGutterSignsDisable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -range=% GitGutterStageHunk call gitgutter#hunk#stage(<line1>,<line2>)$/;"	c
GitGutterToggle	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GitMessenger	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^command! -nargs=0 -bar GitMessenger call gitmessenger#new(expand('%:p'), line('.'), bufnr('%'))$/;"	c
GitMessengerClose	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^command! -nargs=0 -bar GitMessengerClose call gitmessenger#close_popup(bufnr('%'))$/;"	c
GlobComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern) abort$/;"	f
GlobError	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^class GlobError(ValueError):$/;"	c
GlobalChange	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
GotoSourceWindow	autoload/plugged/vista.vim/autoload/vista/source.vim	/^  function! s:GotoSourceWindow() abort$/;"	f
GotoTrailingWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:GotoTrailingWhitespace(search_backwards, from, to)$/;"	f
Goyo	autoload/plugged/goyo.vim/plugin/goyo.vim	/^command! -nargs=? -bar -bang Goyo call goyo#execute(<bang>0, <q-args>)$/;"	c
Grep	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang, args, prg, type) abort$/;"	f
GrepParseLine	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(prefix, name_only, dir, line) abort$/;"	f
GrepSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
GroupByKindForLSPData	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! s:GroupByKindForLSPData(lsp_items) abort$/;"	f
GruvboxHlsHideCursor	autoload/plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	autoload/plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
GuessBase	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:GuessBase(numberstring) abort$/;"	f
HL	autoload/plugged/gruvbox/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HTMLHintClass	autoload/plugged/bracey.vim/server/htmlfile.js	/^var HTMLHintClass  = require("htmlhint").HTMLHint;$/;"	v
HandleArguments	autoload/plugged/vista.vim/autoload/vista.vim	/^function! s:HandleArguments(fst, snd) abort$/;"	f
HandleLSPResponse	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:HandleLSPResponse(resp) abort$/;"	f
HandleLSPResponse	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:HandleLSPResponse(error, response) abort$/;"	f
HandleLSPResponse	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:HandleLSPResponse(output) abort$/;"	f
HandleLSPResponse	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:HandleLSPResponse(results) abort$/;"	f
HandleLSPResponse	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:HandleLSPResponse(_server, _req_id, _type, data) abort$/;"	f
HandleLSPResponseInSilence	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:HandleLSPResponseInSilence(error, response) abort$/;"	f
HandleSingleArgument	autoload/plugged/vista.vim/autoload/vista.vim	/^function! s:HandleSingleArgument(arg) abort$/;"	f
HasAvaliableServers	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:HasAvaliableServers() abort$/;"	f
HasFullscreenRenderer	autoload/plugged/fzf/src/tui/dummy.go	/^func HasFullscreenRenderer() bool {$/;"	f
HasFullscreenRenderer	autoload/plugged/fzf/src/tui/tcell.go	/^func HasFullscreenRenderer() bool {$/;"	f
HasOpt	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
HasVlnum	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:HasVlnum() abort$/;"	f
HeadingWhitespaces	autoload/plugged/vista.vim/autoload/vista/fold.vim	/^function! s:HeadingWhitespaces(line) abort$/;"	f
Height	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Height() int {$/;"	f
Height	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Height() int {$/;"	f
HexToColor	autoload/plugged/fzf/src/tui/tui.go	/^func HexToColor(rrggbb string) Color {$/;"	f
Hi	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Hi() abort$/;"	f
HiTag	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:HiTag() abort$/;"	f
HiTagLine	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:HiTagLine() abort$/;"	f
HighlightEOLWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:HighlightEOLWhitespace()$/;"	f
HighlightEOLWhitespaceExceptCurrentLine	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:HighlightEOLWhitespaceExceptCurrentLine()$/;"	f
HighlightNearestTag	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:HighlightNearestTag(_timer) abort$/;"	f
HighlightTagInFloatinWin	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:HighlightTagInFloatinWin() abort$/;"	f
History	autoload/plugged/fzf/src/history.go	/^type History struct {$/;"	t
Home	autoload/plugged/fzf/src/tui/tui.go	/^	Home$/;"	c
HtmlFile	autoload/plugged/bracey.vim/server/htmlfile.js	/^function HtmlFile(source, callback){$/;"	c
HtmlFile.setCSS	autoload/plugged/bracey.vim/server/htmlfile.js	/^HtmlFile.setCSS = function(source){$/;"	f
HtmlFile.setJS	autoload/plugged/bracey.vim/server/htmlfile.js	/^HtmlFile.setJS = function(source){$/;"	f
ID	autoload/plugged/vim-bbye/Makefile	/^ID := 4664$/;"	m
IMMoving_AcceptInputWhenMoved_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	autoload/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
INT16_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	249;"	d
INT16_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	413;"	d
INT16_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	416;"	d
INT16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	122;"	d
INT16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	599;"	d
INT16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	117;"	d
INT16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	600;"	d
INT16_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	280;"	d
INT24_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	388;"	d
INT24_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	393;"	d
INT24_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	580;"	d
INT24_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	581;"	d
INT32_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	250;"	d
INT32_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	377;"	d
INT32_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	380;"	d
INT32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	123;"	d
INT32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	555;"	d
INT32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	118;"	d
INT32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	556;"	d
INT32_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	282;"	d
INT40_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	348;"	d
INT40_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	354;"	d
INT40_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	533;"	d
INT40_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	534;"	d
INT48_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	331;"	d
INT48_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	337;"	d
INT48_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	511;"	d
INT48_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	512;"	d
INT56_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	314;"	d
INT56_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	320;"	d
INT56_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	489;"	d
INT56_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	490;"	d
INT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	252;"	d
INT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	254;"	d
INT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	303;"	d
INT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	306;"	d
INT64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	124;"	d
INT64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	461;"	d
INT64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	119;"	d
INT64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	462;"	d
INT64_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	284;"	d
INT8_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	248;"	d
INT8_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	432;"	d
INT8_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	435;"	d
INT8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	121;"	d
INT8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	621;"	d
INT8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	116;"	d
INT8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	622;"	d
INT8_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	278;"	d
INTMAX_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	269;"	d
INTMAX_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	272;"	d
INTMAX_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	689;"	d
INTMAX_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	199;"	d
INTMAX_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	663;"	d
INTMAX_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	197;"	d
INTMAX_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	662;"	d
INTMAX_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	308;"	d
INTPTR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	187;"	d
INTPTR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	191;"	d
INTPTR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	649;"	d
INTPTR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	186;"	d
INTPTR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	190;"	d
INTPTR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	648;"	d
INTPTR_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	305;"	d
INT_FAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	164;"	d
INT_FAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	167;"	d
INT_FAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	615;"	d
INT_FAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	154;"	d
INT_FAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	157;"	d
INT_FAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	614;"	d
INT_FAST16_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	298;"	d
INT_FAST24_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	587;"	d
INT_FAST24_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	586;"	d
INT_FAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	165;"	d
INT_FAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	168;"	d
INT_FAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	574;"	d
INT_FAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	155;"	d
INT_FAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	158;"	d
INT_FAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	573;"	d
INT_FAST32_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	300;"	d
INT_FAST40_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	540;"	d
INT_FAST40_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	539;"	d
INT_FAST48_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	518;"	d
INT_FAST48_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	517;"	d
INT_FAST56_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	496;"	d
INT_FAST56_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	495;"	d
INT_FAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	170;"	d
INT_FAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	483;"	d
INT_FAST64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	160;"	d
INT_FAST64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	482;"	d
INT_FAST64_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	302;"	d
INT_FAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	162;"	d
INT_FAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	634;"	d
INT_FAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	152;"	d
INT_FAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	633;"	d
INT_FAST8_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	296;"	d
INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	140;"	d
INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	612;"	d
INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	135;"	d
INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	611;"	d
INT_LEAST16_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	289;"	d
INT_LEAST24_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	584;"	d
INT_LEAST24_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	583;"	d
INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	141;"	d
INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	571;"	d
INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	136;"	d
INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	570;"	d
INT_LEAST32_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	291;"	d
INT_LEAST40_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	537;"	d
INT_LEAST40_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	536;"	d
INT_LEAST48_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	515;"	d
INT_LEAST48_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	514;"	d
INT_LEAST56_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	493;"	d
INT_LEAST56_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	492;"	d
INT_LEAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	142;"	d
INT_LEAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	480;"	d
INT_LEAST64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	137;"	d
INT_LEAST64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	479;"	d
INT_LEAST64_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	293;"	d
INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	139;"	d
INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	631;"	d
INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	134;"	d
INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	630;"	d
INT_LEAST8_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	287;"	d
IgnoreFileError	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^class IgnoreFileError(ValueError):$/;"	c
IndentUtil	autoload/plugged/coc-snippets/python/ultisnips.py	/^class IndentUtil(object):$/;"	c
IndentUtil	autoload/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil:$/;"	c
Index	autoload/plugged/fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f
Index	autoload/plugged/fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f
Init	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Init()             {}$/;"	f
Init	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Init() {$/;"	f
Init	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Init() {$/;"	f
InitCwds	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
InitIfSupportedFiletype	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^function s:InitIfSupportedFiletype(filetype_string)$/;"	f
InitVariable	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:InitVariable(var, value)$/;"	f
Input	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) Input() []rune {$/;"	f
Insert	autoload/plugged/fzf/src/tui/tui.go	/^	Insert$/;"	c
InstallOptions	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
IntegerToString	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:IntegerToString(integer, base, ...) abort$/;"	f
IntoLSPHirRow	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:IntoLSPHirRow(row) abort$/;"	f
IntoLSPNonHirRow	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:IntoLSPNonHirRow(row) abort$/;"	f
IntoRow	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! s:IntoRow(icon, kind, item) abort$/;"	f
IntoTemp	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:IntoTemp(...) abort$/;"	f
Invalid	autoload/plugged/fzf/src/tui/tui.go	/^	Invalid$/;"	c
IsBytes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) IsBytes() bool {$/;"	f
IsConflicted	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
IsEmpty	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f
IsFileUri	autoload/plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! s:IsFileUri(uri) abort$/;"	f
IsFull	autoload/plugged/fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f
IsHeader	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:IsHeader(cur_line, next_line) abort$/;"	f
IsLightRendererSupported	autoload/plugged/fzf/src/tui/light_unix.go	/^func IsLightRendererSupported() bool {$/;"	f
IsLightRendererSupported	autoload/plugged/fzf/src/tui/light_windows.go	/^func IsLightRendererSupported() bool {$/;"	f
IsTty	autoload/plugged/fzf/src/util/util.go	/^func IsTty() bool {$/;"	f
IsUsable	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! s:IsUsable(cache, fpath) abort$/;"	f
IsWindows	autoload/plugged/fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f
IsWindows	autoload/plugged/fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f
Italic	autoload/plugged/fzf/src/tui/dummy.go	/^	Italic           = Attr(1 << 2)$/;"	c
Italic	autoload/plugged/fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrNone) \/\/ Not supported$/;"	c
Item	autoload/plugged/fzf/src/item.go	/^type Item struct {$/;"	t
ItemBuilder	autoload/plugged/fzf/src/chunklist.go	/^type ItemBuilder func(*Item, []byte) bool$/;"	t
J	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:S
J	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:l.function
JB	autoload/plugged/ultisnips/test/constant.py	/^JB = "+"  # Jump backwards$/;"	v
JF	autoload/plugged/ultisnips/test/constant.py	/^JF = "?"  # Jump forwards$/;"	v
JSON	autoload/plugged/vim-autoformat/samples/js.js	/^var JSON; JSON || (JSON = {}), function() { function f(a) { return a < 10 ? "0"$/;"	v
Job.onExitCB	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onExitCB() abort$/;"	f
Job.onFailed	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onFailed() abort$/;"	f
Job.onStderrCB	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStderrCB(data) abort$/;"	f
Job.onStdoutCB	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStdoutCB(data) abort$/;"	f
Job.onSuccess	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onSuccess() abort$/;"	f
Job.run	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^    function! s:Job.run(cmd) abort$/;"	f
JobOpts	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
Join	autoload/plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:Join(line, icon) abort$/;"	f
JumpDirection	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^class JumpDirection(Enum):$/;"	c
JumpForward_DefSnippet	autoload/plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JumpPair	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! s:JumpPair(direction, tag)$/;"	f
K	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:S
K	plug-config/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
KeyMap.Add	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Compare	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
KeyMap.Create	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
Keywordprg	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
KillCommand	autoload/plugged/fzf/src/util/util_unix.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f
KillCommand	autoload/plugged/fzf/src/util/util_windows.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f
Kind	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^class Kind(Base):$/;"	c
Kind2Symbol	autoload/plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! s:Kind2Symbol(kind) abort$/;"	f
L9140	autoload/plugged/vim-autoformat/samples/perl.pl	/^  L9140:$/;"	l
L9150	autoload/plugged/vim-autoformat/samples/perl.pl	/^  L9150:$/;"	l
L9160	autoload/plugged/vim-autoformat/samples/perl.pl	/^  L9160:$/;"	l
L9170	autoload/plugged/vim-autoformat/samples/perl.pl	/^  L9170:$/;"	l
LC_ADDRESS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	44;"	d
LC_ADDRESS_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	156;"	d
LC_ALL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	41;"	d
LC_ALL_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	160;"	d
LC_COLLATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	38;"	d
LC_COLLATE_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	151;"	d
LC_CTYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	35;"	d
LC_CTYPE_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	148;"	d
LC_GLOBAL_LOCALE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	191;"	d
LC_IDENTIFICATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	47;"	d
LC_IDENTIFICATION_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	159;"	d
LC_MEASUREMENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	46;"	d
LC_MEASUREMENT_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	158;"	d
LC_MESSAGES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	40;"	d
LC_MESSAGES_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	153;"	d
LC_MONETARY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	39;"	d
LC_MONETARY_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	152;"	d
LC_NAME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	43;"	d
LC_NAME_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	155;"	d
LC_NUMERIC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	36;"	d
LC_NUMERIC_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	149;"	d
LC_PAPER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	42;"	d
LC_PAPER_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	154;"	d
LC_TELEPHONE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	45;"	d
LC_TELEPHONE_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	157;"	d
LC_TIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	37;"	d
LC_TIME_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	150;"	d
LITTLE_ENDIAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	27;"	d
LOOP	autoload/plugged/vim-autoformat/samples/perl.pl	/^   LOOP:{print(" digits"),redo LOOP if\/\\G\\d+\\b[,.;]?\\s*\/gc;print(" lowercase"),$/;"	l
LS	autoload/plugged/ultisnips/test/constant.py	/^LS = "@"  # List snippets$/;"	v
LT_OBJDIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1459;"	d
L_ctermid	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	30;"	d
L_cuserid	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	32;"	d
L_tmpnam	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	25;"	d
LeadingWhitespaces	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) LeadingWhitespaces() int {$/;"	f
LeaveTrailingWhitespace	autoload/plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
Left	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Left() int {$/;"	f
Left	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Left() int {$/;"	f
Left	autoload/plugged/fzf/src/tui/tui.go	/^	Left$/;"	c
LeftClick	autoload/plugged/fzf/src/tui/tui.go	/^	LeftClick$/;"	c
Len	autoload/plugged/fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f
Len	autoload/plugged/fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f
Len	autoload/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f
Len	autoload/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f
Length	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f
Length	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f
Less	autoload/plugged/fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f
Less	autoload/plugged/fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f
Less	autoload/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f
Less	autoload/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f
Lfind	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Lfind   exe s:Grep(<q-bang>, <q-args>, 'find', 'l')$/;"	c
Light256	autoload/plugged/fzf/src/tui/tui.go	/^	Light256  *ColorTheme$/;"	v
LightRenderer	autoload/plugged/fzf/src/tui/light.go	/^type LightRenderer struct {$/;"	t
LightWindow	autoload/plugged/fzf/src/tui/light.go	/^type LightWindow struct {$/;"	t
LineIterator	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator:$/;"	c
LinesError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
ListAllAvailable_BraceInFront_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_Disabled_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_Disabled_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
Listener.HasPath	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.HasPath(path_str) abort$/;"	f
Listener.OnInit	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnInit(event) abort$/;"	f
Listener.OnRefresh	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefresh(event) abort$/;"	f
Listener.OnRefreshFlags	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefreshFlags(event) abort$/;"	f
Listener.SetNext	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.SetNext(cache) abort$/;"	f
Listener.TryUpdateNERDTreeUI	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.TryUpdateNERDTreeUI() abort$/;"	f
Listener.callback	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.callback(event) abort$/;"	f
Listener.changed	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.changed() abort$/;"	f
Listener.getOption	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.getOption(name, default) abort$/;"	f
Listener.update	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.update() abort$/;"	f
Llocate	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Llocate exe s:Grep(<q-bang>, <q-args>, 'locate', 'l')$/;"	c
LoadData	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:LoadData(container, line) abort$/;"	f
Log	autoload/plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
Log	autoload/plugged/vim-rooter/test/runner.vim	/^function Log(msg)$/;"	f
LogFlushQueue	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
LogParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, line) abort$/;"	f
Logger.debug	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.debug(msg) abort$/;"	f
Logger.error	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.error(msg) abort$/;"	f
Logger.info	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.info(msg) abort$/;"	f
Logger.output	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.output(level, msg) abort$/;"	f
Logger.warning	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.warning(msg) abort$/;"	f
Lookup	autoload/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Lookup(chunk *Chunk, key string) []Result {$/;"	f
Loop	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f
Loop	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f
LspCxxHighlight	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^command! LspCxxHighlight call lsp_cxx_hl#hl#enable()$/;"	c
LspCxxHighlightDisable	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^command! LspCxxHighlightDisable call lsp_cxx_hl#hl#disable()$/;"	c
LspCxxHlCursorSym	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^command! LspCxxHlCursorSym call lsp_cxx_hl#debug#cursor_symbol()$/;"	c
LspCxxHlDumpSyms	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^command! LspCxxHlDumpSyms call lsp_cxx_hl#debug#dump_symbols()$/;"	c
LspCxxHlIgnoredSyms	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^command! LspCxxHlIgnoredSyms call lsp_cxx_hl#debug#ignored_symbols()$/;"	c
MACROS_HELP	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^MACROS_HELP = { $/;"	v
MAKEFILE	autoload/plugged/fzf/Makefile	/^MAKEFILE       := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
MAKEFILE_DIR	autoload/plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	autoload/plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MB_CUR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	96;"	d
MD	autoload/plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:MD(idx, line) abort$/;"	f
MOD_CLKA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	79;"	d
MOD_CLKB	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	78;"	d
MOD_ESTERROR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	75;"	d
MOD_FREQUENCY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	73;"	d
MOD_MAXERROR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	74;"	d
MOD_MICRO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	81;"	d
MOD_NANO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	82;"	d
MOD_OFFSET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	72;"	d
MOD_STATUS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	76;"	d
MOD_TAI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	80;"	d
MOD_TIMECONST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	77;"	d
Main	autoload/plugged/vim-autoformat/samples/csharp.cs	/^using System; class Program { static int Main(string[] args) { Console.WriteLine(args[0]); int i = 0; i++; return 0; } $/;"	m	class:Program	file:
MakeBorderStyle	autoload/plugged/fzf/src/tui/tui.go	/^func MakeBorderStyle(shape BorderShape, unicode bool) BorderStyle {$/;"	f
MakeSlab	autoload/plugged/fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f
MakeTransparentBorder	autoload/plugged/fzf/src/tui/tui.go	/^func MakeTransparentBorder() BorderStyle {$/;"	f
Map	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
Map	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
MapMotion	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
Match	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []Result {$/;"	f
MatchIsTooCheap	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
MatchItem	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]int) {$/;"	f
MatchRequest	autoload/plugged/fzf/src/matcher.go	/^type MatchRequest struct {$/;"	t
MatchTag	autoload/plugged/vista.vim/autoload/vista/cursor/ctags.vim	/^function! s:MatchTag(trimmed_line) abort$/;"	f
Matcher	autoload/plugged/fzf/src/matcher.go	/^type Matcher struct {$/;"	t
Max	autoload/plugged/fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f
Max16	autoload/plugged/fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f
Max32	autoload/plugged/fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f
MaxX	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxX() int          { return 0 }$/;"	f
MaxX	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxX() int {$/;"	f
MaxX	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxX() int {$/;"	f
MaxY	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxY() int          { return 0 }$/;"	f
MaxY	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxY() int {$/;"	f
MaxY	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxY() int {$/;"	f
MenuController.New	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.isMinimal	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
MenuController.showMenu	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	autoload/plugged/fzf/src/tui/dummy.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merge	autoload/plugged/fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
MergeHead	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(...) abort$/;"	f
MergeSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Merger	autoload/plugged/fzf/src/merger.go	/^type Merger struct {$/;"	t
MergetoolSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
MessageCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
Min	autoload/plugged/fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f
Min32	autoload/plugged/fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f
Mirror	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	autoload/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	autoload/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	autoload/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	autoload/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	autoload/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Mkdir	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=? -complete=dir Mkdir$/;"	c
ModifierFlags	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:ModifierFlags()$/;"	f
Mods	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
Mouse	autoload/plugged/fzf/src/tui/tui.go	/^	Mouse$/;"	c
MouseEvent	autoload/plugged/fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	t
Move	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Move(y int, x int) {$/;"	f
Move	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Move(y int, x int) {$/;"	f
Move	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Move$/;"	c
Move	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
MoveAndClear	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) MoveAndClear(y int, x int) {$/;"	f
MoveAndClear	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) MoveAndClear(y int, x int) {$/;"	f
MovePosition_DelSameLine	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MultiLine	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	autoload/plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	autoload/plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	autoload/plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
MultilineExpandTestTyping_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
MyAppend1	autoload/plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	autoload/plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	autoload/plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	autoload/plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NAME	autoload/plugged/vim-bbye/Makefile	/^NAME := bbye$/;"	m
NERDTree	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
NERDTree.ExistsForBuf	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeCopyNode	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	autoload/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	autoload/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFocus	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMapActivateNode	plug-config/nerdtree.vim	/^let NERDTreeMapActivateNode = "i"$/;"	v
NERDTreeMapChangeRoot	plug-config/nerdtree.vim	/^let NERDTreeMapChangeRoot = "l"$/;"	v
NERDTreeMapCloseDir	plug-config/nerdtree.vim	/^let NERDTreeMapCloseDir = ""$/;"	v
NERDTreeMapMenu	plug-config/nerdtree.vim	/^let NERDTreeMapMenu = ","$/;"	v
NERDTreeMapOpenExpl	plug-config/nerdtree.vim	/^let NERDTreeMapOpenExpl = ""$/;"	v
NERDTreeMapOpenInTab	plug-config/nerdtree.vim	/^let NERDTreeMapOpenInTab = "o"$/;"	v
NERDTreeMapOpenInTabSilent	plug-config/nerdtree.vim	/^let NERDTreeMapOpenInTabSilent = "O"$/;"	v
NERDTreeMapOpenSplit	plug-config/nerdtree.vim	/^let NERDTreeMapOpenSplit = ""$/;"	v
NERDTreeMapOpenVSplit	plug-config/nerdtree.vim	/^let NERDTreeMapOpenVSplit = "I"$/;"	v
NERDTreeMapPreview	plug-config/nerdtree.vim	/^let NERDTreeMapPreview = ""$/;"	v
NERDTreeMapToggleHidden	plug-config/nerdtree.vim	/^let NERDTreeMapToggleHidden = "zh"$/;"	v
NERDTreeMapUpdir	plug-config/nerdtree.vim	/^let NERDTreeMapUpdir = "N"$/;"	v
NERDTreeMapUpdirKeepOpen	plug-config/nerdtree.vim	/^let NERDTreeMapUpdirKeepOpen = "n"$/;"	v
NERDTreeMoveNode	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggleVCS	autoload/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	autoload/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NEVER	autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
NFDBITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	80;"	d
NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	81;"	d
NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	84;"	d
NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	86;"	d
NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	89;"	d
NavigateUp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
NeoVimLoggerHandler	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^    class NeoVimLoggerHandler(logging.Handler):$/;"	c
New	vscode/settings.vim	/^command! -complete=file -nargs=? New call <SID>split('h', '__vscode_new__')$/;"	c
NewAtomicBool	autoload/plugged/fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f
NewChunkCache	autoload/plugged/fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f
NewChunkList	autoload/plugged/fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f
NewColorPair	autoload/plugged/fzf/src/tui/tui.go	/^func NewColorPair(fg Color, bg Color) ColorPair {$/;"	f
NewEventBox	autoload/plugged/fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f
NewFullscreenRenderer	autoload/plugged/fzf/src/tui/tui.go	/^func NewFullscreenRenderer(theme *ColorTheme, forceBlack bool, mouse bool) Renderer {$/;"	f
NewHistory	autoload/plugged/fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f
NewLightRenderer	autoload/plugged/fzf/src/tui/light.go	/^func NewLightRenderer(theme *ColorTheme, forceBlack bool, mouse bool, tabstop int, clearOnExit bool, fullscreen bool, maxHeightFunc func(int) int) Renderer {$/;"	f
NewMatcher	autoload/plugged/fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f
NewMerger	autoload/plugged/fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]Result, sorted bool, tac bool) *Merger {$/;"	f
NewReader	autoload/plugged/fzf/src/reader.go	/^func NewReader(pusher func([]byte) bool, eventBox *util.EventBox, delimNil bool, wait bool) *Reader {$/;"	f
NewTerminal	autoload/plugged/fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f
NewWindow	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Window {$/;"	f
NewWindow	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Window {$/;"	f
NewWindow	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Window {$/;"	f
NewWindow	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! s:NewWindow() abort$/;"	f
NextExpandedHunk	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
NextFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
NextFormatter	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^command! NextFormatter call s:NextFormatter()$/;"	c
NextFormatter	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:NextFormatter()$/;"	f
NextHunk	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
NextItem	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
NextSection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
NextSectionEnd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
NextTopLevelLnum	autoload/plugged/vista.vim/autoload/vista/jump.vim	/^function! s:NextTopLevelLnum() abort$/;"	f
NextTrailingWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% NextTrailingWhitespace call <SID>GotoTrailingWhitespace(0, <line1>, <line2>)$/;"	c
NoUmlautsBeforeTriggerAndCharsAfter	autoload/plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NodeJsFindPathToExecFile	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^function! s:NodeJsFindPathToExecFile(exec_name)$/;"	f
NonUnicodeDataInUnnamedRegister	autoload/plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class NoneditableTextObject(TextObject):$/;"	c
NormalizeRunes	autoload/plugged/fzf/src/algo/normalize.go	/^func NormalizeRunes(runes []rune) []rune {$/;"	f
NotEnoughBuffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
NotSupport	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:NotSupport()$/;"	f
NoteTemp	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:NoteTemp() abort$/;"	f
Notifier.AddListener	autoload/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	autoload/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	autoload/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	autoload/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
NullError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(...) abort$/;"	f
NumberStringToInteger	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:NumberStringToInteger(numberstring, base) abort$/;"	f
OBJECT	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^class OBJECT (object):$/;"	c
OR	plug-config/coc.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
Offset	autoload/plugged/fzf/src/result.go	/^type Offset [2]int32$/;"	t
OldSelection_RealWorldCase_Test	autoload/plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	autoload/plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
OnBufDelete	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:OnBufDelete(bufnr) abort$/;"	f
OnBufEnter	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:OnBufEnter(bufnr, fpath) abort$/;"	f
Once	autoload/plugged/fzf/src/util/util.go	/^func Once(nextResponse bool) func() bool {$/;"	f
Only	vscode/settings.vim	/^command! -bang Only if <q-bang> == '!' | call <SID>closeOtherEditors() | else | call VSCodeNotify('workbench.action.joinAllGroups') | endif$/;"	c
OpenConfig	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
OpenDiagnostics	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenDiagnostics(...) abort$/;"	f
OpenExec	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenExec(cmd, mods, env, args, ...) abort$/;"	f
OpenParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(args, wants_cmd) abort$/;"	f
OpenPopup	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! s:OpenPopup(lines) abort$/;"	f
Opener.New	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Options	autoload/plugged/fzf/src/options.go	/^type Options struct {$/;"	t
Owner	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
PDP_ENDIAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	29;"	d
PREVIEW_FILENAME	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^PREVIEW_FILENAME = "[denite-floaterm-preview]"$/;"	v
PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	93;"	d
PTHREAD_BARRIER_SERIAL_THREAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	189;"	d
PTHREAD_CANCELED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	178;"	d
PTHREAD_CANCEL_ASYNCHRONOUS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_CANCEL_ASYNCHRONOUS$/;"	e	enum:__anon39
PTHREAD_CANCEL_ASYNCHRONOUS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	176;"	d
PTHREAD_CANCEL_DEFERRED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_CANCEL_DEFERRED,$/;"	e	enum:__anon39
PTHREAD_CANCEL_DEFERRED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	174;"	d
PTHREAD_CANCEL_DISABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_CANCEL_DISABLE$/;"	e	enum:__anon38
PTHREAD_CANCEL_DISABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	169;"	d
PTHREAD_CANCEL_ENABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_CANCEL_ENABLE,$/;"	e	enum:__anon38
PTHREAD_CANCEL_ENABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	167;"	d
PTHREAD_COND_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	151;"	d
PTHREAD_CREATE_DETACHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_CREATE_DETACHED$/;"	e	enum:__anon30
PTHREAD_CREATE_DETACHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	38;"	d
PTHREAD_CREATE_JOINABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_CREATE_JOINABLE,$/;"	e	enum:__anon30
PTHREAD_CREATE_JOINABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	36;"	d
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	91;"	d
PTHREAD_EXPLICIT_SCHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_EXPLICIT_SCHED$/;"	e	enum:__anon35
PTHREAD_EXPLICIT_SCHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	125;"	d
PTHREAD_INHERIT_SCHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_INHERIT_SCHED,$/;"	e	enum:__anon35
PTHREAD_INHERIT_SCHED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	123;"	d
PTHREAD_MUTEX_ADAPTIVE_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ADAPTIVE_NP$/;"	e	enum:__anon31
PTHREAD_MUTEX_DEFAULT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL$/;"	e	enum:__anon31
PTHREAD_MUTEX_ERRORCHECK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,$/;"	e	enum:__anon31
PTHREAD_MUTEX_ERRORCHECK_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ERRORCHECK_NP,$/;"	e	enum:__anon31
PTHREAD_MUTEX_FAST_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP$/;"	e	enum:__anon31
PTHREAD_MUTEX_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	86;"	d
PTHREAD_MUTEX_NORMAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,$/;"	e	enum:__anon31
PTHREAD_MUTEX_RECURSIVE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,$/;"	e	enum:__anon31
PTHREAD_MUTEX_RECURSIVE_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_RECURSIVE_NP,$/;"	e	enum:__anon31
PTHREAD_MUTEX_ROBUST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ROBUST,$/;"	e	enum:__anon32
PTHREAD_MUTEX_ROBUST_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST$/;"	e	enum:__anon32
PTHREAD_MUTEX_STALLED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_STALLED,$/;"	e	enum:__anon32
PTHREAD_MUTEX_STALLED_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,$/;"	e	enum:__anon32
PTHREAD_MUTEX_TIMED_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_MUTEX_TIMED_NP,$/;"	e	enum:__anon31
PTHREAD_ONCE_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	182;"	d
PTHREAD_PRIO_INHERIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_PRIO_INHERIT,$/;"	e	enum:__anon33
PTHREAD_PRIO_NONE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_PRIO_NONE,$/;"	e	enum:__anon33
PTHREAD_PRIO_PROTECT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_PRIO_PROTECT$/;"	e	enum:__anon33
PTHREAD_PROCESS_PRIVATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_PROCESS_PRIVATE,$/;"	e	enum:__anon37
PTHREAD_PROCESS_PRIVATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	143;"	d
PTHREAD_PROCESS_SHARED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_PROCESS_SHARED$/;"	e	enum:__anon37
PTHREAD_PROCESS_SHARED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	145;"	d
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	89;"	d
PTHREAD_RWLOCK_DEFAULT_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP$/;"	e	enum:__anon34
PTHREAD_RWLOCK_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	110;"	d
PTHREAD_RWLOCK_PREFER_READER_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_PREFER_READER_NP,$/;"	e	enum:__anon34
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,$/;"	e	enum:__anon34
PTHREAD_RWLOCK_PREFER_WRITER_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_PREFER_WRITER_NP,$/;"	e	enum:__anon34
PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	113;"	d
PTHREAD_SCOPE_PROCESS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_SCOPE_PROCESS$/;"	e	enum:__anon36
PTHREAD_SCOPE_PROCESS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	135;"	d
PTHREAD_SCOPE_SYSTEM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  PTHREAD_SCOPE_SYSTEM,$/;"	e	enum:__anon36
PTHREAD_SCOPE_SYSTEM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	133;"	d
PTRDIFF_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	210;"	d
PTRDIFF_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	214;"	d
PTRDIFF_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	217;"	d
PTRDIFF_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	652;"	d
PTRDIFF_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	209;"	d
PTRDIFF_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	213;"	d
PTRDIFF_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	216;"	d
PTRDIFF_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	651;"	d
PTRDIFF_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	311;"	d
P_ALL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	/^  P_ALL,		\/* Wait for any child.  *\/$/;"	e	enum:__anon11
P_ALL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	48;"	d
P_PGID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	/^  P_PGID		\/* Wait for members of process group.  *\/$/;"	e	enum:__anon11
P_PGID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	50;"	d
P_PID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	/^  P_PID,		\/* Wait for specified process.  *\/$/;"	e	enum:__anon11
P_PID	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	49;"	d
P_tmpdir	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	120;"	d
ParseNumber	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:ParseNumber(numberstring, base_or_zero) abort$/;"	f
ParseOptions	autoload/plugged/fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f
ParseRange	autoload/plugged/fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f
ParseSnippets_ClearAll	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
ParseTagfield	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:ParseTagfield(tagfields) abort$/;"	f
PassMerger	autoload/plugged/fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f
PatchSearchExpr	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
Path.AbsolutePathFor	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.WinToUnixPath	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.addDelimiter	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
Path.bookmarkNames	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.copy	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
Path.isHiddenUnder	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
Path.isUnixHiddenFile	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PathInfo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
Pattern	autoload/plugged/fzf/src/pattern.go	/^type Pattern struct {$/;"	t
Pause	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Pause(bool)        {}$/;"	f
Pause	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Pause(clear bool) {$/;"	f
Pause	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Pause(clear bool) {$/;"	f
Peek	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f
PerlSyntaxFold	autoload/plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
PgDn	autoload/plugged/fzf/src/tui/tui.go	/^	PgDn$/;"	c
PgUp	autoload/plugged/fzf/src/tui/tui.go	/^	PgUp$/;"	c
PlugMapping	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:PlugMapping(base) abort$/;"	f
Plugin_SuperTab_SimpleTest	autoload/plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Position	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position:$/;"	c
PrefixMatch	autoload/plugged/fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
PrepareContainer	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:PrepareContainer() abort$/;"	f
PreparePathArgs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
Prepend	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Prepend(prefix string) {$/;"	f
PrependFpath	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! s:PrependFpath(lines) abort$/;"	f
PrettyText	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^class PrettyText (object):$/;"	c
PrevTopLevelLnum	autoload/plugged/vista.vim/autoload/vista/jump.vim	/^function! s:PrevTopLevelLnum() abort$/;"	f
PrevTrailingWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% PrevTrailingWhitespace call <SID>GotoTrailingWhitespace(1, <line1>, <line2>)$/;"	c
PreviousFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
PreviousFormatter	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^command! PreviousFormatter call s:PreviousFormatter()$/;"	c
PreviousFormatter	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:PreviousFormatter()$/;"	f
PreviousHunk	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
PreviousItem	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
PreviousSection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
PreviousSectionEnd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
Print	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Print(text string) {$/;"	f
Print	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Print(text string) {$/;"	f
PrintBaseInfo	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:PrintBaseInfo(integer, base) abort$/;"	f
Program	autoload/plugged/vim-autoformat/samples/csharp.cs	/^using System; class Program { static int Main(string[] args) { Console.WriteLine(args[0]); int i = 0; i++; return 0; } $/;"	c
ProjectRun	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:ProjectRun(...) abort$/;"	f
ProjectionistDetect	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
ProperIndenting_AutoIndentAndNewline_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
Protect	autoload/plugged/fzf/src/protector/protector.go	/^func Protect() {$/;"	f
Protect	autoload/plugged/fzf/src/protector/protector_openbsd.go	/^func Protect() {$/;"	f
Push	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f
PushSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PushSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
PutMessages	autoload/plugged/vim-autoformat/plugin/utils.vim	/^command! PutMessages redir @" | messages | redir END | put$/;"	c
PythonCode	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_SnipRvCanBeNonText	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class Python_SnipRvCanBeNonText(_VimTest):$/;"	c
Q	keys/mappings.vim	/^noremap Q :q!<cr>$/;"	m
QueryLog	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
QuickScopeToggle	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^command! -nargs=0 QuickScopeToggle call quick_scope#Toggle()$/;"	c
QuickfixCreate	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
QuickfixGet	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
QuickfixSet	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
QuickfixStream	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, callback, ...) abort$/;"	f
QuickpickFilter	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickFilter(id, key) closure$/;"	f
Qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Qux:$/;"	c	class:Foo.Bar.Qux.Bar
Qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Qux:$/;"	c	class:Foo.Bar1.Qux.Bar
Qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Qux:$/;"	c	class:Foo.Bar2.Qux.Bar
Qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Qux:$/;"	c	class:Foo.Bar
Qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Qux:$/;"	c	class:Foo.Bar1
Qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Qux:$/;"	c	class:Foo.Bar2
RAND_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	86;"	d
RELEASE64	autoload/plugged/fzf/Makefile	/^RELEASE64      := fzf-$(VERSION)-$(GOOS)_amd64$/;"	m
RELEASEARM5	autoload/plugged/fzf/Makefile	/^RELEASEARM5    := fzf-$(VERSION)-$(GOOS)_arm5$/;"	m
RELEASEARM6	autoload/plugged/fzf/Makefile	/^RELEASEARM6    := fzf-$(VERSION)-$(GOOS)_arm6$/;"	m
RELEASEARM7	autoload/plugged/fzf/Makefile	/^RELEASEARM7    := fzf-$(VERSION)-$(GOOS)_arm7$/;"	m
RELEASEARM8	autoload/plugged/fzf/Makefile	/^RELEASEARM8    := fzf-$(VERSION)-$(GOOS)_arm8$/;"	m
RELEASEPPC64LE	autoload/plugged/fzf/Makefile	/^RELEASEPPC64LE := fzf-$(VERSION)-$(GOOS)_ppc64le$/;"	m
RENAME_EXCHANGE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	159;"	d
RENAME_NOREPLACE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	158;"	d
RENAME_WHITEOUT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	160;"	d
REVISION	autoload/plugged/fzf/Makefile	/^REVISION       := $(shell git log -n 1 --pretty=format:%h -- $(SOURCES))$/;"	m
RG	plug-config/fzf.vim	/^command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)$/;"	c
ROOT_DIR	autoload/plugged/fzf/Makefile	/^ROOT_DIR       := $(shell dirname $(MAKEFILE))$/;"	m
RSIZE_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	658;"	d
RST	autoload/plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:RST(idx, line) abort$/;"	f
Random	autoload/plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
Random	autoload/plugged/vim-rooter/test/runner.vim	/^function Random(min, max)$/;"	f
RandomInt	autoload/plugged/vim-autoformat/plugin/utils.vim	/^function! g:RandomInt()$/;"	f
Range	autoload/plugged/fzf/src/tokenizer.go	/^type Range struct {$/;"	t
Read	autoload/plugged/fzf/src/util/util_unix.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f
Read	autoload/plugged/fzf/src/util/util_windows.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f
ReadExec	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadExec(line1, count, range, mods, env, args, options) abort$/;"	f
ReadPrepare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
ReadSource	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f
Reader	autoload/plugged/fzf/src/reader.go	/^type Reader struct {$/;"	t
RealParentOf	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:RealParentOf(candidate) abort$/;"	f
RebaseArgument	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
RebaseSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
RecTabStopsWithExpandtab_SimpleExample_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	autoload/plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	autoload/plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
Refar	autoload/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#RefarComplete -nargs=* -range=-1 Refar$/;"	c
Refar	autoload/plugged/far.vim/plugin/far.vim	/^function! Refar(rngmode, rngline1, rngline2, ...) abort "{{{$/;"	f
Refresh	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Refresh()          {}$/;"	f
Refresh	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Refresh() {$/;"	f
Refresh	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Refresh() {$/;"	f
Refresh	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Refresh() {$/;"	f
Refresh	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Refresh() {$/;"	f
RefreshTabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
RefreshWindows	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {}$/;"	f
RefreshWindows	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) RefreshWindows(windows []Window) {$/;"	f
RefreshWindows	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {$/;"	f
Relative	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
ReloadStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
ReloadStatusBuffer	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
ReloadTabStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
ReloadWinStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
Remote	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
Remove	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove Unlink<bang>$/;"	c
Remove	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
RemoveTrailingSpaces	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^command! RemoveTrailingSpaces call s:RemoveTrailingSpaces()$/;"	c
RemoveTrailingSpaces	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:RemoveTrailingSpaces()$/;"	f
RemoveTrailingWhitespace	autoload/plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
RemoveVisibility	autoload/plugged/vista.vim/autoload/vista/cursor/ctags.vim	/^function! s:RemoveVisibility(tag) abort$/;"	f
Rename	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=custom,s:Rename_complete Rename$/;"	c
Rename_complete	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:Rename_complete(A, L, P) abort$/;"	f
Render	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! s:Render(data) abort$/;"	f
Render	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Render() abort$/;"	f
RenderDescendants	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:RenderDescendants(parent_name, parent_line, descendants, rows, depth) abort$/;"	f
RenderGroupedData	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! s:RenderGroupedData(grouped_data) abort$/;"	f
RenderLSPHirAndThenGroupByKind	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:RenderLSPHirAndThenGroupByKind(data) abort$/;"	f
RenderLinewise	autoload/plugged/vista.vim/autoload/vista/renderer/line.vim	/^function! s:RenderLinewise() abort$/;"	f
RenderNonHirRow	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:RenderNonHirRow(vs, rendered) abort$/;"	f
RenderScopeless	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:RenderScopeless(scope_less, rows) abort$/;"	f
Renderer	autoload/plugged/fzf/src/tui/tui.go	/^type Renderer interface {$/;"	t
ReplaceCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
ReplaceText	autoload/plugged/vim-radical/autoload/radical.vim	/^function! s:ReplaceText(startcol, endcol, replacement) abort$/;"	f
Reset	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool, clearCache bool) {$/;"	f
Resize	autoload/plugged/fzf/src/tui/tui.go	/^	Resize$/;"	c
Resolve	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
Result	autoload/plugged/fzf/src/algo/algo.go	/^type Result struct {$/;"	t
Result	autoload/plugged/fzf/src/result.go	/^type Result struct {$/;"	t
Resume	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Resume(bool, bool) {}$/;"	f
Resume	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Resume(clear bool, sigcont bool) {$/;"	f
Resume	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Resume(clear bool, sigcont bool) {$/;"	f
RetainsTheUnnamedRegister	autoload/plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	autoload/plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
Reverse	autoload/plugged/fzf/src/tui/dummy.go	/^	Reverse          = Attr(1 << 6)$/;"	c
Reverse	autoload/plugged/fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c
RevertSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Rg	plug-config/fzf.vim	/^command! -bang -nargs=* Rg$/;"	c
Right	autoload/plugged/fzf/src/tui/tui.go	/^	Right$/;"	c
RightClick	autoload/plugged/fzf/src/tui/tui.go	/^	RightClick$/;"	c
RipgrepFzf	plug-config/fzf.vim	/^function! RipgrepFzf(query, fullscreen)$/;"	f
Rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar Rooter call <SID>rooter()$/;"	c
RooterToggle	autoload/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar RooterToggle call <SID>toggle()$/;"	c
Run	autoload/plugged/fzf/src/core.go	/^func Run(opts *Options, revision string) {$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:Run() abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Run() abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Run(fpath) abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:Run() abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! s:Run() abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:Run() abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:Run() abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:Run(...) abort$/;"	f
Run	autoload/plugged/vista.vim/autoload/vista/finder/skim.vim	/^function! s:Run(...) abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:RunAsync() abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:RunAsync() abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:RunAsync(fpath) abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:RunAsync() abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! s:RunAsync() abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:RunAsync() abort$/;"	f
RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:RunAsync() abort$/;"	f
RunAsyncCommon	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:RunAsyncCommon(cmd) abort$/;"	f
RunBufDelete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
RunEdit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, job) abort$/;"	f
RunJobs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunJobs() abort$/;"	f
RunReceive	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, job, data, ...) abort$/;"	f
RunSend	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
RunTest	autoload/plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
RunTest	autoload/plugged/vim-rooter/test/runner.vim	/^function RunTest(test)$/;"	f
RunWait	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, job) abort$/;"	f
Rune	autoload/plugged/fzf/src/tui/tui.go	/^	Rune = iota$/;"	c
RuneWidth	autoload/plugged/fzf/src/util/util.go	/^func RuneWidth(r rune, prefixWidth int, tabstop int) int {$/;"	f
RunesToChars	autoload/plugged/fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f
S	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  nmap S <Plug>Sneak_S$/;"	m
S	keys/mappings.vim	/^noremap S :w!<cr>$/;"	m
SCHED_BATCH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	32;"	d
SCHED_DEADLINE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	35;"	d
SCHED_FIFO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	29;"	d
SCHED_IDLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	34;"	d
SCHED_ISO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	33;"	d
SCHED_OTHER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	28;"	d
SCHED_RESET_ON_FORK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	37;"	d
SCHED_RR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	30;"	d
SClose	autoload/plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar SClose call startify#session_close()$/;"	c
SDelete	autoload/plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SDelete call startify#session_delete(<bang>0, <f-args>)$/;"	c
SDown	autoload/plugged/fzf/src/tui/tui.go	/^	SDown$/;"	c
SEEK_CUR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	110;"	d
SEEK_DATA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	113;"	d
SEEK_END	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	111;"	d
SEEK_HOLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	114;"	d
SEEK_SET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	109;"	d
SEQUENCES	autoload/plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SID	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
SID	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
SIG_ATOMIC_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	223;"	d
SIG_ATOMIC_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	668;"	d
SIG_ATOMIC_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	222;"	d
SIG_ATOMIC_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	667;"	d
SIG_ATOMIC_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	312;"	d
SIZE_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	227;"	d
SIZE_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	230;"	d
SIZE_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	232;"	d
SIZE_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	653;"	d
SIZE_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	313;"	d
SLeft	autoload/plugged/fzf/src/tui/tui.go	/^	SLeft$/;"	c
SLoad	autoload/plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SLoad   call startify#session_load(<bang>0, <f-args>)$/;"	c
SNIPMATE_SNIPPET_PRIORITY	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SOURCES	autoload/plugged/fzf/Makefile	/^SOURCES        := $(wildcard *.go src\/*.go src\/*\/*.go) $(MAKEFILE)$/;"	m
SRight	autoload/plugged/fzf/src/tui/tui.go	/^	SRight$/;"	c
SSave	autoload/plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SSave   call startify#session_save(<bang>0, <f-args>)$/;"	c
STA_CLK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	104;"	d
STA_CLOCKERR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	101;"	d
STA_DEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	92;"	d
STA_FLL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	89;"	d
STA_FREQHOLD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	94;"	d
STA_INS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	91;"	d
STA_MODE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	103;"	d
STA_NANO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	102;"	d
STA_PLL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	86;"	d
STA_PPSERROR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	99;"	d
STA_PPSFREQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	87;"	d
STA_PPSJITTER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	97;"	d
STA_PPSSIGNAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	96;"	d
STA_PPSTIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	88;"	d
STA_PPSWANDER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	98;"	d
STA_RONLY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	107;"	d
STA_UNSYNC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	93;"	d
STDC_HEADERS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1498;"	d
SUp	autoload/plugged/fzf/src/tui/tui.go	/^	SUp$/;"	c
SafeSetBufline	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! s:SafeSetBufline(bufnr, lines) abort$/;"	f
ScriptWrite	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ScriptWrite(command, pause)$/;"	f
Search	autoload/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Search(chunk *Chunk, key string) []Result {$/;"	f
SearchOptions	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:SearchOptions(...) abort$/;"	f
SectionSpec	autoload/plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	autoload/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	autoload/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	autoload/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	autoload/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	autoload/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	autoload/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
Selection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
Server	autoload/plugged/bracey.vim/server/server.js	/^function Server(settings){$/;"	c
Set	autoload/plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f
Set	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f
SetBufline	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  function! s:SetBufline(bufnr, lines) abort$/;"	f
SetDefault	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
SetNonblock	autoload/plugged/fzf/src/util/util_unix.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f
SetNonblock	autoload/plugged/fzf/src/util/util_windows.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f
SetUp	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
SetUp	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function SetUp()$/;"	f
Settings	autoload/plugged/vim-autoformat/samples/ruby.rb	/^class Settings$/;"	c
Setup	autoload/plugged/vim-context-commentstring/plugin/context-commentstring.vim	/^function! s:Setup()$/;"	f
SetupAutoCommands	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! <SID>SetupAutoCommands()$/;"	f
SetupCppBench	langtemplate.vim	/^function! SetupCppBench()$/;"	f
SetupCppTest	langtemplate.vim	/^function! SetupCppTest()$/;"	f
Setupmake	langtemplate.vim	/^function! Setupmake()$/;"	f
Setupmarkdown	langtemplate.vim	/^func! Setupmarkdown()$/;"	f
Setuppython	langtemplate.vim	/^function! Setuppython()$/;"	f
Setupshell	langtemplate.vim	/^func! Setupshell()$/;"	f
Shell	autoload/plugged/fzf/test/test_go.rb	/^class Shell$/;"	c
ShellCode	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShiftWidthZero	autoload/plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
ShortToLong	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:ShortToLong(short) abort$/;"	f
ShouldHighlight	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldHighlight()$/;"	f
ShouldSkipDisplay	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! s:ShouldSkipDisplay(lnum) abort$/;"	f
ShouldStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldStripWhitespaceOnSave()$/;"	f
ShouldUseMarkdownExtension	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:ShouldUseMarkdownExtension(source_filetype) abort$/;"	f
ShowInfo	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:ShowInfo()$/;"	f
Shuffle	autoload/plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
Shuffle	autoload/plugged/vim-rooter/test/runner.vim	/^function Shuffle(list)$/;"	f
SilentSudoCmd	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:SilentSudoCmd(editor) abort$/;"	f
SimpleExpandEndingWithNewline_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_DoNotClobberDefaultRegister	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_DoNotClobberDefaultRegister(_VimTest):$/;"	c
SimpleExpand_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
Slab	autoload/plugged/fzf/src/util/slab.go	/^type Slab struct {$/;"	t
Slash	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
Slash	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
Sleuth	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^command! -bar -bang Sleuth call s:detect()$/;"	c
SleuthIndicator	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^function! SleuthIndicator() abort$/;"	f
Snapshot	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f
SnipMateFileSource	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SnippetActions_CanEvenWrapSnippetInPreAction	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class SnippetDefinition:$/;"	c
SnippetDictionary	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^class SnippetDictionary:$/;"	c
SnippetFileSource	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager:$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand(_SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^class SnippetSource:$/;"	c
SnippetSyntaxError	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
SnippetUtil	autoload/plugged/coc-snippets/python/ultisnips.py	/^class SnippetUtil(object):$/;"	c
SnippetUtil	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtil:$/;"	c
SnippetUtilForAction	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	autoload/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
SortCompare	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:SortCompare(i1, i2) abort$/;"	f
Source	autoload/plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
Source	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^class Source(Base):$/;"	c
SpeedDatingFormat	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^command! -bar -bang -count=0 -nargs=? SpeedDatingFormat :call s:add_format(<q-args>,<count>,<bang>0)$/;"	c
Split	vscode/settings.vim	/^command! -complete=file -nargs=? Split call <SID>split('h', <q-args>)$/;"	c
SplitExpand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpand(string, ...) abort$/;"	f
SplitExpandChain	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
SquashArgument	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
StageApply	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
StageArgs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
StageDelete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
StageDiff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageIgnore	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
StageInfo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
StageInline	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
StageJump	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
StagePatch	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReveal	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
StageSeek	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
StartWith	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:StartWith(candidate_scope, root_scope) abort$/;"	f
Startify	autoload/plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar Startify call startify#insane_in_the_membrane(0)$/;"	c
StartifyDebug	autoload/plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar StartifyDebug call startify#debug()$/;"	c
StatusCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
StatusCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
StopCursorTimer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
StopFindTimer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:StopFindTimer() abort$/;"	f
StopHighlightTimer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:StopHighlightTimer() abort$/;"	f
String	autoload/plugged/fzf/src/pattern.go	/^func (t term) String() string {$/;"	f
String	autoload/plugged/fzf/src/tokenizer.go	/^func (d Delimiter) String() string {$/;"	f
String	autoload/plugged/fzf/src/tokenizer.go	/^func (t Token) String() string {$/;"	f
String	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) String() string {$/;"	f
StringReplace	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringReplace(text, old, new)$/;"	f
StringReplace	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^function! s:StringReplace(text, old, new) abort$/;"	f
StringStrip	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringStrip(text)$/;"	f
StripWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -bang -range=% StripWhitespace call <SID>StripWhitespaceCommand(<line1>, <line2>, <bang>0)$/;"	c
StripWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespace(line1, line2)$/;"	f
StripWhitespaceCommand	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceCommand(line1, line2, force)$/;"	f
StripWhitespaceMotion	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceMotion(...)$/;"	f
StripWhitespaceOnChangedLines	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -bang -range=% StripWhitespaceOnChangedLines call <SID>StripWhitespaceOnChangedLinesCommand(<line1>, <line2>, <bang>0)$/;"	c
StripWhitespaceOnChangedLinesCommand	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceOnChangedLinesCommand(line1, line2, force)$/;"	f
StripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceOnSave(force)$/;"	f
Style	autoload/plugged/fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f
Subcommands	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Subcommands() abort$/;"	f
SuckerThread	autoload/plugged/vim-autoformat/samples/python.py	/^class SuckerThread(websucker.Sucker):     $/;"	c
SudoEdit	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=? SudoEdit$/;"	c
SudoEditInit	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:SudoEditInit() abort$/;"	f
SudoError	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:SudoError() abort$/;"	f
SudoReadCmd	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:SudoReadCmd() abort$/;"	f
SudoSetup	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:SudoSetup(file) abort$/;"	f
SudoWrite	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite$/;"	c
SudoWriteCmd	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:SudoWriteCmd() abort$/;"	f
SuffixMatch	autoload/plugged/fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Support	autoload/plugged/tagalong.vim/spec/support/vim.rb	/^module Support$/;"	m
Swap	autoload/plugged/fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f
Swap	autoload/plugged/fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f
Swap	autoload/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f
Swap	autoload/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f
SyncAutocmd	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
SystemError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
TIMER_ABSTIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	69;"	d
TIME_UTC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	65;"	d
TMP_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	26;"	d
Tab	autoload/plugged/fzf/src/tui/tui.go	/^	Tab$/;"	c
TabBuffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
TabStop	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	autoload/plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	autoload/plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	autoload/plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	autoload/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	autoload/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
TagalongDeinit	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^command TagalongDeinit call tagalong#Deinit()$/;"	c
TagalongInit	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^command TagalongInit   call tagalong#Init()$/;"	c
TaskManager	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^class TaskManager (object):$/;"	c
TcellWindow	autoload/plugged/fzf/src/tui/tcell.go	/^type TcellWindow struct {$/;"	t
TearDown	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TearDown	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function TearDown()$/;"	f
TempCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
TempFileManager	autoload/plugged/ultisnips/test/vim_interface.py	/^class TempFileManager:$/;"	c
TempReadPost	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
TempReadPre	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
TempScript	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
TempState	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
TempnameBasedOnSourceBufname	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:TempnameBasedOnSourceBufname() abort$/;"	f
Terminal	autoload/plugged/fzf/src/terminal.go	/^type Terminal struct {$/;"	t
TestAdditiveExpect	autoload/plugged/fzf/src/options_test.go	/^func TestAdditiveExpect(t *testing.T) {$/;"	f
TestAllMatch	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestAnsiCodeStringConversion	autoload/plugged/fzf/src/ansi_test.go	/^func TestAnsiCodeStringConversion(t *testing.T) {$/;"	f
TestAtomicBool	autoload/plugged/fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f
TestBase	autoload/plugged/fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	autoload/plugged/fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c
TestBind	autoload/plugged/fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f
TestCacheKey	autoload/plugged/fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f
TestCacheable	autoload/plugged/fzf/src/pattern_test.go	/^func TestCacheable(t *testing.T) {$/;"	f
TestCaseSensitivity	autoload/plugged/fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f
TestCharsLength	autoload/plugged/fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f
TestCharsToString	autoload/plugged/fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f
TestCheapDelete	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestChunkCache	autoload/plugged/fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f
TestChunkList	autoload/plugged/fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f
TestColorOffset	autoload/plugged/fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f
TestColorSpec	autoload/plugged/fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f
TestCommonCharacters	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestContrain	autoload/plugged/fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f
TestCrash	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestDefaultCtrlNP	autoload/plugged/fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f
TestDelimiterRegex	autoload/plugged/fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f
TestDelimiterRegexRegex	autoload/plugged/fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f
TestDelimiterRegexString	autoload/plugged/fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f
TestEmptyMerger	autoload/plugged/fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f
TestEmptyPattern	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f
TestEmptyString	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestEqual	autoload/plugged/fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f
TestEventBox	autoload/plugged/fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f
TestExact	autoload/plugged/fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f
TestExactMatchNaive	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f
TestExactMatchNaiveBackward	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f
TestExtractColor	autoload/plugged/fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f
TestFish	autoload/plugged/fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c
TestFuzzyMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f
TestFuzzyMatchBackward	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f
TestGoFZF	autoload/plugged/fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c	class:TestBase
TestGuessing_BackspaceOneChar	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestHexToColor	autoload/plugged/fzf/src/tui/tui_test.go	/^func TestHexToColor(t *testing.T) {$/;"	f
TestHistory	autoload/plugged/fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f
TestIrrelevantNth	autoload/plugged/fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f
TestLangmapWithUtf8_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLongString	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f
TestLotsaNewlines	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestMax	autoload/plugged/fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f
TestMergerSorted	autoload/plugged/fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f
TestMergerUnsorted	autoload/plugged/fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f
TestNoSubstring	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestNormalize	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestNormalize(t *testing.T) {$/;"	f
TestOffsetSort	autoload/plugged/fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f
TestOnce	autoload/plugged/fzf/src/util/util_test.go	/^func TestOnce(t *testing.T) {$/;"	f
TestOrigTextAndTransformed	autoload/plugged/fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f
TestParseKeys	autoload/plugged/fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f
TestParseKeysWithComma	autoload/plugged/fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f
TestParseNilTheme	autoload/plugged/fzf/src/options_test.go	/^func TestParseNilTheme(t *testing.T) {$/;"	f
TestParseRange	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f
TestParseTermsEmpty	autoload/plugged/fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f
TestParseTermsExtended	autoload/plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f
TestParseTermsExtendedExact	autoload/plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f
TestPrefixMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f
TestPreviewOpts	autoload/plugged/fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f
TestQuoteEntryCmd	autoload/plugged/fzf/src/terminal_test.go	/^func TestQuoteEntryCmd(t *testing.T) {$/;"	f
TestRankComparison	autoload/plugged/fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f
TestReadFromCommand	autoload/plugged/fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f
TestRealLife	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestReplacePlaceholder	autoload/plugged/fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f
TestResultRank	autoload/plugged/fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f
TestShell	autoload/plugged/fzf/test/test_go.rb	/^module TestShell$/;"	m	class:TestBase
TestSplitNth	autoload/plugged/fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f
TestStringPtr	autoload/plugged/fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f
TestSuffixMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f
TestToCharsAscii	autoload/plugged/fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f
TestToggle	autoload/plugged/fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f
TestTokenize	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f
TestTransform	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f
TestTransformIndexOutOfBounds	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f
TestTrimLength	autoload/plugged/fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f
TestUltiSnipsProblem	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestValidateSign	autoload/plugged/fzf/src/options_test.go	/^func TestValidateSign(t *testing.T) {$/;"	f
TestWithNewline	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
TestZsh	autoload/plugged/fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c
Test_add_lines	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_common_prefix	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_prefix()$/;"	f
Test_common_suffix	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_suffix()$/;"	f
Test_diff_highlight	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_diff_highlight()$/;"	f
Test_dir_in_project	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_dir_in_project()$/;"	f
Test_directory_is_ancestor	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_directory_is_ancestor()$/;"	f
Test_directory_is_subdirectory	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_directory_is_subdirectory()$/;"	f
Test_edit_file_with_same_name_as_a_branch	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_empty_file	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_empty_file()$/;"	f
Test_encoding	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_exclude	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_exclude()$/;"	f
Test_file_added_to_git	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_file_in_project	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project()$/;"	f
Test_file_in_project_subdir	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project_subdir()$/;"	f
Test_filename_leading_dash	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_equals	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fix_file_references	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_foldtext	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_foldtext()$/;"	f
Test_follow_symlink	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_glob	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_glob()$/;"	f
Test_has_file_in_subdirectory	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_has_file_in_subdirectory()$/;"	f
Test_hunk_outside_noop	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_stage_partial_cmd_added	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_cmd_added()$/;"	f
Test_hunk_stage_partial_preview_added	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added()$/;"	f
Test_hunk_stage_partial_preview_added_removed	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added_removed()$/;"	f
Test_hunk_stage_partial_visual_added	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_visual_added()$/;"	f
Test_hunk_stage_preview_write	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_preview_write()$/;"	f
Test_hunk_undo	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_hunk_undo_dos	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo_dos()$/;"	f
Test_ignores_suffixesadd	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_ignores_suffixesadd()$/;"	f
Test_inner_text_object	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_lcs	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_lcs()$/;"	f
Test_modify_lines	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_non_project_file_change_to_home	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_home()$/;"	f
Test_non_project_file_change_to_parent	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_parent()$/;"	f
Test_non_project_file_default	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_default()$/;"	f
Test_orphaned_signs	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_overlapping_hunk_op	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_preview	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview()$/;"	f
Test_preview_dos	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview_dos()$/;"	f
Test_priority	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_priority()$/;"	f
Test_project_dir	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_project_dir()$/;"	f
Test_quickfix	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_quickfix()$/;"	f
Test_remove_first_lines	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_resolve_symlinks	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_resolve_symlinks()$/;"	f
Test_split	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_split()$/;"	f
Test_target_directories_only	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_directories_only()$/;"	f
Test_target_some_files_only	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_some_files_only()$/;"	f
Test_toggle	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_toggle()$/;"	f
Test_undo_nearby_hunk	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_user_autocmd	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_file_to_different_name	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_file_to_different_name()$/;"	f
Test_write_new_file	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_new_file()$/;"	f
Test_write_option	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
TextObject	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class TextObject:$/;"	c
TextObjectTransformation	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class TextObjectTransformation:$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
Tmux	autoload/plugged/fzf/test/test_go.rb	/^class Tmux$/;"	c
ToChars	autoload/plugged/fzf/src/util/chars.go	/^func ToChars(bytes []byte) Chars {$/;"	f
ToRunes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f
ToString	autoload/plugged/fzf/src/ansi.go	/^func (s *ansiState) ToString() string {$/;"	f
ToString	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f
ToggleStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleStripWhitespaceOnSave call <SID>ToggleStripWhitespaceOnSave()$/;"	c
ToggleStripWhitespaceOnSave	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleStripWhitespaceOnSave()$/;"	f
ToggleTabTreeVCS	autoload/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
ToggleWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleWhitespace call <SID>ToggleWhitespace()$/;"	c
ToggleWhitespace	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleWhitespace()$/;"	f
Token	autoload/plugged/fzf/src/tokenizer.go	/^type Token struct {$/;"	t
Token	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class Token:$/;"	c
Tokenize	autoload/plugged/fzf/src/tokenizer.go	/^func Tokenize(text string, delimiter Delimiter) []Token {$/;"	f
ToolItems	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
ToolParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
ToolStream	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
ToolToFrom	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
Top	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Top() int {$/;"	f
Top	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Top() int {$/;"	f
TrailingNewline_TabStop_EndNL	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
TrailingWhitespaces	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f
Transform	autoload/plugged/fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f
TransformDirectly	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:TransformDirectly(row) abort$/;"	f
Transformation	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	autoload/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Tree	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
Tree	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
TreeChomp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getCascadeRoot	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
TreeDirNode.getChild	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findSibling	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openExplorer	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
TreeFileNode.openInNewTab	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeInfo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
TriggerUpdate	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:TriggerUpdate(event, bufnr, fpath) abort$/;"	f
Trim	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:Trim(s)$/;"	f
TrimLength	autoload/plugged/fzf/src/item.go	/^func (item *Item) TrimLength() uint16 {$/;"	f
TrimLength	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() uint16 {$/;"	f
TrimSpacesAtEndOfLines	autoload/plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
TrimTrailingWhitespaces	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimTrailingWhitespaces() {$/;"	f
TryAllFormatters	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:TryAllFormatters(...) range$/;"	f
TryAlternatives	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! s:TryAlternatives(tried, fpath) abort$/;"	f
TryAppendExtension	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:TryAppendExtension(tempname) abort$/;"	f
TryFoldIsOk	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:TryFoldIsOk() abort$/;"	f
TryFormatterPython	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:TryFormatterPython()$/;"	f
TryFormatterPython3	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:TryFormatterPython3()$/;"	f
TryInitializeVista	autoload/plugged/vista.vim/autoload/vista.vim	/^function! s:TryInitializeVista() abort$/;"	f
TryParseAndEchoScope	autoload/plugged/vista.vim/autoload/vista/echo.vim	/^function! s:TryParseAndEchoScope() abort$/;"	f
TryRunExtension	autoload/plugged/vista.vim/autoload/vista/toc.vim	/^function! s:TryRunExtension(...) abort$/;"	f
U	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:bj
U	autoload/plugged/vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UI.IndentWid	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
UI.getPath	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UINT16_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	259;"	d
UINT16_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	414;"	d
UINT16_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	417;"	d
UINT16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	128;"	d
UINT16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	601;"	d
UINT16_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	281;"	d
UINT24_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	389;"	d
UINT24_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	394;"	d
UINT24_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	582;"	d
UINT32_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	260;"	d
UINT32_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	378;"	d
UINT32_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	381;"	d
UINT32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	129;"	d
UINT32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	557;"	d
UINT32_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	283;"	d
UINT40_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	349;"	d
UINT40_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	355;"	d
UINT40_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	535;"	d
UINT48_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	332;"	d
UINT48_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	338;"	d
UINT48_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	513;"	d
UINT56_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	315;"	d
UINT56_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	321;"	d
UINT56_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	491;"	d
UINT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	262;"	d
UINT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	264;"	d
UINT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	304;"	d
UINT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	307;"	d
UINT64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	130;"	d
UINT64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	463;"	d
UINT64_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	285;"	d
UINT8_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	258;"	d
UINT8_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	433;"	d
UINT8_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	436;"	d
UINT8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	127;"	d
UINT8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	623;"	d
UINT8_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	279;"	d
UINTMAX_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	270;"	d
UINTMAX_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	273;"	d
UINTMAX_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	690;"	d
UINTMAX_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	202;"	d
UINTMAX_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	664;"	d
UINTMAX_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	309;"	d
UINTPTR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	188;"	d
UINTPTR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	192;"	d
UINTPTR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	650;"	d
UINTPTR_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	306;"	d
UINT_FAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	175;"	d
UINT_FAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	178;"	d
UINT_FAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	616;"	d
UINT_FAST16_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	299;"	d
UINT_FAST24_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	588;"	d
UINT_FAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	176;"	d
UINT_FAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	179;"	d
UINT_FAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	575;"	d
UINT_FAST32_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	301;"	d
UINT_FAST40_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	541;"	d
UINT_FAST48_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	519;"	d
UINT_FAST56_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	497;"	d
UINT_FAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	181;"	d
UINT_FAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	484;"	d
UINT_FAST64_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	303;"	d
UINT_FAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	173;"	d
UINT_FAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	635;"	d
UINT_FAST8_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	297;"	d
UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	146;"	d
UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	613;"	d
UINT_LEAST16_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	290;"	d
UINT_LEAST24_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	585;"	d
UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	147;"	d
UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	572;"	d
UINT_LEAST32_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	292;"	d
UINT_LEAST40_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	538;"	d
UINT_LEAST48_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	516;"	d
UINT_LEAST56_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	494;"	d
UINT_LEAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	148;"	d
UINT_LEAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	481;"	d
UINT_LEAST64_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	294;"	d
UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	145;"	d
UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	632;"	d
UINT_LEAST8_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	288;"	d
UNAME_M	autoload/plugged/fzf/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNIDECODE_ALERT_RAISED	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	autoload/plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	autoload/plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UNIX	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^UNIX = (sys.platform[:3] != 'win') and True or False$/;"	v
UltiSnippetTextObj	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^fun! s:UltiSnippetTextObj(inner) abort$/;"	f
UltiSnips#AddFiletypes	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes) abort$/;"	f
UltiSnips#AddSnippetWithPriority	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, priority) abort$/;"	f
UltiSnips#Anon	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...) abort$/;"	f
UltiSnips#CursorMoved	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved() abort$/;"	f
UltiSnips#Edit	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...) abort$/;"	f
UltiSnips#ExpandSnippet	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet() abort$/;"	f
UltiSnips#ExpandSnippetOrJump	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump() abort$/;"	f
UltiSnips#FileTypeComplete	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos) abort$/;"	f
UltiSnips#JumpBackwards	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards() abort$/;"	f
UltiSnips#JumpForwards	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards() abort$/;"	f
UltiSnips#LeavingBuffer	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer() abort$/;"	f
UltiSnips#LeavingInsertMode	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode() abort$/;"	f
UltiSnips#ListSnippets	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets() abort$/;"	f
UltiSnips#RefreshSnippets	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets() abort$/;"	f
UltiSnips#SaveLastVisualSelection	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range abort$/;"	f
UltiSnips#SnippetsInCurrentScope	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...) abort$/;"	f
UltiSnips#TrackChange	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange() abort$/;"	f
UltiSnips#map_keys#MapKeys	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys() abort$/;"	f
UltiSnipsAddFiletypes	autoload/plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	autoload/plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	autoload/plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UmlautsBeforeTriggerAndCharsAfter	autoload/plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
Underline	autoload/plugged/fzf/src/tui/dummy.go	/^	Underline        = Attr(1 << 3)$/;"	c
Underline	autoload/plugged/fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c
Undo_ChangesInPlaceholder	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	autoload/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
UndotreeFocus	autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeFocus    :call undotree#UndotreeFocus()$/;"	c
UndotreeHide	autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeHide     :call undotree#UndotreeHide()$/;"	c
UndotreeShow	autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeShow     :call undotree#UndotreeShow()$/;"	c
UndotreeToggle	autoload/plugged/undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs Vim version >= 7.3"$/;"	c
UndotreeToggle	autoload/plugged/undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs vim7.3 with patch005 applied."$/;"	c
UndotreeToggle	autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeToggle   :call undotree#UndotreeToggle()$/;"	c
Uniq	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
Unlink	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink$/;"	c
Unwatch	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f
Up	autoload/plugged/fzf/src/tui/tui.go	/^	Up$/;"	c
UpdateCommentString	autoload/plugged/vim-context-commentstring/plugin/context-commentstring.vim	/^function! s:UpdateCommentString()$/;"	f
UpdateCount	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool, failedCommand *string) {$/;"	f
UpdateHeader	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f
UpdateIndex	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function s:UpdateIndex(dir, info) abort$/;"	f
UpdateList	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger, reset bool) {$/;"	f
UpdateModifiedSnippetWithoutCursorMove1	autoload/plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	autoload/plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
UpdateProgress	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f
UsableWin	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
UserCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand(...) abort$/;"	f
UserCommandList	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
Util1	autoload/plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	autoload/plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	autoload/plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
VADER_OUTPUT_FILE	autoload/plugged/vim-sneak/Makefile	/^	VADER_OUTPUT_FILE=\/dev\/stderr n$(VIM) --headless '+Vader! tests\/*.vader'$/;"	m
VERBOSE	autoload/plugged/vim-autoformat/samples/python.py	/^VERBOSE=2     $/;"	v
VERSION	autoload/plugged/bracey.vim/server/server.js	/^var VERSION = "0.0.1";$/;"	v
VERSION	autoload/plugged/fzf/Makefile	/^VERSION        := $(shell awk -F= '\/version =\/ {print $$2}' src\/constants.go | tr -d "\\" ")$/;"	m
VERSION	autoload/plugged/vim-bbye/Makefile	/^VERSION := 1.0.1$/;"	m
VIM	autoload/plugged/vim-sneak/Makefile	/^VIM = vim -N -u NORC -i NONE --cmd 'set rtp+=tests\/vim-vader rtp+=tests\/vim-repeat rtp+=tests\/vim-surround rtp+=$$PWD'$/;"	m
VerifyVimDict1	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
Vim	autoload/plugged/tagalong.vim/spec/support/vim.rb	/^  module Vim$/;"	m	class:Support
VimBuffer	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^class VimBuffer:$/;"	c
VimBufferProxy	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(vim_helper.VimBuffer):$/;"	c
VimInterface	autoload/plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	autoload/plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	autoload/plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	autoload/plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimPosition	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState:$/;"	c
VimTestCase	autoload/plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
VirtualEdit	autoload/plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
Vista	autoload/plugged/vista.vim/plugin/vista.vim	/^command! -bang -nargs=* -bar -complete=custom,vista#util#Complete Vista call vista#(<bang>0, <f-args>)$/;"	c
Visual	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver:$/;"	c
VisualToken	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	autoload/plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	autoload/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
Vnew	vscode/settings.vim	/^command! -complete=file -nargs=? Vnew call <SID>split('v', '__vscode_new__')$/;"	c
Vsplit	vscode/settings.vim	/^command! -complete=file -nargs=? Vsplit call <SID>split('v', <q-args>)$/;"	c
W	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^  command! -bar W Wall$/;"	c
WCHAR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	240;"	d
WCHAR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	60;"	d
WCHAR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	678;"	d
WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	239;"	d
WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	59;"	d
WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	682;"	d
WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	684;"	d
WCHAR_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	314;"	d
WCONTINUED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	32;"	d
WEOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	64;"	d
WEOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wctype.h	33;"	d
WEXITED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	31;"	d
WEXITSTATUS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	43;"	d
WIFCONTINUED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	50;"	d
WIFEXITED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	46;"	d
WIFSIGNALED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	47;"	d
WIFSTOPPED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	48;"	d
WINT_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	245;"	d
WINT_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	671;"	d
WINT_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	674;"	d
WINT_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	244;"	d
WINT_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	670;"	d
WINT_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	673;"	d
WINT_WIDTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	315;"	d
WIN_ESCAPES	autoload/plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	autoload/plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
WNOHANG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	25;"	d
WNOWAIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	33;"	d
WSTOPPED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	30;"	d
WSTOPSIG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	45;"	d
WTERMSIG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	44;"	d
WUNTRACED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	26;"	d
Wait	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f
WaitFor	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f
Wall	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=? Wall$/;"	c
Wall	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:Wall() abort$/;"	f
Watch	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f
WebSocketClient	autoload/plugged/bracey.vim/server/test/server.js	/^var WebSocketClient = require('websocket').client;$/;"	v
WhichKey	autoload/plugged/vim-which-key/plugin/which_key.vim	/^command! -bang -nargs=1 WhichKey call which_key#start(0, <bang>0, <args>)$/;"	c
WhichKeyVisual	autoload/plugged/vim-which-key/plugin/which_key.vim	/^command! -bang -nargs=1 -range WhichKeyVisual call which_key#start(1, <bang>0, <args>)$/;"	c
WhitespaceInit	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:WhitespaceInit()$/;"	f
Width	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Width() int {$/;"	f
Width	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Width() int {$/;"	f
WinShellEsc	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
Window	autoload/plugged/fzf/src/tui/tui.go	/^type Window interface {$/;"	t
WindowSwap#ClearMarkedWindowNum	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#ClearMarkedWindowNum()$/;"	f
WindowSwap#DeprecatedDo	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#DeprecatedDo()$/;"	f
WindowSwap#DeprecatedMark	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#DeprecatedMark()$/;"	f
WindowSwap#DeprecationNotice	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#DeprecationNotice()$/;"	f
WindowSwap#DoWindowSwap	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#DoWindowSwap()$/;"	f
WindowSwap#EasyWindowSwap	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#EasyWindowSwap()$/;"	f
WindowSwap#GetMarkedWindowNum	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#GetMarkedWindowNum()$/;"	f
WindowSwap#GetMarkedWindowTuple	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#GetMarkedWindowTuple()$/;"	f
WindowSwap#HasMarkedWindow	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#HasMarkedWindow()$/;"	f
WindowSwap#IsCurrentWindowMarked	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#IsCurrentWindowMarked()$/;"	f
WindowSwap#IsWindowMarked	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#IsWindowMarked(tab,win)$/;"	f
WindowSwap#MarkWindowSwap	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#MarkWindowSwap()$/;"	f
WindowSwap#SetMarkedWindowNum	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^function! WindowSwap#SetMarkedWindowNum(tab,win)$/;"	f
WrapCmd	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^    function! s:WrapCmd(cmd) abort$/;"	f
X	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) X() int {$/;"	f
X	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) X() int {$/;"	f
XXXaddrobot	autoload/plugged/vim-autoformat/samples/python.py	/^    def XXXaddrobot(self,*args):     $/;"	m	class:SuckerThread
XXXisallowed	autoload/plugged/vim-autoformat/samples/python.py	/^    def XXXisallowed(self,*args):     $/;"	m	class:SuckerThread
Y	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Y() int {$/;"	f
Y	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Y() int {$/;"	f
YAPFFormatConfigFileExists	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^function! g:YAPFFormatConfigFileExists()$/;"	f
Z	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  omap Z <Plug>Sneak_S$/;"	m
\	autoload/plugged/vim-sneak/plugin/sneak.vim	/^    nmap \\ <Plug>Sneak_,$/;"	m
\	autoload/plugged/vim-sneak/plugin/sneak.vim	/^    omap \\ <Plug>Sneak_,$/;"	m
\f	plug-config/autoformat.vim	/^nnoremap \\f :Autoformat<CR>$/;"	m
_ALIGNED_BUFFER_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	30;"	d
_ALLOCATOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@allocator.h	44;"	d
_ALLOCA_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@alloca.h	19;"	d
_ALLOC_TRAITS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@alloc_traits.h	31;"	d
_ASM_GENERIC_ERRNO_BASE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno-base.h	3;"	d
_ASM_GENERIC_ERRNO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@asm-generic@errno.h	3;"	d
_ATFILE_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	214;"	d
_ATFILE_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	215;"	d
_ATFILE_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	341;"	d
_ATFILE_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	342;"	d
_AddFuncBase	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Atomic_word	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@atomic_word.h	/^typedef int _Atomic_word;$/;"	t
_BACKWARD_BINDERS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@backward@binders.h	57;"	d
_BASIC_IOS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@basic_ios.h	31;"	d
_BASIC_STRING_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@basic_string.h	35;"	d
_BITS_BYTESWAP_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	24;"	d
_BITS_CPU_SET_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	21;"	d
_BITS_ENDIANNESS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endianness.h	2;"	d
_BITS_ENDIAN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	20;"	d
_BITS_ERRNO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@errno.h	20;"	d
_BITS_FLOATN_COMMON_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	21;"	d
_BITS_FLOATN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	20;"	d
_BITS_LOCALE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	24;"	d
_BITS_PTHREADTYPES_ARCH_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	19;"	d
_BITS_PTHREADTYPES_COMMON_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	20;"	d
_BITS_SCHED_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@sched.h	21;"	d
_BITS_SETJMP_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@setjmp.h	20;"	d
_BITS_STDINT_INTN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-intn.h	20;"	d
_BITS_STDINT_UINTN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-uintn.h	20;"	d
_BITS_STDIO_LIM_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdio_lim.h	19;"	d
_BITS_TIME64_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time64.h	24;"	d
_BITS_TIMEX_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	19;"	d
_BITS_TIME_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time.h	24;"	d
_BITS_TYPESIZES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	24;"	d
_BITS_TYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	24;"	d
_BITS_TYPES_LOCALE_T_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@locale_t.h	20;"	d
_BITS_TYPES_STRUCT_SCHED_PARAM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_sched_param.h	20;"	d
_BITS_TYPES___LOCALE_T_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	21;"	d
_BITS_UINTN_IDENTITY_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@uintn-identity.h	24;"	d
_BITS_WCHAR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	20;"	d
_BITS_WCTYPE_WCHAR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	24;"	d
_Base	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base:$/;"	c
_BaseGuessing	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing:$/;"	c
_CHAR_TRAITS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@char_traits.h	35;"	d
_CONCEPT_CHECK_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	31;"	d
_CONDITIONAL	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CPP_TYPE_TRAITS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cpp_type_traits.h	33;"	d
_CTYPE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	23;"	d
_CXXABI_FORCED_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_forced.h	32;"	d
_CXXABI_INIT_EXCEPTION_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_init_exception.h	32;"	d
_CleverReplace	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class _CleverReplace:$/;"	c
_Cxx_hashtable_define_trivial_hash	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@functional_hash.h	114;"	d
_Cxx_hashtable_define_trivial_hash	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@functional_hash.h	190;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	188;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	189;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	212;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	213;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	226;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	227;"	d
_DOLLAR	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ENDIAN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	19;"	d
_ERRNO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@errno.h	23;"	d
_ES_Base	autoload/plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_EXCEPTION_DEFINES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	31;"	d
_EXCEPTION_PTR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	32;"	d
_EXT_ALLOC_TRAITS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@alloc_traits.h	30;"	d
_EXT_NUMERIC_TRAITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	30;"	d
_EXT_TYPE_TRAITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@type_traits.h	30;"	d
_ExpandTabs	autoload/plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FEATURES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	19;"	d
_FUNCTEXCEPT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@functexcept.h	37;"	d
_FUNCTIONAL_HASH_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@functional_hash.h	31;"	d
_Float128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	/^typedef __float128 _Float128;$/;"	t
_Float16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef float _Float16 __attribute__ ((__mode__ (__HF__)));$/;"	t
_Float32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef float _Float32;$/;"	t
_Float32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef double _Float32x;$/;"	t
_Float64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef double _Float64;$/;"	t
_Float64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef long double _Float64;$/;"	t
_Float64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef _Float128 _Float64x;$/;"	t
_Float64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef long double _Float64x;$/;"	t
_FormatoptionsBase	autoload/plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_GLIBCXX11_USE_C99_COMPLEX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1514;"	d
_GLIBCXX11_USE_C99_MATH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1518;"	d
_GLIBCXX11_USE_C99_STDIO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1522;"	d
_GLIBCXX11_USE_C99_STDLIB	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1526;"	d
_GLIBCXX11_USE_C99_WCHAR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1530;"	d
_GLIBCXX14_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	137;"	d
_GLIBCXX14_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	139;"	d
_GLIBCXX17_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	145;"	d
_GLIBCXX17_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	147;"	d
_GLIBCXX17_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	97;"	d
_GLIBCXX17_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	99;"	d
_GLIBCXX17_INLINE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	161;"	d
_GLIBCXX17_INLINE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	163;"	d
_GLIBCXX20_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	153;"	d
_GLIBCXX20_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	155;"	d
_GLIBCXX20_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	103;"	d
_GLIBCXX20_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	105;"	d
_GLIBCXX98_USE_C99_COMPLEX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1535;"	d
_GLIBCXX98_USE_C99_MATH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1539;"	d
_GLIBCXX98_USE_C99_STDIO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1543;"	d
_GLIBCXX98_USE_C99_STDLIB	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1547;"	d
_GLIBCXX98_USE_C99_WCHAR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1551;"	d
_GLIBCXX_ABI_TAG_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	110;"	d
_GLIBCXX_ALWAYS_INLINE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@char_traits.h	47;"	d
_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	261;"	d
_GLIBCXX_ASAN_ANNOTATE_GREW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	258;"	d
_GLIBCXX_ASAN_ANNOTATE_GROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	255;"	d
_GLIBCXX_ASAN_ANNOTATE_REINIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	252;"	d
_GLIBCXX_ASAN_ANNOTATE_SHRINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	259;"	d
_GLIBCXX_ASSERTIONS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	439;"	d
_GLIBCXX_ATOMICITY_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@atomicity.h	30;"	d
_GLIBCXX_ATOMIC_BUILTINS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1554;"	d
_GLIBCXX_ATOMIC_WORD_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@atomic_word.h	30;"	d
_GLIBCXX_BEGIN_EXTERN_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	508;"	d
_GLIBCXX_BEGIN_NAMESPACE_ALGO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	400;"	d
_GLIBCXX_BEGIN_NAMESPACE_CONTAINER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	389;"	d
_GLIBCXX_BEGIN_NAMESPACE_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	293;"	d
_GLIBCXX_BEGIN_NAMESPACE_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	420;"	d
_GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	429;"	d
_GLIBCXX_BEGIN_NAMESPACE_VERSION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	308;"	d
_GLIBCXX_BITS_STD_ABS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@std_abs.h	31;"	d
_GLIBCXX_BUILTIN_IS_SAME_AS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	647;"	d
_GLIBCXX_CDTOR_CALLABI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_init_exception.h	42;"	d
_GLIBCXX_CHARCONV_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@charconv.h	31;"	d
_GLIBCXX_CONST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	50;"	d
_GLIBCXX_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	127;"	d
_GLIBCXX_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	130;"	d
_GLIBCXX_CPU_DEFINES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@cpu_defines.h	31;"	d
_GLIBCXX_CXX_ALLOCATOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++allocator.h	31;"	d
_GLIBCXX_CXX_CONFIG_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	31;"	d
_GLIBCXX_CXX_LOCALE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++locale.h	37;"	d
_GLIBCXX_C_LOCALE_GNU	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++locale.h	43;"	d
_GLIBCXX_DARWIN_USE_64_BIT_INODE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1505;"	d
_GLIBCXX_DEBUG_ASSERT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	34;"	d
_GLIBCXX_DEBUG_ASSERT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	57;"	d
_GLIBCXX_DEBUG_ASSERTIONS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	30;"	d
_GLIBCXX_DEBUG_MACRO_SWITCH_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	30;"	d
_GLIBCXX_DEBUG_ONLY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	36;"	d
_GLIBCXX_DEBUG_ONLY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	65;"	d
_GLIBCXX_DEBUG_PEDASSERT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	35;"	d
_GLIBCXX_DEBUG_PEDASSERT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	60;"	d
_GLIBCXX_DEBUG_PEDASSERT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	62;"	d
_GLIBCXX_DEFAULT_ABI_TAG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	295;"	d
_GLIBCXX_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	88;"	d
_GLIBCXX_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	92;"	d
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	89;"	d
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	93;"	d
_GLIBCXX_END_EXTERN_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	509;"	d
_GLIBCXX_END_NAMESPACE_ALGO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	402;"	d
_GLIBCXX_END_NAMESPACE_CONTAINER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	391;"	d
_GLIBCXX_END_NAMESPACE_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	294;"	d
_GLIBCXX_END_NAMESPACE_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	421;"	d
_GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	430;"	d
_GLIBCXX_END_NAMESPACE_VERSION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	309;"	d
_GLIBCXX_ERASE_IF_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@erase_if.h	31;"	d
_GLIBCXX_ERROR_CONSTANTS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@error_constants.h	31;"	d
_GLIBCXX_EXTERN_TEMPLATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	212;"	d
_GLIBCXX_EXTERN_TEMPLATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	444;"	d
_GLIBCXX_EXTERN_TEMPLATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	445;"	d
_GLIBCXX_FAST_MATH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	575;"	d
_GLIBCXX_FORWARD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@move.h	162;"	d
_GLIBCXX_FULLY_DYNAMIC_STRING	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1561;"	d
_GLIBCXX_GCC_GTHR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr.h	27;"	d
_GLIBCXX_GCC_GTHR_POSIX_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	27;"	d
_GLIBCXX_GTHREAD_USE_WEAK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr.h	140;"	d
_GLIBCXX_GTHREAD_USE_WEAK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr.h	141;"	d
_GLIBCXX_GTHREAD_USE_WEAK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr.h	145;"	d
_GLIBCXX_HAS_GTHREADS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1564;"	d
_GLIBCXX_HAVE_ACOSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1775;"	d
_GLIBCXX_HAVE_ACOSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	701;"	d
_GLIBCXX_HAVE_ACOSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1780;"	d
_GLIBCXX_HAVE_ACOSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	704;"	d
_GLIBCXX_HAVE_ALIGNED_ALLOC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	707;"	d
_GLIBCXX_HAVE_ARPA_INET_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	710;"	d
_GLIBCXX_HAVE_ASINF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1785;"	d
_GLIBCXX_HAVE_ASINF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	713;"	d
_GLIBCXX_HAVE_ASINL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1790;"	d
_GLIBCXX_HAVE_ASINL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	716;"	d
_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	719;"	d
_GLIBCXX_HAVE_ATAN2F	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1795;"	d
_GLIBCXX_HAVE_ATAN2F	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	722;"	d
_GLIBCXX_HAVE_ATAN2L	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1800;"	d
_GLIBCXX_HAVE_ATAN2L	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	725;"	d
_GLIBCXX_HAVE_ATANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1805;"	d
_GLIBCXX_HAVE_ATANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	728;"	d
_GLIBCXX_HAVE_ATANL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1810;"	d
_GLIBCXX_HAVE_ATANL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	731;"	d
_GLIBCXX_HAVE_ATOMIC_LOCK_POLICY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	734;"	d
_GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	67;"	d
_GLIBCXX_HAVE_AT_QUICK_EXIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	737;"	d
_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	644;"	d
_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	645;"	d
_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	649;"	d
_GLIBCXX_HAVE_BUILTIN_LAUNDER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	646;"	d
_GLIBCXX_HAVE_CDTOR_CALLABI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_init_exception.h	43;"	d
_GLIBCXX_HAVE_CDTOR_CALLABI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_init_exception.h	45;"	d
_GLIBCXX_HAVE_CEILF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1815;"	d
_GLIBCXX_HAVE_CEILF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	743;"	d
_GLIBCXX_HAVE_CEILL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1820;"	d
_GLIBCXX_HAVE_CEILL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	746;"	d
_GLIBCXX_HAVE_COMPLEX_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	749;"	d
_GLIBCXX_HAVE_COSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1825;"	d
_GLIBCXX_HAVE_COSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	752;"	d
_GLIBCXX_HAVE_COSHF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1830;"	d
_GLIBCXX_HAVE_COSHF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	755;"	d
_GLIBCXX_HAVE_COSHL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1835;"	d
_GLIBCXX_HAVE_COSHL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	758;"	d
_GLIBCXX_HAVE_COSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1840;"	d
_GLIBCXX_HAVE_COSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	761;"	d
_GLIBCXX_HAVE_DIRENT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	764;"	d
_GLIBCXX_HAVE_DLFCN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	767;"	d
_GLIBCXX_HAVE_EBADMSG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	770;"	d
_GLIBCXX_HAVE_ECANCELED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	773;"	d
_GLIBCXX_HAVE_ECHILD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	776;"	d
_GLIBCXX_HAVE_EIDRM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	779;"	d
_GLIBCXX_HAVE_ENDIAN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	782;"	d
_GLIBCXX_HAVE_ENODATA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	785;"	d
_GLIBCXX_HAVE_ENOLINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	788;"	d
_GLIBCXX_HAVE_ENOSPC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	791;"	d
_GLIBCXX_HAVE_ENOSR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	794;"	d
_GLIBCXX_HAVE_ENOSTR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	797;"	d
_GLIBCXX_HAVE_ENOTRECOVERABLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	800;"	d
_GLIBCXX_HAVE_ENOTSUP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	803;"	d
_GLIBCXX_HAVE_EOVERFLOW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	806;"	d
_GLIBCXX_HAVE_EOWNERDEAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	809;"	d
_GLIBCXX_HAVE_EPERM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	812;"	d
_GLIBCXX_HAVE_EPROTO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	815;"	d
_GLIBCXX_HAVE_ETIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	818;"	d
_GLIBCXX_HAVE_ETIMEDOUT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	821;"	d
_GLIBCXX_HAVE_ETXTBSY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	824;"	d
_GLIBCXX_HAVE_EWOULDBLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	827;"	d
_GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	830;"	d
_GLIBCXX_HAVE_EXECINFO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	833;"	d
_GLIBCXX_HAVE_EXPF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1845;"	d
_GLIBCXX_HAVE_EXPF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	836;"	d
_GLIBCXX_HAVE_EXPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1850;"	d
_GLIBCXX_HAVE_EXPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	839;"	d
_GLIBCXX_HAVE_FABSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1855;"	d
_GLIBCXX_HAVE_FABSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	842;"	d
_GLIBCXX_HAVE_FABSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1860;"	d
_GLIBCXX_HAVE_FABSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	845;"	d
_GLIBCXX_HAVE_FCNTL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	848;"	d
_GLIBCXX_HAVE_FENV_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	851;"	d
_GLIBCXX_HAVE_FINITE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1865;"	d
_GLIBCXX_HAVE_FINITE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	854;"	d
_GLIBCXX_HAVE_FINITEF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1870;"	d
_GLIBCXX_HAVE_FINITEF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	857;"	d
_GLIBCXX_HAVE_FINITEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1875;"	d
_GLIBCXX_HAVE_FINITEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	860;"	d
_GLIBCXX_HAVE_FLOAT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	863;"	d
_GLIBCXX_HAVE_FLOORF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1880;"	d
_GLIBCXX_HAVE_FLOORF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	866;"	d
_GLIBCXX_HAVE_FLOORL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1885;"	d
_GLIBCXX_HAVE_FLOORL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	869;"	d
_GLIBCXX_HAVE_FMODF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1890;"	d
_GLIBCXX_HAVE_FMODF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	872;"	d
_GLIBCXX_HAVE_FMODL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1895;"	d
_GLIBCXX_HAVE_FMODL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	875;"	d
_GLIBCXX_HAVE_FPCLASS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1900;"	d
_GLIBCXX_HAVE_FREXPF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1905;"	d
_GLIBCXX_HAVE_FREXPF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	884;"	d
_GLIBCXX_HAVE_FREXPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1910;"	d
_GLIBCXX_HAVE_FREXPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	887;"	d
_GLIBCXX_HAVE_GETIPINFO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	890;"	d
_GLIBCXX_HAVE_GETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	893;"	d
_GLIBCXX_HAVE_GETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@os_defines.h	45;"	d
_GLIBCXX_HAVE_HYPOT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1915;"	d
_GLIBCXX_HAVE_HYPOT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	896;"	d
_GLIBCXX_HAVE_HYPOTF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1920;"	d
_GLIBCXX_HAVE_HYPOTF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	899;"	d
_GLIBCXX_HAVE_HYPOTL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1925;"	d
_GLIBCXX_HAVE_HYPOTL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	902;"	d
_GLIBCXX_HAVE_ICONV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	905;"	d
_GLIBCXX_HAVE_INT64_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	911;"	d
_GLIBCXX_HAVE_INT64_T_LONG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	914;"	d
_GLIBCXX_HAVE_INTTYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	920;"	d
_GLIBCXX_HAVE_ISINF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1930;"	d
_GLIBCXX_HAVE_ISINFF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1935;"	d
_GLIBCXX_HAVE_ISINFF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	926;"	d
_GLIBCXX_HAVE_ISINFL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1940;"	d
_GLIBCXX_HAVE_ISINFL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	929;"	d
_GLIBCXX_HAVE_ISNAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1945;"	d
_GLIBCXX_HAVE_ISNANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1950;"	d
_GLIBCXX_HAVE_ISNANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	935;"	d
_GLIBCXX_HAVE_ISNANL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1955;"	d
_GLIBCXX_HAVE_ISNANL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	938;"	d
_GLIBCXX_HAVE_ISWBLANK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	941;"	d
_GLIBCXX_HAVE_LC_MESSAGES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	944;"	d
_GLIBCXX_HAVE_LDEXPF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1960;"	d
_GLIBCXX_HAVE_LDEXPF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	947;"	d
_GLIBCXX_HAVE_LDEXPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1965;"	d
_GLIBCXX_HAVE_LDEXPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	950;"	d
_GLIBCXX_HAVE_LIBINTL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	953;"	d
_GLIBCXX_HAVE_LIMIT_AS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	956;"	d
_GLIBCXX_HAVE_LIMIT_DATA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	959;"	d
_GLIBCXX_HAVE_LIMIT_FSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	962;"	d
_GLIBCXX_HAVE_LIMIT_RSS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	965;"	d
_GLIBCXX_HAVE_LIMIT_VMEM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	968;"	d
_GLIBCXX_HAVE_LINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	971;"	d
_GLIBCXX_HAVE_LINUX_FUTEX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	974;"	d
_GLIBCXX_HAVE_LINUX_RANDOM_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	977;"	d
_GLIBCXX_HAVE_LINUX_TYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	980;"	d
_GLIBCXX_HAVE_LOCALE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	983;"	d
_GLIBCXX_HAVE_LOG10F	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1970;"	d
_GLIBCXX_HAVE_LOG10F	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	986;"	d
_GLIBCXX_HAVE_LOG10L	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1975;"	d
_GLIBCXX_HAVE_LOG10L	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	989;"	d
_GLIBCXX_HAVE_LOGF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1980;"	d
_GLIBCXX_HAVE_LOGF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	992;"	d
_GLIBCXX_HAVE_LOGL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1985;"	d
_GLIBCXX_HAVE_LOGL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	995;"	d
_GLIBCXX_HAVE_MBSTATE_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1004;"	d
_GLIBCXX_HAVE_MEMALIGN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1007;"	d
_GLIBCXX_HAVE_MEMORY_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1010;"	d
_GLIBCXX_HAVE_MODF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1013;"	d
_GLIBCXX_HAVE_MODF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1990;"	d
_GLIBCXX_HAVE_MODFF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1016;"	d
_GLIBCXX_HAVE_MODFF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1995;"	d
_GLIBCXX_HAVE_MODFL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1019;"	d
_GLIBCXX_HAVE_MODFL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2000;"	d
_GLIBCXX_HAVE_NETDB_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1025;"	d
_GLIBCXX_HAVE_NETINET_IN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1028;"	d
_GLIBCXX_HAVE_NETINET_TCP_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1031;"	d
_GLIBCXX_HAVE_POLL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1040;"	d
_GLIBCXX_HAVE_POLL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1043;"	d
_GLIBCXX_HAVE_POSIX_MEMALIGN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1046;"	d
_GLIBCXX_HAVE_POWF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1049;"	d
_GLIBCXX_HAVE_POWF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2005;"	d
_GLIBCXX_HAVE_POWL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1052;"	d
_GLIBCXX_HAVE_POWL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2010;"	d
_GLIBCXX_HAVE_QFPCLASS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2015;"	d
_GLIBCXX_HAVE_QUICK_EXIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1058;"	d
_GLIBCXX_HAVE_READLINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1061;"	d
_GLIBCXX_HAVE_SETENV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1064;"	d
_GLIBCXX_HAVE_SINCOS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1067;"	d
_GLIBCXX_HAVE_SINCOS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2020;"	d
_GLIBCXX_HAVE_SINCOSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1070;"	d
_GLIBCXX_HAVE_SINCOSF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2025;"	d
_GLIBCXX_HAVE_SINCOSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1073;"	d
_GLIBCXX_HAVE_SINCOSL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2030;"	d
_GLIBCXX_HAVE_SINF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1076;"	d
_GLIBCXX_HAVE_SINF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2035;"	d
_GLIBCXX_HAVE_SINHF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1079;"	d
_GLIBCXX_HAVE_SINHF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2040;"	d
_GLIBCXX_HAVE_SINHL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1082;"	d
_GLIBCXX_HAVE_SINHL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2045;"	d
_GLIBCXX_HAVE_SINL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1085;"	d
_GLIBCXX_HAVE_SINL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2050;"	d
_GLIBCXX_HAVE_SOCKATMARK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1091;"	d
_GLIBCXX_HAVE_SQRTF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1094;"	d
_GLIBCXX_HAVE_SQRTF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2055;"	d
_GLIBCXX_HAVE_SQRTL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1097;"	d
_GLIBCXX_HAVE_SQRTL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2060;"	d
_GLIBCXX_HAVE_STDALIGN_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1100;"	d
_GLIBCXX_HAVE_STDBOOL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1103;"	d
_GLIBCXX_HAVE_STDINT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1106;"	d
_GLIBCXX_HAVE_STDLIB_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1109;"	d
_GLIBCXX_HAVE_STRERROR_L	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1112;"	d
_GLIBCXX_HAVE_STRERROR_R	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1115;"	d
_GLIBCXX_HAVE_STRINGS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1118;"	d
_GLIBCXX_HAVE_STRING_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1121;"	d
_GLIBCXX_HAVE_STRTOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1124;"	d
_GLIBCXX_HAVE_STRTOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2065;"	d
_GLIBCXX_HAVE_STRTOLD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1127;"	d
_GLIBCXX_HAVE_STRTOLD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2070;"	d
_GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1130;"	d
_GLIBCXX_HAVE_STRXFRM_L	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1133;"	d
_GLIBCXX_HAVE_SYMLINK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1136;"	d
_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1140;"	d
_GLIBCXX_HAVE_SYS_IOCTL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1146;"	d
_GLIBCXX_HAVE_SYS_IPC_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1149;"	d
_GLIBCXX_HAVE_SYS_PARAM_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1158;"	d
_GLIBCXX_HAVE_SYS_RESOURCE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1161;"	d
_GLIBCXX_HAVE_SYS_SDT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1164;"	d
_GLIBCXX_HAVE_SYS_SEM_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1167;"	d
_GLIBCXX_HAVE_SYS_SOCKET_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1170;"	d
_GLIBCXX_HAVE_SYS_STATVFS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1173;"	d
_GLIBCXX_HAVE_SYS_STAT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1176;"	d
_GLIBCXX_HAVE_SYS_SYSINFO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1179;"	d
_GLIBCXX_HAVE_SYS_TIME_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1182;"	d
_GLIBCXX_HAVE_SYS_TYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1185;"	d
_GLIBCXX_HAVE_SYS_UIO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1188;"	d
_GLIBCXX_HAVE_S_ISREG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1194;"	d
_GLIBCXX_HAVE_TANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1197;"	d
_GLIBCXX_HAVE_TANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2075;"	d
_GLIBCXX_HAVE_TANHF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1200;"	d
_GLIBCXX_HAVE_TANHF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2080;"	d
_GLIBCXX_HAVE_TANHL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1203;"	d
_GLIBCXX_HAVE_TANHL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2085;"	d
_GLIBCXX_HAVE_TANL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1206;"	d
_GLIBCXX_HAVE_TANL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2090;"	d
_GLIBCXX_HAVE_TGMATH_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1209;"	d
_GLIBCXX_HAVE_TIMESPEC_GET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1212;"	d
_GLIBCXX_HAVE_TLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1215;"	d
_GLIBCXX_HAVE_TRUNCATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1218;"	d
_GLIBCXX_HAVE_UCHAR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1221;"	d
_GLIBCXX_HAVE_UNISTD_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1224;"	d
_GLIBCXX_HAVE_UTIME_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1230;"	d
_GLIBCXX_HAVE_VFWSCANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1233;"	d
_GLIBCXX_HAVE_VSWSCANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1236;"	d
_GLIBCXX_HAVE_VWSCANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1239;"	d
_GLIBCXX_HAVE_WCHAR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1242;"	d
_GLIBCXX_HAVE_WCSTOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1245;"	d
_GLIBCXX_HAVE_WCTYPE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1248;"	d
_GLIBCXX_HAVE_WRITEV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1254;"	d
_GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1452;"	d
_GLIBCXX_HOSTED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1567;"	d
_GLIBCXX_ICONV_CONST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1455;"	d
_GLIBCXX_INCLUDE_NEXT_C_HEADERS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@std_abs.h	37;"	d
_GLIBCXX_INCLUDE_NEXT_C_HEADERS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@std_abs.h	42;"	d
_GLIBCXX_INLINE_VERSION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	304;"	d
_GLIBCXX_INVOKE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@invoke.h	31;"	d
_GLIBCXX_LONG_DOUBLE_COMPAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	411;"	d
_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	2174;"	d
_GLIBCXX_MAKE_MOVE_ITERATOR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	2173;"	d
_GLIBCXX_MANGLE_SIZE_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1572;"	d
_GLIBCXX_MOVE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@move.h	161;"	d
_GLIBCXX_MOVE3	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_algobase.h	605;"	d
_GLIBCXX_MOVE_BACKWARD3	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_algobase.h	848;"	d
_GLIBCXX_NAMESPACE_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	292;"	d
_GLIBCXX_NAMESPACE_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	419;"	d
_GLIBCXX_NAMESPACE_LDBL_OR_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	428;"	d
_GLIBCXX_NESTED_EXCEPTION_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	31;"	d
_GLIBCXX_NODISCARD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	115;"	d
_GLIBCXX_NODISCARD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	117;"	d
_GLIBCXX_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      void *_M_get() const _GLIBCXX_NOEXCEPT __attribute__ ((__pure__));$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	170;"	d
_GLIBCXX_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	175;"	d
_GLIBCXX_NOEXCEPT_IF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	171;"	d
_GLIBCXX_NOEXCEPT_IF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	176;"	d
_GLIBCXX_NOEXCEPT_PARM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	195;"	d
_GLIBCXX_NOEXCEPT_PARM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	198;"	d
_GLIBCXX_NOEXCEPT_QUAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	196;"	d
_GLIBCXX_NOEXCEPT_QUAL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	199;"	d
_GLIBCXX_NORETURN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	54;"	d
_GLIBCXX_NOTHROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception.h	/^    virtual ~exception() _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;$/;"	m	class:std::exception
_GLIBCXX_NOTHROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception.h	/^    what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;$/;"	m	class:std::exception
_GLIBCXX_NOTHROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	183;"	d
_GLIBCXX_NOTHROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	60;"	d
_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@os_defines.h	50;"	d
_GLIBCXX_NUM_CATEGORIES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++locale.h	45;"	d
_GLIBCXX_NUM_CXX11_FACETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_facets.h	57;"	d
_GLIBCXX_NUM_FACETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_facets.h	56;"	d
_GLIBCXX_NUM_UNICODE_FACETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_facets.h	63;"	d
_GLIBCXX_OS_DEFINES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@os_defines.h	31;"	d
_GLIBCXX_PACKAGE_BUGREPORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1465;"	d
_GLIBCXX_PACKAGE_NAME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1468;"	d
_GLIBCXX_PACKAGE_STRING	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1471;"	d
_GLIBCXX_PACKAGE_TARNAME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1474;"	d
_GLIBCXX_PACKAGE_URL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1477;"	d
_GLIBCXX_PACKAGE__GLIBCXX_VERSION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1480;"	d
_GLIBCXX_POSTYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	36;"	d
_GLIBCXX_PREDEFINED_OPS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	31;"	d
_GLIBCXX_PSEUDO_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	530;"	d
_GLIBCXX_PURE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	46;"	d
_GLIBCXX_RANGE_ACCESS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_access.h	31;"	d
_GLIBCXX_READ_MEM_BARRIER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@atomicity.h	110;"	d
_GLIBCXX_READ_MEM_BARRIER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@atomic_word.h	36;"	d
_GLIBCXX_RELEASE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	34;"	d
_GLIBCXX_RES_LIMITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1581;"	d
_GLIBCXX_SANITIZE_STD_ALLOCATOR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++allocator.h	56;"	d
_GLIBCXX_STDIO_EOF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1587;"	d
_GLIBCXX_STDIO_SEEK_CUR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1590;"	d
_GLIBCXX_STDIO_SEEK_END	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1593;"	d
_GLIBCXX_STD_A	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	399;"	d
_GLIBCXX_STD_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	388;"	d
_GLIBCXX_SYMVER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1596;"	d
_GLIBCXX_SYMVER_GNU	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1602;"	d
_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	504;"	d
_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	501;"	d
_GLIBCXX_THROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	173;"	d
_GLIBCXX_THROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	178;"	d
_GLIBCXX_THROW_OR_ABORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	188;"	d
_GLIBCXX_THROW_OR_ABORT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	190;"	d
_GLIBCXX_TXN_SAFE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	555;"	d
_GLIBCXX_TXN_SAFE_DYN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	556;"	d
_GLIBCXX_USE_ALLOCATOR_NEW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	511;"	d
_GLIBCXX_USE_C11_UCHAR_CXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1612;"	d
_GLIBCXX_USE_C99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1616;"	d
_GLIBCXX_USE_C99_COMPLEX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	597;"	d
_GLIBCXX_USE_C99_COMPLEX_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1621;"	d
_GLIBCXX_USE_C99_CTYPE_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1625;"	d
_GLIBCXX_USE_C99_FENV_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1629;"	d
_GLIBCXX_USE_C99_INTTYPES_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1633;"	d
_GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1637;"	d
_GLIBCXX_USE_C99_MATH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	594;"	d
_GLIBCXX_USE_C99_MATH_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1641;"	d
_GLIBCXX_USE_C99_STDINT_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1645;"	d
_GLIBCXX_USE_C99_STDIO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	600;"	d
_GLIBCXX_USE_C99_STDLIB	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	603;"	d
_GLIBCXX_USE_C99_WCHAR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	606;"	d
_GLIBCXX_USE_CHAR8_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	630;"	d
_GLIBCXX_USE_CLOCK_MONOTONIC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1652;"	d
_GLIBCXX_USE_CLOCK_REALTIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1655;"	d
_GLIBCXX_USE_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	128;"	d
_GLIBCXX_USE_CONSTEXPR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	131;"	d
_GLIBCXX_USE_CXX11_ABI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	276;"	d
_GLIBCXX_USE_CXX11_ABI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	280;"	d
_GLIBCXX_USE_DECIMAL_FLOAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1659;"	d
_GLIBCXX_USE_DEPRECATED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	84;"	d
_GLIBCXX_USE_DEV_RANDOM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1663;"	d
_GLIBCXX_USE_DUAL_ABI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	272;"	d
_GLIBCXX_USE_FCHMOD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1666;"	d
_GLIBCXX_USE_FCHMODAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1669;"	d
_GLIBCXX_USE_FLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	639;"	d
_GLIBCXX_USE_GETTIMEOFDAY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1672;"	d
_GLIBCXX_USE_GET_NPROCS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1675;"	d
_GLIBCXX_USE_INT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1678;"	d
_GLIBCXX_USE_LFS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1681;"	d
_GLIBCXX_USE_LONG_LONG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1684;"	d
_GLIBCXX_USE_LSTAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1687;"	d
_GLIBCXX_USE_NANOSLEEP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1690;"	d
_GLIBCXX_USE_NLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1693;"	d
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^	_GLIBCXX_USE_NOEXCEPT __attribute__ ((__pure__));$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      _GLIBCXX_USE_NOEXCEPT __attribute__ ((__pure__));$/;"	m	namespace:std::__exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      __cxa_exception_type() const _GLIBCXX_USE_NOEXCEPT$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      bool operator!() const _GLIBCXX_USE_NOEXCEPT$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      exception_ptr() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      exception_ptr(__safe_bool) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      exception_ptr(const exception_ptr&) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      explicit exception_ptr(void* __e) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      friend exception_ptr std::current_exception() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      friend exception_ptr std::make_exception_ptr(_Ex) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      operator __safe_bool() const _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      operator=(const exception_ptr&) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      swap(exception_ptr&) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      void _M_addref() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      void _M_release() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      void _M_safe_bool_dummy() _GLIBCXX_USE_NOEXCEPT$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      ~exception_ptr() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^  exception_ptr current_exception() _GLIBCXX_USE_NOEXCEPT;$/;"	m	namespace:std
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^  exception_ptr make_exception_ptr(_Ex) _GLIBCXX_USE_NOEXCEPT;$/;"	m	namespace:std
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	172;"	d
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	177;"	d
_GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1699;"	d
_GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1702;"	d
_GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1706;"	d
_GLIBCXX_USE_PTHREAD_RWLOCK_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1709;"	d
_GLIBCXX_USE_RANDOM_TR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1713;"	d
_GLIBCXX_USE_REALPATH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1716;"	d
_GLIBCXX_USE_SCHED_YIELD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1719;"	d
_GLIBCXX_USE_SC_NPROCESSORS_ONLN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1722;"	d
_GLIBCXX_USE_SENDFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1728;"	d
_GLIBCXX_USE_STD_SPEC_FUNCS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	564;"	d
_GLIBCXX_USE_ST_MTIM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1731;"	d
_GLIBCXX_USE_TBB_PAR_BACKEND	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	680;"	d
_GLIBCXX_USE_TMPNAM	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1737;"	d
_GLIBCXX_USE_UTIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1740;"	d
_GLIBCXX_USE_UTIMENSAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1744;"	d
_GLIBCXX_USE_WCHAR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1747;"	d
_GLIBCXX_USE_WEAK_REF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	545;"	d
_GLIBCXX_VERBOSE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1750;"	d
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@backward@binders.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@alloc_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@basic_ios.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@basic_string.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@char_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@char_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@charconv.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cpp_type_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@functexcept.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@functional_hash.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@invoke.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ios_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@iterator_concepts.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_classes.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_facets.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@localefwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@memoryfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@move.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ostream_insert.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ptr_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_access.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_cmp.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@std_abs.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_algobase.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_bvector.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_construct.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_function.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator_base_funcs.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator_base_types.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_multimap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_pair.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_relops.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_tree.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_uninitialized.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@streambuf_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stringfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@uses_allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@alloc_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@atomicity.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@new_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@string_conversions.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@type_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	70;"	d
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	74;"	d
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++locale.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++locale.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@ctype_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@ctype_inline.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@error_constants.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_WEAK_DEFINITION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	537;"	d
_GLIBCXX_WRITE_MEM_BARRIER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@atomicity.h	113;"	d
_GLIBCXX_WRITE_MEM_BARRIER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@atomic_word.h	38;"	d
_GLIBCXX_X86_RDRAND	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1753;"	d
_GLIBCXX_X86_RDSEED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1756;"	d
_GTHREAD_USE_MUTEX_TIMEDLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1759;"	d
_GTHREAD_USE_MUTEX_TIMEDLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	41;"	d
_GTHREAD_USE_MUTEX_TIMEDLOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	43;"	d
_G_fpos64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos64_t.h	/^typedef struct _G_fpos64_t$/;"	s
_G_fpos_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos_t.h	/^typedef struct _G_fpos_t$/;"	s
_HASH_BYTES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@hash_bytes.h	31;"	d
_INDENT	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_INTPTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	251;"	d
_IOFBF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	93;"	d
_IOLBF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	94;"	d
_IONBF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	95;"	d
_IOS_BASE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ios_base.h	35;"	d
_IO_EOF_SEEN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	111;"	d
_IO_ERR_SEEN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	114;"	d
_IO_FILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^struct _IO_FILE$/;"	s
_IO_FILE_complete	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^struct _IO_FILE_complete$/;"	s
_IO_USER_LOCK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	117;"	d
_IO_backup_base	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_backup_base;  \/* Pointer to first valid character of backup area *\/$/;"	m	struct:_IO_FILE
_IO_buf_base	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_buf_base;	\/* Start of reserve area. *\/$/;"	m	struct:_IO_FILE
_IO_buf_end	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_buf_end;	\/* End of reserve area. *\/$/;"	m	struct:_IO_FILE
_IO_cookie_io_functions_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^typedef struct _IO_cookie_io_functions_t$/;"	s
_IO_lock_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^typedef void _IO_lock_t;$/;"	t
_IO_read_base	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_read_base;	\/* Start of putback+get area. *\/$/;"	m	struct:_IO_FILE
_IO_read_end	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_read_end;	\/* End of get area. *\/$/;"	m	struct:_IO_FILE
_IO_read_ptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_read_ptr;	\/* Current read pointer *\/$/;"	m	struct:_IO_FILE
_IO_save_base	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_save_base; \/* Pointer to start of non-current get area. *\/$/;"	m	struct:_IO_FILE
_IO_save_end	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_save_end; \/* Pointer to end of non-current get area. *\/$/;"	m	struct:_IO_FILE
_IO_write_base	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_write_base;	\/* Start of put area. *\/$/;"	m	struct:_IO_FILE
_IO_write_end	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_write_end;	\/* End of put area. *\/$/;"	m	struct:_IO_FILE
_IO_write_ptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char *_IO_write_ptr;	\/* Current put pointer. *\/$/;"	m	struct:_IO_FILE
_ISOC11_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	198;"	d
_ISOC11_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	199;"	d
_ISOC2X_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	200;"	d
_ISOC2X_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	201;"	d
_ISOC95_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	194;"	d
_ISOC95_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	195;"	d
_ISOC99_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	196;"	d
_ISOC99_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	197;"	d
_ISalnum	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISalnum = _ISbit (11)	\/* Alphanumeric.  *\/$/;"	e	enum:__anon46
_ISalpha	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISalpha = _ISbit (2),	\/* Alphabetic.  *\/$/;"	e	enum:__anon46
_ISbit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	41;"	d
_ISblank	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISblank = _ISbit (8),	\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon46
_IScntrl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _IScntrl = _ISbit (9),	\/* Control character.  *\/$/;"	e	enum:__anon46
_ISdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISdigit = _ISbit (3),	\/* Numeric.  *\/$/;"	e	enum:__anon46
_ISgraph	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISgraph = _ISbit (7),	\/* Graphical.  *\/$/;"	e	enum:__anon46
_ISlower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISlower = _ISbit (1),	\/* lowercase.  *\/$/;"	e	enum:__anon46
_ISprint	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISprint = _ISbit (6),	\/* Printing.  *\/$/;"	e	enum:__anon46
_ISpunct	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISpunct = _ISbit (10),	\/* Punctuation.  *\/$/;"	e	enum:__anon46
_ISspace	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISspace = _ISbit (5),	\/* Whitespace.  *\/$/;"	e	enum:__anon46
_ISupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISupper = _ISbit (0),	\/* UPPERCASE.  *\/$/;"	e	enum:__anon46
_ISwalnum	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwalnum = _ISwbit (__ISwalnum)	\/* Alphanumeric.  *\/$/;"	e	enum:__anon47
_ISwalpha	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwalpha = _ISwbit (__ISwalpha),	\/* Alphabetic.  *\/$/;"	e	enum:__anon47
_ISwbit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	47;"	d
_ISwbit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	49;"	d
_ISwblank	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwblank = _ISwbit (__ISwblank),	\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon47
_ISwcntrl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwcntrl = _ISwbit (__ISwcntrl),	\/* Control character.  *\/$/;"	e	enum:__anon47
_ISwdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwdigit = _ISwbit (__ISwdigit),	\/* Numeric.  *\/$/;"	e	enum:__anon47
_ISwgraph	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwgraph = _ISwbit (__ISwgraph),	\/* Graphical.  *\/$/;"	e	enum:__anon47
_ISwlower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwlower = _ISwbit (__ISwlower),	\/* lowercase.  *\/$/;"	e	enum:__anon47
_ISwprint	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwprint = _ISwbit (__ISwprint),	\/* Printing.  *\/$/;"	e	enum:__anon47
_ISwpunct	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwpunct = _ISwbit (__ISwpunct),	\/* Punctuation.  *\/$/;"	e	enum:__anon47
_ISwspace	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwspace = _ISwbit (__ISwspace),	\/* Whitespace.  *\/$/;"	e	enum:__anon47
_ISwupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwupper = _ISwbit (__ISwupper),	\/* UPPERCASE.  *\/$/;"	e	enum:__anon47
_ISwxdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  _ISwxdigit = _ISwbit (__ISwxdigit),	\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon47
_ISxdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^  _ISxdigit = _ISbit (4),	\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon46
_ITERATOR_CONCEPTS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@iterator_concepts.h	31;"	d
_Iter_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_comp_iter(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_iter
_Iter_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_comp_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_to_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
_Iter_comp_to_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_comp_to_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_to_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_comp_to_val(_Compare __comp, _Value& __value)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_val
_Iter_comp_to_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_comp_to_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_comp_val(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val
_Iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_comp_val(_Iter_comp_iter<_Compare>&& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val
_Iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_comp_val(const _Iter_comp_iter<_Compare>& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val
_Iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_comp_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equal_to_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  struct _Iter_equal_to_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equal_to_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  struct _Iter_equal_to_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equals_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_equals_iter(_Iterator1 __it1)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_iter
_Iter_equals_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_equals_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equals_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_equals_val(_Value& __value)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_val
_Iter_equals_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_equals_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_less_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  struct _Iter_less_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_less_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    _Iter_less_val(_Iter_less_iter) { }$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_val
_Iter_less_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  struct _Iter_less_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_negate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_negate(_Predicate __pred)$/;"	f	struct:__gnu_cxx::__ops::_Iter_negate
_Iter_negate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_negate$/;"	s	namespace:__gnu_cxx::__ops
_Iter_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iter_pred(_Predicate __pred)$/;"	f	struct:__gnu_cxx::__ops::_Iter_pred
_Iter_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Iter_pred$/;"	s	namespace:__gnu_cxx::__ops
_LARGEFILE64_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	210;"	d
_LARGEFILE64_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	211;"	d
_LARGEFILE_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	350;"	d
_LARGEFILE_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	351;"	d
_LOCALE_CLASSES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_classes.h	35;"	d
_LOCALE_FACETS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@locale_facets.h	35;"	d
_LOCALE_FWD_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@localefwd.h	35;"	d
_LOCALE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	23;"	d
_LONG_CASEFOLDINGS	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MEMORYFWD_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@memoryfwd.h	44;"	d
_MOVE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@move.h	31;"	d
_MPBase	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase:$/;"	c
_M_comp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_iter
_M_comp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
_M_comp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_val
_M_comp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_val
_M_comp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Val_comp_iter
_M_exception_object	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      : _M_exception_object(__o._M_exception_object)$/;"	f	class:std::__exception_ptr::exception_ptr
_M_exception_object	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      void* _M_exception_object;$/;"	m	class:std::__exception_ptr::exception_ptr
_M_it1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iterator1 _M_it1;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
_M_it1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Iterator1 _M_it1;$/;"	m	struct:__gnu_cxx::__ops::_Iter_equals_iter
_M_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Predicate _M_pred;$/;"	m	struct:__gnu_cxx::__ops::_Iter_negate
_M_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Predicate _M_pred;$/;"	m	struct:__gnu_cxx::__ops::_Iter_pred
_M_ptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    exception_ptr _M_ptr;$/;"	m	class:std::nested_exception
_M_storage	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	/^      alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];$/;"	m	struct:__gnu_cxx::__aligned_membuf
_M_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	/^      struct _Tp2 { _Tp _M_t; };$/;"	m	struct:__gnu_cxx::__aligned_membuf::_Tp2
_M_value	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Value& _M_value;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_val
_M_value	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Value& _M_value;$/;"	m	struct:__gnu_cxx::__ops::_Iter_equals_val
_MultiLineDefault	autoload/plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_NEW_ALLOCATOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@new_allocator.h	30;"	d
_Nested_exception	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^      explicit _Nested_exception(_Except&& __ex)$/;"	f	struct:std::_Nested_exception
_Nested_exception	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^      explicit _Nested_exception(const _Except& __ex)$/;"	f	struct:std::_Nested_exception
_Nested_exception	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    struct _Nested_exception : public _Except, public nested_exception$/;"	s	namespace:std
_No_Tab_Expand	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_Noreturn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	419;"	d
_Noreturn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	421;"	d
_ONE_CHAR_CASE_SWITCH	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OSTREAM_INSERT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ostream_insert.h	31;"	d
_OS_Base	autoload/plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	204;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	205;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	280;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	281;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	289;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	291;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	293;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	295;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	309;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	310;"	d
_POSIX_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	202;"	d
_POSIX_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	203;"	d
_POSIX_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	278;"	d
_POSIX_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	279;"	d
_POSIX_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	287;"	d
_POSIX_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	308;"	d
_PSTL_ASSERT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	689;"	d
_PSTL_ASSERT_MSG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	690;"	d
_PSTL_PAR_BACKEND_TBB	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	684;"	d
_PTHREAD_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	19;"	d
_PTRDIFF_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	33;"	d
_PTR_TRAITS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ptr_traits.h	31;"	d
_ParseSnippets_MultiWord	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	autoload/plugged/coc-snippets/python/ultisnips.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
_Placeholder	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
_Position	autoload/plugged/coc-snippets/python/ultisnips.py	/^_Position = namedtuple("_Position", ["line", "col"])$/;"	v
_RANGE_CMP_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_cmp.h	31;"	d
_REPLACE_NON_WS	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_RSIZE_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	58;"	d
_RWLOCK_INTERNAL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	21;"	d
_Regex_Self	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SCHED_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	20;"	d
_SIGSET_NWORDS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__sigset_t.h	4;"	d
_SIZE_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	44;"	d
_STDC_PREDEF_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdc-predef.h	19;"	d
_STDINT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	23;"	d
_STDIO_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	24;"	d
_STDLIB_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	35;"	d
_STL_ALGOBASE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_algobase.h	57;"	d
_STL_BVECTOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_bvector.h	57;"	d
_STL_CONSTRUCT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_construct.h	57;"	d
_STL_FUNCTION_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_function.h	57;"	d
_STL_ITERATOR_BASE_FUNCS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator_base_funcs.h	60;"	d
_STL_ITERATOR_BASE_TYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator_base_types.h	60;"	d
_STL_ITERATOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	61;"	d
_STL_MAP_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_map.h	57;"	d
_STL_MULTIMAP_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_multimap.h	57;"	d
_STL_PAIR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_pair.h	57;"	d
_STL_RELOPS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_relops.h	65;"	d
_STL_TREE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_tree.h	59;"	d
_STL_UNINITIALIZED_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_uninitialized.h	57;"	d
_STL_VECTOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_vector.h	57;"	d
_STREAMBUF_ITERATOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@streambuf_iterator.h	31;"	d
_STRINGFWD_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stringfwd.h	35;"	d
_STRING_CONVERSIONS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@string_conversions.h	30;"	d
_STRUCT_TIMESPEC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timespec.h	3;"	d
_SYS_CDEFS_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	19;"	d
_SYS_SELECT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	22;"	d
_SYS_TYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	23;"	d
_SelectModeMappings	autoload/plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	autoload/plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	autoload/plugged/coc-snippets/python/ultisnips.py	/^class _SnippetUtilCursor(object):$/;"	c
_SnippetUtilCursor	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class _SnippetUtilCursor:$/;"	c
_Static_assert	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	447;"	d
_TABS	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_THREAD_MUTEX_INTERNAL_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	20;"	d
_THREAD_SHARED_TYPES_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	20;"	d
_TIME_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	23;"	d
_TOKEN_TO_TEXTOBJECT	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld:$/;"	c
_Tabs	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class _Tabs:$/;"	c
_TextIterator	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class _TextIterator:$/;"	c
_Tp2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	/^      struct _Tp2 { _Tp _M_t; };$/;"	s	struct:__gnu_cxx::__aligned_membuf
_UINTPTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	257;"	d
_UNDEF__STDC_CONSTANT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	53;"	d
_UNDEF__STDC_CONSTANT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	63;"	d
_UNDEF__STDC_LIMIT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	49;"	d
_UNDEF__STDC_LIMIT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	59;"	d
_USES_ALLOCATOR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@uses_allocator.h	26;"	d
_UmlautsBase	autoload/plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VA_LIST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	15;"	d
_VA_LIST_DEFINED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	53;"	d
_Val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Val_comp_iter(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter
_Val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Val_comp_iter(_Iter_comp_iter<_Compare>&& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter
_Val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      _Val_comp_iter(const _Iter_comp_iter<_Compare>& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter
_Val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    struct _Val_comp_iter$/;"	s	namespace:__gnu_cxx::__ops
_Val_less_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    _Val_less_iter(_Iter_less_iter) { }$/;"	f	struct:__gnu_cxx::__ops::_Val_less_iter
_Val_less_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  struct _Val_less_iter$/;"	s	namespace:__gnu_cxx::__ops
_VimCursor	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VisualContent	autoload/plugged/coc-snippets/python/ultisnips.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
_VisualContent	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
_WCHAR_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	24;"	d
_WCHAR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	69;"	d
_WCHAR_T_DEFINED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	71;"	d
_WCTYPE_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wctype.h	24;"	d
_WINT_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@wint_t.h	10;"	d
_WINT_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	114;"	d
_XOPEN_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	206;"	d
_XOPEN_SOURCE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	207;"	d
_XOPEN_SOURCE_EXTENDED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	208;"	d
_XOPEN_SOURCE_EXTENDED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	209;"	d
__ALLOWED_TOKENS	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__ASMNAME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	186;"	d
__ASMNAME2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	187;"	d
__BEGIN_DECLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	114;"	d
__BEGIN_DECLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	117;"	d
__BIG_ENDIAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	31;"	d
__BIT_TYPES_DEFINED__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	171;"	d
__BLKCNT64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	57;"	d
__BLKCNT_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	56;"	d
__BLKSIZE_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	71;"	d
__BYTE_ORDER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endianness.h	9;"	d
__CFLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	76;"	d
__CFLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	78;"	d
__CFLOAT128X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	191;"	d
__CFLOAT16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	141;"	d
__CFLOAT16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	143;"	d
__CFLOAT32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	149;"	d
__CFLOAT32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	151;"	d
__CFLOAT32X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	169;"	d
__CFLOAT32X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	171;"	d
__CFLOAT64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	158;"	d
__CFLOAT64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	160;"	d
__CFLOAT64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	163;"	d
__CFLOAT64X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	178;"	d
__CFLOAT64X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	180;"	d
__CFLOAT64X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	183;"	d
__CLANG_MAX_ALIGN_T_DEFINED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@__stddef_max_align_t.h	11;"	d
__CLANG_STDINT_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	14;"	d
__CLOCKID_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	69;"	d
__CLOCK_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	63;"	d
__COMPAR_FN_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	807;"	d
__CONCAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	105;"	d
__CORRECT_ISO_CPP_WCHAR_H_PROTO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	54;"	d
__CPUELT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	35;"	d
__CPUMASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	36;"	d
__CPU_ALLOC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	112;"	d
__CPU_ALLOC_SIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	110;"	d
__CPU_CLR_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	65;"	d
__CPU_COUNT_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	80;"	d
__CPU_EQUAL_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	84;"	d
__CPU_EQUAL_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	87;"	d
__CPU_FREE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	113;"	d
__CPU_ISSET_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	72;"	d
__CPU_MASK_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	74;"	d
__CPU_OP_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	99;"	d
__CPU_SETSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	28;"	d
__CPU_SET_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	58;"	d
__CPU_ZERO_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	46;"	d
__CPU_ZERO_S	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	49;"	d
__DADDR_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	67;"	d
__DEV_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	38;"	d
__END_DECLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	115;"	d
__END_DECLS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	118;"	d
__ENUM_IDTYPE_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	44;"	d
__EXCEPTION_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception.h	32;"	d
__FDS_BITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	65;"	d
__FD_CLR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	60;"	d
__FD_ELT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	55;"	d
__FD_ISSET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	62;"	d
__FD_MASK	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	56;"	d
__FD_SET	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	58;"	d
__FD_SETSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	97;"	d
__FD_ZERO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	33;"	d
__FD_ZERO	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	48;"	d
__FD_ZERO_STOS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	28;"	d
__FD_ZERO_STOS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@select.h	30;"	d
__FILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__FILE.h	/^typedef struct _IO_FILE __FILE;$/;"	t	typeref:struct:_IO_FILE
__FILE_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@FILE.h	2;"	d
__FLOAT_WORD_ORDER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	40;"	d
__FSBLKCNT64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	59;"	d
__FSBLKCNT_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	58;"	d
__FSFILCNT64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	61;"	d
__FSFILCNT_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	60;"	d
__FSID_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	72;"	d
__FSWORD_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	46;"	d
__FSWORD_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	49;"	d
__GID_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	40;"	d
__GLIBCXX__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	37;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	25;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	26;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	24;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	26;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	31;"	d
__GLIBC_MINOR__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	453;"	d
__GLIBC_PREREQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	455;"	d
__GLIBC_USE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	179;"	d
__GLIBC_USE_DEPRECATED_GETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	144;"	d
__GLIBC_USE_DEPRECATED_GETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	411;"	d
__GLIBC_USE_DEPRECATED_GETS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	413;"	d
__GLIBC_USE_DEPRECATED_SCANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	145;"	d
__GLIBC_USE_DEPRECATED_SCANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	432;"	d
__GLIBC_USE_DEPRECATED_SCANF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	434;"	d
__GLIBC_USE_IEC_60559_BFP_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	49;"	d
__GLIBC_USE_IEC_60559_BFP_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	51;"	d
__GLIBC_USE_IEC_60559_BFP_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	53;"	d
__GLIBC_USE_IEC_60559_BFP_EXT_C2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	55;"	d
__GLIBC_USE_IEC_60559_BFP_EXT_C2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	57;"	d
__GLIBC_USE_IEC_60559_BFP_EXT_C2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	59;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	66;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	68;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	70;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	72;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	74;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	76;"	d
__GLIBC_USE_IEC_60559_TYPES_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	81;"	d
__GLIBC_USE_IEC_60559_TYPES_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	83;"	d
__GLIBC_USE_IEC_60559_TYPES_EXT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	85;"	d
__GLIBC_USE_ISOC2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	143;"	d
__GLIBC_USE_ISOC2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	233;"	d
__GLIBC_USE_ISOC2X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	235;"	d
__GLIBC_USE_LIB_EXT2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	37;"	d
__GLIBC_USE_LIB_EXT2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	40;"	d
__GLIBC_USE_LIB_EXT2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@libc-header-start.h	42;"	d
__GLIBC__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	452;"	d
__GNUC_PREREQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	161;"	d
__GNUC_PREREQ	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	164;"	d
__GNUC_VA_LIST	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	31;"	d
__GNU_LIBRARY__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	447;"	d
__GNU_LIBRARY__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	448;"	d
__GTHREADS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	32;"	d
__GTHREADS_CXX0X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	33;"	d
__GTHREAD_COND_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	69;"	d
__GTHREAD_COND_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	81;"	d
__GTHREAD_COND_INIT_FUNCTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	82;"	d
__GTHREAD_HAS_COND	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	57;"	d
__GTHREAD_MUTEX_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	59;"	d
__GTHREAD_MUTEX_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	73;"	d
__GTHREAD_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	60;"	d
__GTHREAD_ONCE_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	61;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	63;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	65;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	76;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	67;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	77;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	78;"	d
__GTHREAD_TIME_INIT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	70;"	d
__HAVE_DISTINCT_FLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	41;"	d
__HAVE_DISTINCT_FLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	43;"	d
__HAVE_DISTINCT_FLOAT128X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	57;"	d
__HAVE_DISTINCT_FLOAT16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	52;"	d
__HAVE_DISTINCT_FLOAT32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	53;"	d
__HAVE_DISTINCT_FLOAT32X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	55;"	d
__HAVE_DISTINCT_FLOAT64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	54;"	d
__HAVE_DISTINCT_FLOAT64X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	56;"	d
__HAVE_FLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	33;"	d
__HAVE_FLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	35;"	d
__HAVE_FLOAT128X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	38;"	d
__HAVE_FLOAT128_UNLIKE_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	63;"	d
__HAVE_FLOAT16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	34;"	d
__HAVE_FLOAT32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	35;"	d
__HAVE_FLOAT32X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	37;"	d
__HAVE_FLOAT64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	36;"	d
__HAVE_FLOAT64X	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	49;"	d
__HAVE_FLOAT64X_LONG_DOUBLE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	55;"	d
__HAVE_FLOATN_NOT_TYPEDEF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	70;"	d
__HAVE_FLOATN_NOT_TYPEDEF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	72;"	d
__HAVE_GENERIC_SELECTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	512;"	d
__HAVE_GENERIC_SELECTION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	514;"	d
__ID_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	62;"	d
__INO64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	42;"	d
__INO_T_MATCHES_INO64_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	83;"	d
__INO_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	41;"	d
__INT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	106;"	d
__INT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	109;"	d
__INTN_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	642;"	d
__INTN_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	640;"	d
__INTN_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	639;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	471;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	502;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	524;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	546;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	562;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	590;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	603;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	470;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	501;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	523;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	545;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	561;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	589;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	602;"	d
__INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	468;"	d
__INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	499;"	d
__INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	521;"	d
__INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	543;"	d
__INT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	559;"	d
__INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	467;"	d
__INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	498;"	d
__INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	520;"	d
__INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	542;"	d
__INT_LEAST32_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	558;"	d
__INT_LEAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	465;"	d
__INT_LEAST64_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	464;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	474;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	505;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	527;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	549;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	565;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	593;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	606;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	625;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	473;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	504;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	526;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	548;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	564;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	592;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	605;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	624;"	d
__INT_N	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cpp_type_traits.h	255;"	d
__INT_N	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cpp_type_traits.h	282;"	d
__ISwalnum	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwalnum = 11,			\/* Alphanumeric.  *\/$/;"	e	enum:__anon47
__ISwalpha	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwalpha = 2,			\/* Alphabetic.  *\/$/;"	e	enum:__anon47
__ISwblank	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwblank = 8,			\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon47
__ISwcntrl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwcntrl = 9,			\/* Control character.  *\/$/;"	e	enum:__anon47
__ISwdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwdigit = 3,			\/* Numeric.  *\/$/;"	e	enum:__anon47
__ISwgraph	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwgraph = 7,			\/* Graphical.  *\/$/;"	e	enum:__anon47
__ISwlower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwlower = 1,			\/* lowercase.  *\/$/;"	e	enum:__anon47
__ISwprint	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwprint = 6,			\/* Printing.  *\/$/;"	e	enum:__anon47
__ISwpunct	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwpunct = 10,			\/* Punctuation.  *\/$/;"	e	enum:__anon47
__ISwspace	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwspace = 5,			\/* Whitespace.  *\/$/;"	e	enum:__anon47
__ISwupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwupper = 0,			\/* UPPERCASE.  *\/$/;"	e	enum:__anon47
__ISwxdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^  __ISwxdigit = 4,			\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon47
__KERNEL_STRICT_NAMES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	142;"	d
__KERNEL_STRICT_NAMES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	150;"	d
__KEY_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	68;"	d
__LC_ADDRESS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	35;"	d
__LC_ALL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	32;"	d
__LC_COLLATE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	29;"	d
__LC_CTYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	26;"	d
__LC_IDENTIFICATION	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	38;"	d
__LC_MEASUREMENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	37;"	d
__LC_MESSAGES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	31;"	d
__LC_MONETARY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	30;"	d
__LC_NAME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	34;"	d
__LC_NUMERIC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	27;"	d
__LC_PAPER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	33;"	d
__LC_TELEPHONE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	36;"	d
__LC_TIME	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@locale.h	28;"	d
__LDBL_COMPAT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	456;"	d
__LDBL_REDIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	459;"	d
__LDBL_REDIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	476;"	d
__LDBL_REDIR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	458;"	d
__LDBL_REDIR1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	475;"	d
__LDBL_REDIR1_DECL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	464;"	d
__LDBL_REDIR1_NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	461;"	d
__LDBL_REDIR1_NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	477;"	d
__LDBL_REDIR_DECL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	466;"	d
__LDBL_REDIR_DECL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	479;"	d
__LDBL_REDIR_NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	462;"	d
__LDBL_REDIR_NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	478;"	d
__LEAF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	42;"	d
__LEAF	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	45;"	d
__LEAF_ATTR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	43;"	d
__LEAF_ATTR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	46;"	d
__LITTLE_ENDIAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	30;"	d
__LOCK_ALIGNMENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	47;"	d
__LOCK_ALIGNMENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  unsigned int __g_refs[2] __LOCK_ALIGNMENT;$/;"	m	struct:__pthread_cond_s
__LONG_DOUBLE_USES_FLOAT128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@long-double.h	21;"	d
__LONG_LONG_PAIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	44;"	d
__LONG_LONG_PAIR	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	46;"	d
__MODE_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	43;"	d
__N	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	584;"	d
__NCPUBITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	29;"	d
__NFDBITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	52;"	d
__NFDBITS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	54;"	d
__NLINK_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	45;"	d
__NLINK_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	48;"	d
__NO_CTYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@os_defines.h	37;"	d
__NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	57;"	d
__NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	63;"	d
__NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	68;"	d
__NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	84;"	d
__NTHNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	58;"	d
__NTHNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	64;"	d
__NTHNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	69;"	d
__OFF64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	52;"	d
__OFF_T_MATCHES_OFF64_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	80;"	d
__OFF_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	51;"	d
__ONCE_ALIGNMENT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	48;"	d
__P	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	34;"	d
__P	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	99;"	d
__PDP_ENDIAN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@endian.h	32;"	d
__PID_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	53;"	d
__PMT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	100;"	d
__PMT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	35;"	d
__PTHREAD_MUTEX_HAVE_PREV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	37;"	d
__PTHREAD_MUTEX_HAVE_PREV	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	51;"	d
__PTHREAD_MUTEX_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	56;"	d
__PTHREAD_MUTEX_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	59;"	d
__PTHREAD_RWLOCK_ELISION_EXTRA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	37;"	d
__PTHREAD_RWLOCK_ELISION_EXTRA	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	40;"	d
__PTHREAD_RWLOCK_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	58;"	d
__PTHREAD_RWLOCK_INITIALIZER	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	61;"	d
__REDIRECT	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	174;"	d
__REDIRECT_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	468;"	d
__REDIRECT_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	481;"	d
__REDIRECT_NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	176;"	d
__REDIRECT_NTH	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	181;"	d
__REDIRECT_NTHNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	178;"	d
__REDIRECT_NTHNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	183;"	d
__REDIRECT_NTH_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	470;"	d
__REDIRECT_NTH_LDBL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	482;"	d
__RLIM64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	55;"	d
__RLIM_T_MATCHES_RLIM64_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	86;"	d
__RLIM_T_MATCHES_RLIM64_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	91;"	d
__RLIM_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	54;"	d
__S16_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	109;"	d
__S32_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	111;"	d
__S64_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	122;"	d
__S64_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	134;"	d
__SIZEOF_PTHREAD_ATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	26;"	d
__SIZEOF_PTHREAD_ATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	31;"	d
__SIZEOF_PTHREAD_ATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	37;"	d
__SIZEOF_PTHREAD_BARRIERATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	45;"	d
__SIZEOF_PTHREAD_BARRIER_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	28;"	d
__SIZEOF_PTHREAD_BARRIER_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	33;"	d
__SIZEOF_PTHREAD_BARRIER_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	39;"	d
__SIZEOF_PTHREAD_CONDATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	43;"	d
__SIZEOF_PTHREAD_COND_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	42;"	d
__SIZEOF_PTHREAD_MUTEXATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	41;"	d
__SIZEOF_PTHREAD_MUTEX_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	25;"	d
__SIZEOF_PTHREAD_MUTEX_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	30;"	d
__SIZEOF_PTHREAD_MUTEX_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	36;"	d
__SIZEOF_PTHREAD_RWLOCKATTR_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	44;"	d
__SIZEOF_PTHREAD_RWLOCK_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	27;"	d
__SIZEOF_PTHREAD_RWLOCK_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	32;"	d
__SIZEOF_PTHREAD_RWLOCK_T	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	38;"	d
__SLONG32_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	120;"	d
__SLONG32_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	132;"	d
__SLONGWORD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	113;"	d
__SQUAD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	116;"	d
__SQUAD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	128;"	d
__SSIZE_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	73;"	d
__STATFS_MATCHES_STATFS64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	89;"	d
__STATFS_MATCHES_STATFS64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	93;"	d
__STDARG_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	11;"	d
__STDC_CONSTANT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	54;"	d
__STDC_CONSTANT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	62;"	d
__STDC_CONSTANT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	47;"	d
__STDC_CONSTANT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	59;"	d
__STDC_CONSTANT_MACROS_DEFINED_BY_CLANG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	48;"	d
__STDC_CONSTANT_MACROS_DEFINED_BY_CLANG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	60;"	d
__STDC_IEC_559_COMPLEX__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdc-predef.h	46;"	d
__STDC_IEC_559_COMPLEX__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdc-predef.h	49;"	d
__STDC_IEC_559__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdc-predef.h	38;"	d
__STDC_IEC_559__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdc-predef.h	41;"	d
__STDC_ISO_10646__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdc-predef.h	58;"	d
__STDC_LIMIT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	50;"	d
__STDC_LIMIT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@postypes.h	58;"	d
__STDC_LIMIT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	43;"	d
__STDC_LIMIT_MACROS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	55;"	d
__STDC_LIMIT_MACROS_DEFINED_BY_CLANG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	44;"	d
__STDC_LIMIT_MACROS_DEFINED_BY_CLANG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	56;"	d
__STDDEF_H	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	19;"	d
__STD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	126;"	d
__STD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	137;"	d
__STD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	225;"	d
__STRING	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	106;"	d
__SUSECONDS_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	66;"	d
__SWORD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	118;"	d
__SWORD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	130;"	d
__SYSCALL_SLONG_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	31;"	d
__SYSCALL_SLONG_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	34;"	d
__SYSCALL_ULONG_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	32;"	d
__SYSCALL_ULONG_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	35;"	d
__SYSCALL_WORDSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	14;"	d
__THROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	55;"	d
__THROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	61;"	d
__THROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	66;"	d
__THROW	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	82;"	d
__THROWNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	56;"	d
__THROWNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	62;"	d
__THROWNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	67;"	d
__THROWNL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	83;"	d
__TIME64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time64.h	30;"	d
__TIME64_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@time64.h	33;"	d
__TIMER_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	70;"	d
__TIMESIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timesize.h	21;"	d
__TIMESIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timesize.h	24;"	d
__TIME_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	64;"	d
__U16_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	110;"	d
__U32_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	112;"	d
__U64_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	123;"	d
__U64_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	135;"	d
__UID_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	39;"	d
__UINT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	107;"	d
__UINT64_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	110;"	d
__UINTN_C	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	643;"	d
__UINTN_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	641;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	472;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	503;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	525;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	547;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	563;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	591;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	604;"	d
__UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	469;"	d
__UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	500;"	d
__UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	522;"	d
__UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	544;"	d
__UINT_LEAST32_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	560;"	d
__UINT_LEAST64_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	466;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	475;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	506;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	528;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	550;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	566;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	594;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	607;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	626;"	d
__ULONG32_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	121;"	d
__ULONG32_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	133;"	d
__ULONGWORD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	114;"	d
__UQUAD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	117;"	d
__UQUAD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	129;"	d
__USECONDS_T_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@typesizes.h	65;"	d
__USE_ATFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	139;"	d
__USE_ATFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	388;"	d
__USE_EXTERN_INLINES	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	477;"	d
__USE_FILE_OFFSET64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	137;"	d
__USE_FILE_OFFSET64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	380;"	d
__USE_FORTIFY_LEVEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	141;"	d
__USE_FORTIFY_LEVEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	398;"	d
__USE_FORTIFY_LEVEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	400;"	d
__USE_FORTIFY_LEVEL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	403;"	d
__USE_GNU	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	140;"	d
__USE_GNU	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	392;"	d
__USE_ISOC11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	120;"	d
__USE_ISOC11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	241;"	d
__USE_ISOC11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	261;"	d
__USE_ISOC95	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	122;"	d
__USE_ISOC95	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	255;"	d
__USE_ISOC95	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	333;"	d
__USE_ISOC95	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	334;"	d
__USE_ISOC95	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	359;"	d
__USE_ISOC95	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	360;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	121;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	248;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	267;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	335;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	336;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	361;"	d
__USE_ISOC99	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	362;"	d
__USE_ISOCXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	123;"	d
__USE_ISOCXX11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	266;"	d
__USE_LARGEFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	135;"	d
__USE_LARGEFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	372;"	d
__USE_LARGEFILE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	467;"	d
__USE_LARGEFILE64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	136;"	d
__USE_LARGEFILE64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	376;"	d
__USE_LARGEFILE64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	468;"	d
__USE_MISC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	138;"	d
__USE_MISC	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	384;"	d
__USE_POSIX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	124;"	d
__USE_POSIX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	316;"	d
__USE_POSIX199309	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	126;"	d
__USE_POSIX199309	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	324;"	d
__USE_POSIX199506	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	127;"	d
__USE_POSIX199506	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	328;"	d
__USE_POSIX2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	125;"	d
__USE_POSIX2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	320;"	d
__USE_POSIX_IMPLICITLY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	276;"	d
__USE_POSIX_IMPLICITLY	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	297;"	d
__USE_UNIX98	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	130;"	d
__USE_UNIX98	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	349;"	d
__USE_XOPEN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	128;"	d
__USE_XOPEN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	346;"	d
__USE_XOPEN2K	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	131;"	d
__USE_XOPEN2K	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	332;"	d
__USE_XOPEN2K	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	357;"	d
__USE_XOPEN2K8	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	133;"	d
__USE_XOPEN2K8	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	340;"	d
__USE_XOPEN2K8	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	354;"	d
__USE_XOPEN2K8XSI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	134;"	d
__USE_XOPEN2K8XSI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	355;"	d
__USE_XOPEN2KXSI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	132;"	d
__USE_XOPEN2KXSI	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	358;"	d
__USE_XOPEN_EXTENDED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	129;"	d
__USE_XOPEN_EXTENDED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	348;"	d
__USE_XOPEN_EXTENDED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	366;"	d
__UWORD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	119;"	d
__UWORD_TYPE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	131;"	d
__WALL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	38;"	d
__WCHAR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	34;"	d
__WCHAR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	36;"	d
__WCHAR_MAX	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	38;"	d
__WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	42;"	d
__WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	44;"	d
__WCHAR_MIN	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wchar.h	46;"	d
__WCLONE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	39;"	d
__WCOREDUMP	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	53;"	d
__WCOREFLAG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	59;"	d
__WEXITSTATUS	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	28;"	d
__WHITESPACE_SPLIT	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__WIFCONTINUED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	49;"	d
__WIFEXITED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	37;"	d
__WIFSIGNALED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	40;"	d
__WIFSTOPPED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	44;"	d
__WINT_TYPE__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	9;"	d
__WINT_TYPE__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@wint_t.h	17;"	d
__WNOTHREAD	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	36;"	d
__WORDSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	4;"	d
__WORDSIZE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	6;"	d
__WORDSIZE32_PTRDIFF_LONG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	8;"	d
__WORDSIZE32_SIZE_ULONG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	7;"	d
__WORDSIZE_TIME64_COMPAT32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	12;"	d
__WORDSIZE_TIME64_COMPAT32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wordsize.h	16;"	d
__WSTOPSIG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	34;"	d
__WTERMSIG	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	31;"	d
__W_CONTINUED	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	58;"	d
__W_EXITCODE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	56;"	d
__W_STOPCODE	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitstatus.h	57;"	d
____FILE_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__FILE.h	2;"	d
_____fpos64_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos64_t.h	2;"	d
_____fpos_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos_t.h	2;"	d
____mbstate_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	2;"	d
____sigset_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__sigset_t.h	2;"	d
__a	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    __extension__ unsigned long long int __a;	\/* Factor in congruential$/;"	m	struct:drand48_data
__add__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__add__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position	file:
__add__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  __extension__ long long int __align;$/;"	m	union:__anon18
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  int __align;$/;"	m	union:__anon15
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  int __align;$/;"	m	union:__anon16
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  int __align;$/;"	m	union:__anon22
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anon17
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anon19
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anon20
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anon21
__align	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:pthread_attr_t
__aligned_membuf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	/^      __aligned_membuf(std::nullptr_t) { }$/;"	f	struct:__gnu_cxx::__aligned_membuf
__aligned_membuf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	/^    struct __aligned_membuf$/;"	s	namespace:__gnu_cxx
__allocator_base	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@allocator.h	254;"	d
__always_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	318;"	d
__always_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	319;"	d
__always_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	321;"	d
__always_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	322;"	d
__arg	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void *__arg;                            \/* Its argument.  *\/$/;"	m	struct:_pthread_cleanup_buffer
__attribute__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	201;"	d
__attribute_alloc_size__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	216;"	d
__attribute_alloc_size__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	219;"	d
__attribute_artificial__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	328;"	d
__attribute_artificial__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	330;"	d
__attribute_const__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@errno.h	/^extern int *__errno_location (void) __THROW __attribute_const__;$/;"	v
__attribute_const__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	233;"	d
__attribute_const__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	235;"	d
__attribute_copy__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	435;"	d
__attribute_copy__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	439;"	d
__attribute_copy__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	441;"	d
__attribute_deprecated__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern char *gets (char *__s) __wur __attribute_deprecated__;$/;"	v
__attribute_deprecated__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	251;"	d
__attribute_deprecated__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	253;"	d
__attribute_deprecated_msg__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	261;"	d
__attribute_deprecated_msg__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	264;"	d
__attribute_format_arg__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	274;"	d
__attribute_format_arg__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	276;"	d
__attribute_format_strfmon__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	284;"	d
__attribute_format_strfmon__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	287;"	d
__attribute_malloc__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^extern wchar_t *wcsdup (const wchar_t *__s) __THROW __attribute_malloc__;$/;"	v
__attribute_malloc__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	208;"	d
__attribute_malloc__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	210;"	d
__attribute_noinline__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	243;"	d
__attribute_noinline__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	246;"	d
__attribute_nonstring__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	429;"	d
__attribute_nonstring__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	431;"	d
__attribute_pure__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^     __THROW __attribute_pure__;$/;"	v
__attribute_pure__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^extern int mbsinit (const mbstate_t *__ps) __THROW __attribute_pure__;$/;"	v
__attribute_pure__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^extern size_t wcslen (const wchar_t *__s) __THROW __attribute_pure__;$/;"	v
__attribute_pure__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	226;"	d
__attribute_pure__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	228;"	d
__attribute_used__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	242;"	d
__attribute_used__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	245;"	d
__attribute_warn_unused_result__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	301;"	d
__attribute_warn_unused_result__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	307;"	d
__bits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	/^  __cpu_mask __bits[__CPU_SETSIZE \/ __NCPUBITS];$/;"	m	struct:__anon14
__blkcnt64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __BLKCNT64_T_TYPE __blkcnt64_t;$/;"	v
__blkcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __BLKCNT_T_TYPE __blkcnt_t;$/;"	v
__blkcnt_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	193;"	d
__blkcnt_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	206;"	d
__blksize_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __BLKSIZE_T_TYPE __blksize_t;$/;"	v
__blksize_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	186;"	d
__bos	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	123;"	d
__bos0	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	124;"	d
__bswap_16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	/^__bswap_16 (__uint16_t __bsx)$/;"	f
__bswap_32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	/^__bswap_32 (__uint32_t __bsx)$/;"	f
__bswap_64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	/^__bswap_64 (__uint64_t __bsx)$/;"	f
__bswap_constant_16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	30;"	d
__bswap_constant_32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	44;"	d
__bswap_constant_64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@byteswap.h	59;"	d
__builtin_copysignf128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	101;"	d
__builtin_fabsf128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	102;"	d
__builtin_huge_valf128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	92;"	d
__builtin_huge_valf128x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	319;"	d
__builtin_huge_valf16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	203;"	d
__builtin_huge_valf32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	218;"	d
__builtin_huge_valf32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	272;"	d
__builtin_huge_valf64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	242;"	d
__builtin_huge_valf64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	255;"	d
__builtin_huge_valf64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	289;"	d
__builtin_huge_valf64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	302;"	d
__builtin_inff128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	103;"	d
__builtin_inff128x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	320;"	d
__builtin_inff16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	204;"	d
__builtin_inff32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	219;"	d
__builtin_inff32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	273;"	d
__builtin_inff64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	243;"	d
__builtin_inff64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	256;"	d
__builtin_inff64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	290;"	d
__builtin_inff64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	303;"	d
__builtin_nanf128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	104;"	d
__builtin_nanf128x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	321;"	d
__builtin_nanf16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	205;"	d
__builtin_nanf32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	220;"	d
__builtin_nanf32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	274;"	d
__builtin_nanf64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	244;"	d
__builtin_nanf64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	257;"	d
__builtin_nanf64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	291;"	d
__builtin_nanf64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	304;"	d
__builtin_nansf128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	105;"	d
__builtin_nansf128x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	322;"	d
__builtin_nansf16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	206;"	d
__builtin_nansf32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	221;"	d
__builtin_nansf32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	275;"	d
__builtin_nansf64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	245;"	d
__builtin_nansf64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	258;"	d
__builtin_nansf64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	292;"	d
__builtin_nansf64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	305;"	d
__builtin_signbitf128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	113;"	d
__c	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    unsigned short int __c;	\/* Additive const. in congruential formula.  *\/$/;"	m	struct:drand48_data
__caddr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef char *__caddr_t;$/;"	t
__cancel_arg	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void *__cancel_arg;$/;"	m	class:__pthread_cleanup_class
__cancel_arg	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void *__cancel_arg;$/;"	m	struct:__pthread_cleanup_frame
__cancel_jmp_buf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^    __jmp_buf __cancel_jmp_buf;$/;"	m	struct:__anon40::__anon41
__cancel_jmp_buf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  } __cancel_jmp_buf[1];$/;"	m	struct:__anon40	typeref:struct:__anon40::__anon41
__cancel_routine	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	class:__pthread_cleanup_class
__cancel_routine	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	struct:__pthread_cleanup_frame
__cancel_type	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  int __cancel_type;$/;"	m	class:__pthread_cleanup_class
__cancel_type	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  int __cancel_type;$/;"	m	struct:__pthread_cleanup_frame
__canceltype	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  int __canceltype;                       \/* Saved cancellation type. *\/$/;"	m	struct:_pthread_cleanup_buffer
__catch	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	36;"	d
__catch	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	41;"	d
__cfloat128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	/^typedef _Complex float __cfloat128 __attribute__ ((__mode__ (__TC__)));$/;"	t
__cfloat16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	/^typedef _Complex float __cfloat16 __attribute__ ((__mode__ (__HC__)));$/;"	t
__clang_max_align_nonce1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@__stddef_max_align_t.h	/^  long long __clang_max_align_nonce1$/;"	m	struct:__anon23
__clang_max_align_nonce2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@__stddef_max_align_t.h	/^  long double __clang_max_align_nonce2$/;"	m	struct:__anon23
__cleanup_fct_attribute	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	511;"	d
__cleanup_fct_attribute	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes-arch.h	52;"	d
__clock_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __CLOCK_T_TYPE __clock_t;	\/* Type of CPU usage counts.  *\/$/;"	v
__clock_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@clock_t.h	2;"	d
__clockid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __CLOCKID_T_TYPE __clockid_t;$/;"	v
__clockid_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@clockid_t.h	2;"	d
__compar_d_fn_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^typedef int (*__compar_d_fn_t) (const void *, const void *, void *);$/;"	t
__compar_fn_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^typedef int (*__compar_fn_t) (const void *, const void *);$/;"	t
__contains__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __contains__ (self, x):$/;"	m	class:OBJECT	file:
__cookie_io_functions_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	19;"	d
__count	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  unsigned int __count;$/;"	m	struct:__pthread_mutex_s
__count	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	/^  int __count;$/;"	m	struct:__anon28
__cpp_lib_addressof_constexpr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@move.h	129;"	d
__cpp_lib_allocator_traits_is_always_equal	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@alloc_traits.h	46;"	d
__cpp_lib_array_constexpr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	73;"	d
__cpp_lib_array_constexpr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	76;"	d
__cpp_lib_char8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	634;"	d
__cpp_lib_constexpr_char_traits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@char_traits.h	239;"	d
__cpp_lib_constexpr_dynamic_alloc	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@alloc_traits.h	402;"	d
__cpp_lib_constexpr_iterator	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	74;"	d
__cpp_lib_constexpr_memory	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ptr_traits.h	38;"	d
__cpp_lib_constexpr_utility	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_pair.h	66;"	d
__cpp_lib_erase_if	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@erase_if.h	42;"	d
__cpp_lib_generic_associative_lookup	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_tree.h	80;"	d
__cpp_lib_incomplete_container_elements	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@allocator.h	52;"	d
__cpp_lib_make_reverse_iterator	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_iterator.h	520;"	d
__cpp_lib_map_try_emplace	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_map.h	668;"	d
__cpp_lib_nonmember_container_access	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_access.h	237;"	d
__cpp_lib_ranges	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_cmp.h	59;"	d
__cpp_lib_raw_memory_algorithms	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_uninitialized.h	873;"	d
__cpp_lib_robust_nonmodifying_seq_ops	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_algobase.h	1507;"	d
__cpp_lib_ssize	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@range_access.h	325;"	d
__cpp_lib_string_udls	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@basic_string.h	6877;"	d
__cpp_lib_transparent_operators	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@stl_function.h	227;"	d
__cpu_mask	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	/^typedef __CPU_MASK_TYPE __cpu_mask;$/;"	t
__ctype_b	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^  const unsigned short int *__ctype_b;$/;"	m	struct:__locale_struct
__ctype_tolower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^  const int *__ctype_tolower;$/;"	m	struct:__locale_struct
__ctype_toupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^  const int *__ctype_toupper;$/;"	m	struct:__locale_struct
__cur_writer	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  int __cur_writer;$/;"	m	struct:__pthread_rwlock_arch_t
__cxx11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }$/;"	n	namespace:__gnu_cxx
__cxx11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }$/;"	n	namespace:std
__cxx11	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }$/;"	n	namespace:std::__cxx1998
__cxx1998	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  namespace __cxx1998$/;"	n	namespace:std
__cxxabiv1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_forced.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_init_exception.h	/^namespace __cxxabiv1$/;"	n
__daddr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __DADDR_T_TYPE __daddr_t;	\/* The type of a disk address.  *\/$/;"	v
__daddr_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	116;"	d
__data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  struct __pthread_cond_s __data;$/;"	m	union:__anon18	typeref:struct:__anon18::__pthread_cond_s
__data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  struct __pthread_mutex_s __data;$/;"	m	union:__anon17	typeref:struct:__anon17::__pthread_mutex_s
__data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  struct __pthread_rwlock_arch_t __data;$/;"	m	union:__anon19	typeref:struct:__anon19::__pthread_rwlock_arch_t
__debug	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	/^  namespace __debug { } $/;"	n	namespace:std
__debug	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace __debug { }$/;"	n	namespace:std
__defer	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void __defer () { pthread_setcanceltype (PTHREAD_CANCEL_DEFERRED,$/;"	f	class:__pthread_cleanup_class
__delitem__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __delitem__ (self, x):$/;"	m	class:OBJECT	file:
__delitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__dest_thunk	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      __dest_thunk(void* __x)$/;"	f	namespace:std::__exception_ptr
__detail	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@erase_if.h	/^  namespace __detail$/;"	n	namespace:std
__dev_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __DEV_T_TYPE __dev_t;	\/* Type of device numbers.  *\/$/;"	v
__dev_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	60;"	d
__do_it	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  int __do_it;$/;"	m	class:__pthread_cleanup_class
__do_it	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  int __do_it;$/;"	m	struct:__pthread_cleanup_frame
__eelision	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^      short __eelision;$/;"	m	struct:__pthread_mutex_s::__anon12::__anon13
__elision	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  short __elision;$/;"	m	struct:__pthread_mutex_s
__elision	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	47;"	d
__elision_data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^    } __elision_data;$/;"	m	union:__pthread_mutex_s::__anon12	typeref:struct:__pthread_mutex_s::__anon12::__anon13
__eq__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__erase_nodes_if	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@erase_if.h	/^      __erase_nodes_if(_Container& __cont, _Predicate __pred)$/;"	f	namespace:std::__detail
__error_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@error_t.h	20;"	d
__errordecl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	130;"	d
__errordecl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	135;"	d
__espins	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^      short __espins;$/;"	m	struct:__pthread_mutex_s::__anon12::__anon13
__exception_ptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^  namespace __exception_ptr$/;"	n	namespace:std
__exctype	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	102;"	d
__exctype_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	244;"	d
__extension__	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	371;"	d
__extern_always_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	347;"	d
__extern_always_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	351;"	d
__extern_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	346;"	d
__extern_inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	350;"	d
__f128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	64;"	d
__f128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn.h	66;"	d
__f128x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	133;"	d
__f16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	83;"	d
__f16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	85;"	d
__f32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	91;"	d
__f32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	93;"	d
__f32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	111;"	d
__f32x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	113;"	d
__f64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	100;"	d
__f64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	102;"	d
__f64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	105;"	d
__f64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	120;"	d
__f64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	122;"	d
__f64x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@floatn-common.h	125;"	d
__fd_mask	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	/^typedef long int __fd_mask;$/;"	t
__feof_unlocked_body	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	112;"	d
__ferror_unlocked_body	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	115;"	d
__flags	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned char __flags;$/;"	m	struct:__pthread_rwlock_arch_t
__flags	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __flags;$/;"	m	struct:__pthread_rwlock_arch_t
__flexarr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	143;"	d
__flexarr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	148;"	d
__flexarr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	153;"	d
__flexarr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	157;"	d
__forced_unwind	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_forced.h	/^  class __forced_unwind$/;"	c	namespace:__cxxabiv1
__fortify_function	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	356;"	d
__fpos64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos64_t.h	/^} __fpos64_t;$/;"	t	typeref:struct:_G_fpos64_t
__fpos_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos_t.h	/^} __fpos_t;$/;"	t	typeref:struct:_G_fpos_t
__fsblkcnt64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __FSBLKCNT64_T_TYPE __fsblkcnt64_t;$/;"	v
__fsblkcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __FSBLKCNT_T_TYPE __fsblkcnt_t;$/;"	v
__fsblkcnt_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	197;"	d
__fsblkcnt_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	210;"	d
__fsel	autoload/plugged/fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fsfilcnt64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __FSFILCNT64_T_TYPE __fsfilcnt64_t;$/;"	v
__fsfilcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __FSFILCNT_T_TYPE __fsfilcnt_t;$/;"	v
__fsfilcnt_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	201;"	d
__fsfilcnt_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	214;"	d
__fsid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __FSID_T_TYPE __fsid_t;	\/* Type of file system IDs.  *\/$/;"	v
__fsword_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __FSWORD_T_TYPE __fsword_t;$/;"	v
__fzf_cd__	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_comprun	autoload/plugged/fzf/shell/completion.bash	/^__fzf_comprun() {$/;"	f
__fzf_comprun	autoload/plugged/fzf/shell/completion.zsh	/^__fzf_comprun() {$/;"	f
__fzf_defc	autoload/plugged/fzf/shell/completion.bash	/^__fzf_defc() {$/;"	f
__fzf_extract_command	autoload/plugged/fzf/shell/completion.zsh	/^__fzf_extract_command() {$/;"	f
__fzf_generic_path_completion	autoload/plugged/fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	autoload/plugged/fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzf_history__() {$/;"	f
__fzf_orig_completion_filter	autoload/plugged/fzf/shell/completion.bash	/^__fzf_orig_completion_filter() {$/;"	f
__fzf_select__	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzfcmd	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	autoload/plugged/fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__g1_orig_size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  unsigned int __g1_orig_size;$/;"	m	struct:__pthread_cond_s
__g1_start	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^    __extension__ unsigned long long int __g1_start;$/;"	m	union:__pthread_cond_s::__anon26
__g1_start32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^    } __g1_start32;$/;"	m	union:__pthread_cond_s::__anon26	typeref:struct:__pthread_cond_s::__anon26::__anon27
__g_signals	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  unsigned int __g_signals[2];$/;"	m	struct:__pthread_cond_s
__g_size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  unsigned int __g_size[2];$/;"	m	struct:__pthread_cond_s
__getc_unlocked_body	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	102;"	d
__getitem__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __getitem__ (self, x):$/;"	m	class:OBJECT	file:
__getitem__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor	file:
__getitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__getitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position	file:
__getitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor	file:
__getitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getslice__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy	file:
__gid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __GID_T_TYPE __gid_t;	\/* Type of group identifications.  *\/$/;"	v
__gid_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	65;"	d
__glibc_c99_flexarr_available	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	144;"	d
__glibc_c99_flexarr_available	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	149;"	d
__glibc_c99_flexarr_available	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	154;"	d
__glibc_c99_flexarr_available	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	158;"	d
__glibc_clang_has_extension	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	92;"	d
__glibc_clang_has_extension	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	94;"	d
__glibc_clang_prereq	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	172;"	d
__glibc_clang_prereq	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@features.h	175;"	d
__glibc_has_attribute	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	410;"	d
__glibc_has_attribute	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	412;"	d
__glibc_likely	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	403;"	d
__glibc_likely	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	406;"	d
__glibc_macro_warning	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	494;"	d
__glibc_macro_warning	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	497;"	d
__glibc_macro_warning1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	493;"	d
__glibc_unlikely	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	402;"	d
__glibc_unlikely	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	405;"	d
__glibcxx_assert	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	474;"	d
__glibcxx_assert_impl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	464;"	d
__glibcxx_class_requires	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	49;"	d
__glibcxx_class_requires	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	70;"	d
__glibcxx_class_requires2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	50;"	d
__glibcxx_class_requires2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	72;"	d
__glibcxx_class_requires3	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	51;"	d
__glibcxx_class_requires3	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	74;"	d
__glibcxx_class_requires4	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	52;"	d
__glibcxx_class_requires4	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	76;"	d
__glibcxx_digits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	44;"	d
__glibcxx_digits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	90;"	d
__glibcxx_digits10	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	102;"	d
__glibcxx_digits10	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	145;"	d
__glibcxx_floating	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	143;"	d
__glibcxx_floating	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	94;"	d
__glibcxx_function_requires	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	48;"	d
__glibcxx_function_requires	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@concept_check.h	68;"	d
__glibcxx_max	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	50;"	d
__glibcxx_max	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	92;"	d
__glibcxx_max_digits10	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	144;"	d
__glibcxx_max_digits10	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	98;"	d
__glibcxx_max_exponent10	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	105;"	d
__glibcxx_max_exponent10	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	146;"	d
__glibcxx_min	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	47;"	d
__glibcxx_min	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	91;"	d
__glibcxx_requires_can_decrement_range	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	70;"	d
__glibcxx_requires_can_increment	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	68;"	d
__glibcxx_requires_can_increment_range	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	69;"	d
__glibcxx_requires_cond	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	66;"	d
__glibcxx_requires_heap	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	79;"	d
__glibcxx_requires_heap_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	80;"	d
__glibcxx_requires_irreflexive	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	83;"	d
__glibcxx_requires_irreflexive2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	84;"	d
__glibcxx_requires_irreflexive_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	85;"	d
__glibcxx_requires_irreflexive_pred2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	86;"	d
__glibcxx_requires_non_empty_range	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	41;"	d
__glibcxx_requires_non_empty_range	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	47;"	d
__glibcxx_requires_nonempty	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	42;"	d
__glibcxx_requires_nonempty	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	52;"	d
__glibcxx_requires_partitioned_lower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	75;"	d
__glibcxx_requires_partitioned_lower_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	77;"	d
__glibcxx_requires_partitioned_upper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	76;"	d
__glibcxx_requires_partitioned_upper_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	78;"	d
__glibcxx_requires_sorted	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	71;"	d
__glibcxx_requires_sorted_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	72;"	d
__glibcxx_requires_sorted_set	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	73;"	d
__glibcxx_requires_sorted_set_pred	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	74;"	d
__glibcxx_requires_string	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	81;"	d
__glibcxx_requires_string_len	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	82;"	d
__glibcxx_requires_subscript	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	43;"	d
__glibcxx_requires_subscript	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@assertions.h	49;"	d
__glibcxx_requires_valid_range	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	67;"	d
__glibcxx_signed	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	43;"	d
__glibcxx_signed	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@numeric_traits.h	89;"	d
__gnu_cxx	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@ext@aligned_buffer.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx_ldbl128	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace __gnu_cxx_ldbl128 { }$/;"	n	namespace:std
__gnu_debug	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@ptr_traits.h	/^namespace __gnu_debug { struct _Safe_iterator_base; }$/;"	n
__gnu_debug	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	/^namespace __gnu_debug$/;"	n
__gnuc_va_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	/^typedef __builtin_va_list __gnuc_va_list;$/;"	t
__gthread_active	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^static volatile int __gthread_active = -1;$/;"	v
__gthread_active_p	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_active_p (void)$/;"	f
__gthread_cond_broadcast	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_broadcast (__gthread_cond_t *__cond)$/;"	f
__gthread_cond_destroy	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_destroy (__gthread_cond_t* __cond)$/;"	f
__gthread_cond_init_function	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_init_function (__gthread_cond_t *__cond)$/;"	f
__gthread_cond_signal	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_signal (__gthread_cond_t *__cond)$/;"	f
__gthread_cond_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef pthread_cond_t __gthread_cond_t;$/;"	t
__gthread_cond_timedwait	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_timedwait (__gthread_cond_t *__cond, __gthread_mutex_t *__mutex,$/;"	f
__gthread_cond_wait	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_wait (__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)$/;"	f
__gthread_cond_wait_recursive	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_cond_wait_recursive (__gthread_cond_t *__cond,$/;"	f
__gthread_create	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_create (__gthread_t *__threadid, void *(*__func) (void*),$/;"	f
__gthread_detach	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_detach (__gthread_t __threadid)$/;"	f
__gthread_equal	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_equal (__gthread_t __t1, __gthread_t __t2)$/;"	f
__gthread_getspecific	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_getspecific (__gthread_key_t __key)$/;"	f
__gthread_join	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_join (__gthread_t __threadid, void **__value_ptr)$/;"	f
__gthread_key_create	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_key_create (__gthread_key_t *__key, void (*__dtor) (void *))$/;"	f
__gthread_key_delete	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_key_delete (__gthread_key_t __key)$/;"	f
__gthread_key_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef pthread_key_t __gthread_key_t;$/;"	t
__gthread_mutex_destroy	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_mutex_destroy (__gthread_mutex_t *__mutex)$/;"	f
__gthread_mutex_init_function	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_mutex_init_function (__gthread_mutex_t *__mutex)$/;"	f
__gthread_mutex_lock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_mutex_lock (__gthread_mutex_t *__mutex)$/;"	f
__gthread_mutex_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef pthread_mutex_t __gthread_mutex_t;$/;"	t
__gthread_mutex_timedlock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_mutex_timedlock (__gthread_mutex_t *__mutex,$/;"	f
__gthread_mutex_trylock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_mutex_trylock (__gthread_mutex_t *__mutex)$/;"	f
__gthread_mutex_unlock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_mutex_unlock (__gthread_mutex_t *__mutex)$/;"	f
__gthread_objc_close_thread_system	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_close_thread_system (void)$/;"	f
__gthread_objc_condition_allocate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_condition_allocate (objc_condition_t condition)$/;"	f
__gthread_objc_condition_broadcast	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_condition_broadcast (objc_condition_t condition)$/;"	f
__gthread_objc_condition_deallocate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_condition_deallocate (objc_condition_t condition)$/;"	f
__gthread_objc_condition_signal	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_condition_signal (objc_condition_t condition)$/;"	f
__gthread_objc_condition_wait	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_condition_wait (objc_condition_t condition, objc_mutex_t mutex)$/;"	f
__gthread_objc_init_thread_system	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_init_thread_system (void)$/;"	f
__gthread_objc_mutex_allocate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_mutex_allocate (objc_mutex_t mutex)$/;"	f
__gthread_objc_mutex_deallocate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_mutex_deallocate (objc_mutex_t mutex)$/;"	f
__gthread_objc_mutex_lock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_mutex_lock (objc_mutex_t mutex)$/;"	f
__gthread_objc_mutex_trylock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_mutex_trylock (objc_mutex_t mutex)$/;"	f
__gthread_objc_mutex_unlock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_mutex_unlock (objc_mutex_t mutex)$/;"	f
__gthread_objc_thread_detach	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_detach (void (*func)(void *), void *arg)$/;"	f
__gthread_objc_thread_exit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_exit (void)$/;"	f
__gthread_objc_thread_get_data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_get_data (void)$/;"	f
__gthread_objc_thread_get_priority	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_get_priority (void)$/;"	f
__gthread_objc_thread_id	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_id (void)$/;"	f
__gthread_objc_thread_set_data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_set_data (void *value)$/;"	f
__gthread_objc_thread_set_priority	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_set_priority (int priority)$/;"	f
__gthread_objc_thread_yield	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_objc_thread_yield (void)$/;"	f
__gthread_once	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_once (__gthread_once_t *__once, void (*__func) (void))$/;"	f
__gthread_once_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef pthread_once_t __gthread_once_t;$/;"	t
__gthread_recursive_mutex_destroy	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)$/;"	f
__gthread_recursive_mutex_init_function	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_recursive_mutex_init_function (__gthread_recursive_mutex_t *__mutex)$/;"	f
__gthread_recursive_mutex_lock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *__mutex)$/;"	f
__gthread_recursive_mutex_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef pthread_mutex_t __gthread_recursive_mutex_t;$/;"	t
__gthread_recursive_mutex_timedlock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_recursive_mutex_timedlock (__gthread_recursive_mutex_t *__mutex,$/;"	f
__gthread_recursive_mutex_trylock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *__mutex)$/;"	f
__gthread_recursive_mutex_unlock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)$/;"	f
__gthread_self	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_self (void)$/;"	f
__gthread_setspecific	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_setspecific (__gthread_key_t __key, const void *__ptr)$/;"	f
__gthread_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef pthread_t __gthread_t;$/;"	t
__gthread_time_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^typedef struct timespec __gthread_time_t;$/;"	t	typeref:struct:timespec
__gthread_trigger	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_trigger (void)$/;"	f
__gthread_yield	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^__gthread_yield (void)$/;"	f
__gthrw	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	100;"	d
__gthrw2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	89;"	d
__gthrw2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	95;"	d
__gthrw_	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	93;"	d
__gthrw_	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	96;"	d
__gthrw_pragma	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	87;"	d
__have_pthread_attr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	63;"	d
__high	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^      unsigned int __high;$/;"	m	struct:__pthread_cond_s::__anon24::__anon25
__high	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^      unsigned int __high;$/;"	m	struct:__pthread_cond_s::__anon26::__anon27
__id_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __ID_T_TYPE __id_t;		\/* General type for IDs.  *\/$/;"	v
__id_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	104;"	d
__index 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^		__index = function(_, k)$/;"	f
__index 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^		__index = function(self, k)$/;"	f
__index 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^	__index = function(self, k)$/;"	f
__init	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    unsigned short int __init;	\/* Flag for initializing.  *\/$/;"	m	struct:drand48_data
__init__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __init__ (self):$/;"	m	class:PrettyText
__init__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __init__ (self, **argv):$/;"	m	class:OBJECT
__init__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __init__ (self, path = None):$/;"	m	class:configure
__init__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __init__ (self, path):$/;"	m	class:TaskManager
__init__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __init__(self):$/;"	m	class:ContextSnippet
__init__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __init__(self, _initial_indent, start, end, context):$/;"	m	class:SnippetUtil
__init__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:FarPlugin
__init__	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:NeoVimLoggerHandler
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__($/;"	m	class:SnippetDefinition
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__($/;"	m	class:TextObject
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __init__(self, parent, token: ChoicesToken):$/;"	m	class:Choices
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__($/;"	m	class:SnippetInstance
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	autoload/plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	autoload/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	autoload/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=""):$/;"	m	class:TempFileManager
__init__	autoload/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	autoload/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	autoload/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	autoload/plugged/vim-autoformat/samples/python.py	/^    def __init__(self,msgq):     $/;"	m	class:SuckerThread
__init__	autoload/plugged/vim-autoformat/samples/python.py	/^    def __init__(self,top):     $/;"	m	class:App
__init__	autoload/plugged/vim-autoformat/samples/python.py	/^    def __init__(self,top=None):     $/;"	m	class:AppArray
__init__	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Kind
__init__	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	autoload/plugged/vista.vim/test/data/114.py	/^    def __init__(self, x):$/;"	m	class:Foo
__init_names	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __init_names (self):$/;"	m	class:PrettyText	file:
__init_win32	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __init_win32 (self):$/;"	m	class:PrettyText	file:
__inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	77;"	d
__inline	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	79;"	d
__ino64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __INO64_T_TYPE __ino64_t;	\/* Type of file serial numbers (LFS).*\/$/;"	v
__ino64_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	55;"	d
__ino_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __INO_T_TYPE __ino_t;	\/* Type of file serial numbers.  *\/$/;"	v
__ino_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	51;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	291;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	296;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	317;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	323;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	334;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	340;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	351;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	357;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	366;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	370;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	390;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	395;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	403;"	d
__int16_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	406;"	d
__int16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef signed short int __int16_t;$/;"	t
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	290;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	295;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	316;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	322;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	333;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	339;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	350;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	356;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	365;"	d
__int32_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	369;"	d
__int32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef signed int __int32_t;$/;"	t
__int64_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	289;"	d
__int64_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	294;"	d
__int64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__extension__ typedef signed long long int __int64_t;$/;"	t
__int64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef signed long int __int64_t;$/;"	t
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	292;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	297;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	318;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	324;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	335;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	341;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	352;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	358;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	367;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	371;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	391;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	396;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	404;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	407;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	424;"	d
__int8_c_suffix	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	426;"	d
__int8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef signed char __int8_t;$/;"	t
__int8_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	240;"	d
__int_c	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	283;"	d
__int_c_join	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	282;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __int16_t __int_least16_t;$/;"	t
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	103;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	125;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	141;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	157;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	177;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	197;"	d
__int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	208;"	d
__int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __int32_t __int_least32_t;$/;"	t
__int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	101;"	d
__int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	123;"	d
__int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	139;"	d
__int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	155;"	d
__int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	175;"	d
__int_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __int64_t __int_least64_t;$/;"	t
__int_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	99;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __int8_t __int_least8_t;$/;"	t
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	105;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	127;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	143;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	159;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	179;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	199;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	210;"	d
__int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	227;"	d
__int_n_cs_precedes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char __int_n_cs_precedes;$/;"	m	struct:lconv
__int_n_sep_by_space	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char __int_n_sep_by_space;$/;"	m	struct:lconv
__int_n_sign_posn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char __int_n_sign_posn;$/;"	m	struct:lconv
__int_p_cs_precedes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char __int_p_cs_precedes;$/;"	m	struct:lconv
__int_p_sep_by_space	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char __int_p_sep_by_space;$/;"	m	struct:lconv
__int_p_sign_posn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char __int_p_sign_posn;$/;"	m	struct:lconv
__intmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__extension__ typedef long long int __intmax_t;$/;"	t
__intmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef long int __intmax_t;$/;"	t
__intptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __SWORD_TYPE __intptr_t;$/;"	v
__intptr_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	88;"	d
__intptr_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	94;"	d
__intptr_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	250;"	d
__isalnum_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	285;"	d
__isalpha_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	286;"	d
__isascii	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	99;"	d
__isascii_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	300;"	d
__isblank_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	297;"	d
__iscntrl_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	287;"	d
__isctype	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	88;"	d
__isctype_f	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	91;"	d
__isctype_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	241;"	d
__isdigit_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	288;"	d
__isgraph_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	290;"	d
__isleap	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	181;"	d
__islower_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	289;"	d
__isprint_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	291;"	d
__ispunct_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	292;"	d
__isspace_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	293;"	d
__isupper_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	294;"	d
__isxdigit_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	295;"	d
__iter__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __iter__ (self):$/;"	m	class:OBJECT	file:
__iter__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__iter__	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator	file:
__iter_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_comp_iter(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_comp_iter(_Iter_comp_iter<_Compare> __comp, _Iterator __it)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_comp_val(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_comp_val(_Compare __comp, _Value &__val)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_comp_val(_Iter_comp_iter<_Compare> __comp)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __iter_comp_val(_Iter_equal_to_iter)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __iter_comp_val(_Iter_less_iter)$/;"	f	namespace:__gnu_cxx::__ops
__iter_equal_to_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __iter_equal_to_iter()$/;"	f	namespace:__gnu_cxx::__ops
__iter_equal_to_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __iter_equal_to_val()$/;"	f	namespace:__gnu_cxx::__ops
__iter_equals_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __iter_equals_val(_Value& __val)$/;"	f	namespace:__gnu_cxx::__ops
__iter_less_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __iter_less_iter()$/;"	f	namespace:__gnu_cxx::__ops
__iter_less_val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __iter_less_val()$/;"	f	namespace:__gnu_cxx::__ops
__itimerspec_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_itimerspec.h	2;"	d
__jmp_buf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@setjmp.h	/^__extension__ typedef long long int __jmp_buf[8];$/;"	t
__jmp_buf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@setjmp.h	/^typedef int __jmp_buf[6];$/;"	t
__jmp_buf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@setjmp.h	/^typedef long int __jmp_buf[8];$/;"	t
__key_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __KEY_T_TYPE __key_t;	\/* Type of an IPC key.  *\/$/;"	v
__key_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	122;"	d
__kind	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  int __kind;$/;"	m	struct:__pthread_mutex_s
__ldiv_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	71;"	d
__le__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__len__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __len__ (self):$/;"	m	class:OBJECT	file:
__len__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor	file:
__len__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy	file:
__len__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor	file:
__len__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary	file:
__len__	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^    __pthread_slist_t __list;$/;"	m	union:__pthread_mutex_s::__anon12
__list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  __pthread_list_t __list;$/;"	m	struct:__pthread_mutex_s
__lldiv_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	81;"	d
__locale_struct	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^struct __locale_struct$/;"	s
__locale_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^typedef struct __locale_struct *__locale_t;$/;"	t	typeref:struct:__locale_struct
__locales	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^  struct __locale_data *__locales[13]; \/* 13 = __LC_LAST. *\/$/;"	m	struct:__locale_struct	typeref:struct:__locale_struct::__locale_data
__lock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  int __lock;$/;"	m	struct:__pthread_mutex_s
__loff_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __off64_t __loff_t;	\/* Type of file sizes and offsets (LFS).  *\/$/;"	t
__low	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^      unsigned int __low;$/;"	m	struct:__pthread_cond_s::__anon24::__anon25
__low	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^      unsigned int __low;$/;"	m	struct:__pthread_cond_s::__anon26::__anon27
__lshift__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lshift__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__mask_was_saved	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^    int __mask_was_saved;$/;"	m	struct:__anon40::__anon41
__mbstate_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	/^} __mbstate_t;$/;"	t	typeref:struct:__anon28
__mbstate_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@mbstate_t.h	2;"	d
__mode_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __MODE_T_TYPE __mode_t;	\/* Type of file attribute bitmasks.  *\/$/;"	v
__mode_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	70;"	d
__names	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__locale_t.h	/^  const char *__names[13];$/;"	m	struct:__locale_struct
__ne__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	27;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	28;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	32;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	30;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	28;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	34;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	24;"	d
__need_NULL	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	97;"	d
__need_STDDEF_H_misc	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	105;"	d
__need_STDDEF_H_misc	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	25;"	d
__need___va_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	35;"	d
__need___va_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	37;"	d
__need_ptrdiff_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	21;"	d
__need_ptrdiff_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	37;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@alloca.h	23;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	27;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	31;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	28;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	27;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	32;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	143;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	22;"	d
__need_size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	48;"	d
__need_wchar_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	29;"	d
__need_wchar_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	33;"	d
__need_wchar_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	23;"	d
__need_wchar_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	77;"	d
__need_wint_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	118;"	d
__negate	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __negate(_Iter_pred<_Predicate> __pred)$/;"	f	namespace:__gnu_cxx::__ops
__new 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^	__new = function(_, init)$/;"	f
__newindex 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^		__newindex = function(_, k, v)$/;"	f
__next	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  struct __pthread_internal_list *__next;$/;"	m	struct:__pthread_internal_list	typeref:struct:__pthread_internal_list::__pthread_internal_list
__next	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  struct __pthread_internal_slist *__next;$/;"	m	struct:__pthread_internal_slist	typeref:struct:__pthread_internal_slist::__pthread_internal_slist
__next__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator	file:
__next__	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator	file:
__nlink_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __NLINK_T_TYPE __nlink_t;	\/* Type of file link counts.  *\/$/;"	v
__nlink_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	75;"	d
__nonnull	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	293;"	d
__nonnull	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	295;"	d
__nusers	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  unsigned int __nusers;$/;"	m	struct:__pthread_mutex_s
__off64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __OFF64_T_TYPE __off64_t;	\/* Type of file sizes and offsets (LFS).  *\/$/;"	v
__off64_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	71;"	d
__off64_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	93;"	d
__off_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __OFF_T_TYPE __off_t;	\/* Type of file sizes and offsets.  *\/$/;"	v
__off_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	67;"	d
__off_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	89;"	d
__old_x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    unsigned short int __old_x[3]; \/* Old state.  *\/$/;"	m	struct:drand48_data
__ops	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^namespace __ops$/;"	n	namespace:__gnu_cxx
__owner	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  int __owner;$/;"	m	struct:__pthread_mutex_s
__pad	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void *__pad[4];$/;"	m	struct:__anon40
__pad1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned char __pad1[3];$/;"	m	struct:__pthread_rwlock_arch_t
__pad1	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned char __pad1[7];$/;"	m	struct:__pthread_rwlock_arch_t
__pad2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned char __pad2;$/;"	m	struct:__pthread_rwlock_arch_t
__pad2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned long int __pad2;$/;"	m	struct:__pthread_rwlock_arch_t
__pad3	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __pad3;$/;"	m	struct:__pthread_rwlock_arch_t
__pad4	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __pad4;$/;"	m	struct:__pthread_rwlock_arch_t
__pad5	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  size_t __pad5;$/;"	m	struct:_IO_FILE_complete
__parallel	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace __parallel { }$/;"	n	namespace:std
__pid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __PID_T_TYPE __pid_t;	\/* Type of process identifications.  *\/$/;"	v
__pid_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	39;"	d
__pid_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	55;"	d
__pid_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	98;"	d
__pos	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos64_t.h	/^  __off64_t __pos;$/;"	m	struct:_G_fpos64_t
__pos	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos_t.h	/^  __off_t __pos;$/;"	m	struct:_G_fpos_t
__pred_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __pred_iter(_Predicate __pred)$/;"	f	namespace:__gnu_cxx::__ops
__prev	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  struct _pthread_cleanup_buffer *__prev; \/* Chaining of cleanup functions.  *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:struct:_pthread_cleanup_buffer::_pthread_cleanup_buffer
__prev	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  struct __pthread_internal_list *__prev;$/;"	m	struct:__pthread_internal_list	typeref:struct:__pthread_internal_list::__pthread_internal_list
__pthread_cleanup_class	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  __pthread_cleanup_class (void (*__fct) (void *), void *__arg)$/;"	f	class:__pthread_cleanup_class
__pthread_cleanup_class	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^class __pthread_cleanup_class$/;"	c
__pthread_cleanup_frame	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^struct __pthread_cleanup_frame$/;"	s
__pthread_cleanup_routine	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^__pthread_cleanup_routine (struct __pthread_cleanup_frame *__frame)$/;"	f
__pthread_cond_s	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^struct __pthread_cond_s$/;"	s
__pthread_internal_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^typedef struct __pthread_internal_list$/;"	s
__pthread_internal_slist	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^typedef struct __pthread_internal_slist$/;"	s
__pthread_list_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^} __pthread_list_t;$/;"	t	typeref:struct:__pthread_internal_list
__pthread_mutex_s	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^struct __pthread_mutex_s$/;"	s
__pthread_rwlock_arch_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^struct __pthread_rwlock_arch_t$/;"	s
__pthread_slist_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^} __pthread_slist_t;$/;"	t	typeref:struct:__pthread_internal_slist
__pthread_unwind_buf_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^} __pthread_unwind_buf_t __attribute__ ((__aligned__));$/;"	t	typeref:struct:__anon40
__ptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	109;"	d
__putc_unlocked_body	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	106;"	d
__quad_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__extension__ typedef long long int __quad_t;$/;"	t
__quad_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef long int __quad_t;$/;"	t
__readers	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __readers;$/;"	m	struct:__pthread_rwlock_arch_t
__replacement_assert	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  __replacement_assert(const char* __file, int __line,$/;"	f	namespace:std
__repr__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __repr__ (self):$/;"	m	class:OBJECT	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ChoicesToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __repr__(self):$/;"	m	class:Choices	file:
__repr__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop	file:
__restore	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void __restore () const { pthread_setcanceltype (__cancel_type, 0); }$/;"	f	class:__pthread_cleanup_class
__restrict	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	377;"	d
__restrict	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	379;"	d
__restrict_arr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	387;"	d
__restrict_arr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	390;"	d
__restrict_arr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	393;"	d
__restrict_arr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	396;"	d
__rethrow_if_nested_impl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    __rethrow_if_nested_impl(const _Ex* __ptr)$/;"	f	namespace:std
__rethrow_if_nested_impl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^  __rethrow_if_nested_impl(const void*)$/;"	f	namespace:std
__rlim64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __RLIM64_T_TYPE __rlim64_t;	\/* Type for resource measurement (LFS).  *\/$/;"	v
__rlim_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __RLIM_T_TYPE __rlim_t;	\/* Type for resource measurement.  *\/$/;"	v
__routine	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void (*__routine) (void *);             \/* Function to call.  *\/$/;"	m	struct:_pthread_cleanup_buffer
__rshift__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__rshift__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__rwelision	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  signed char __rwelision;$/;"	m	struct:__pthread_rwlock_arch_t
__safe_bool	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      typedef void (exception_ptr::*__safe_bool)();$/;"	t	class:std::__exception_ptr::exception_ptr
__sched_priority	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	48;"	d
__setdoit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  void __setdoit (int __newval) { __do_it = __newval; }$/;"	f	class:__pthread_cleanup_class
__setitem__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __setitem__ (self, x, y):$/;"	m	class:OBJECT	file:
__setitem__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor	file:
__setitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy	file:
__setitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor	file:
__setitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs	file:
__setitem__	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setslice__	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy	file:
__shared	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  int __shared;$/;"	m	struct:__pthread_rwlock_arch_t
__shared	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned char __shared;$/;"	m	struct:__pthread_rwlock_arch_t
__sig_atomic_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef int __sig_atomic_t;$/;"	t
__sigset_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__sigset_t.h	/^} __sigset_t;$/;"	t	typeref:struct:__anon42
__sigset_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@sigset_t.h	2;"	d
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_ATTR_T];$/;"	m	union:pthread_attr_t
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];$/;"	m	union:__anon22
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon21
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_CONDATTR_T];$/;"	m	union:__anon16
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_COND_T];$/;"	m	union:__anon18
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_MUTEXATTR_T];$/;"	m	union:__anon15
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_MUTEX_T];$/;"	m	union:__anon17
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_RWLOCKATTR_T];$/;"	m	union:__anon20
__size	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_RWLOCK_T];$/;"	m	union:__anon19
__socklen_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __U32_TYPE __socklen_t;$/;"	v
__spins	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	/^  short __spins;$/;"	m	struct:__pthread_mutex_s
__spins	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_mutex.h	46;"	d
__ssize_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __SSIZE_T_TYPE __ssize_t; \/* Type of a byte count, or error.  *\/$/;"	v
__ssize_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	78;"	d
__ssize_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	109;"	d
__state	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos64_t.h	/^  __mbstate_t __state;$/;"	m	struct:_G_fpos64_t
__state	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__fpos_t.h	/^  __mbstate_t __state;$/;"	m	struct:_G_fpos_t
__stdint_join3	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	245;"	d
__str__	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def __str__ (self):$/;"	m	class:OBJECT	file:
__str__	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor	file:
__str__	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor	file:
__struct_FILE_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	19;"	d
__struct_tm_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	2;"	d
__stub___compat_bdflush	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	10;"	d
__stub_chflags	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	11;"	d
__stub_fchflags	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	12;"	d
__stub_gtty	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	13;"	d
__stub_lchmod	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	14;"	d
__stub_revoke	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	15;"	d
__stub_setlogin	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	16;"	d
__stub_sigreturn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	17;"	d
__stub_sstk	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	18;"	d
__stub_stty	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@gnu@stubs-64.h	19;"	d
__sub__	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position	file:
__suseconds_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __SUSECONDS_T_TYPE __suseconds_t; \/* Signed count of microseconds.  *\/$/;"	v
__suseconds_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	44;"	d
__suseconds_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	139;"	d
__syscall_slong_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __SYSCALL_SLONG_TYPE __syscall_slong_t;$/;"	v
__syscall_ulong_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __SYSCALL_ULONG_TYPE __syscall_ulong_t;$/;"	v
__throw_exception_again	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	37;"	d
__throw_exception_again	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	42;"	d
__throw_with_nested_impl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    __throw_with_nested_impl(_Tp&& __t, false_type)$/;"	f	namespace:std
__throw_with_nested_impl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    __throw_with_nested_impl(_Tp&& __t, true_type)$/;"	f	namespace:std
__time64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __TIME64_T_TYPE __time64_t;$/;"	v
__time64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	220;"	d
__time_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __TIME_T_TYPE __time_t;	\/* Seconds since the Epoch.  *\/$/;"	v
__time_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@time_t.h	2;"	d
__timer_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __TIMER_T_TYPE __timer_t;$/;"	v
__timer_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@timer_t.h	2;"	d
__timeval_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timeval.h	2;"	d
__tm_gmtoff	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  long int __tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm
__tm_zone	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  const char *__tm_zone;	\/* Timezone abbreviation.  *\/$/;"	m	struct:tm
__toascii	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	100;"	d
__toascii_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	301;"	d
__tobody	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	155;"	d
__tolower_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	275;"	d
__toupper_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	277;"	d
__try	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	35;"	d
__try	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_defines.h	40;"	d
__u_char	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned char __u_char;$/;"	t
__u_char_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	40;"	d
__u_int	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned int __u_int;$/;"	t
__u_long	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned long int __u_long;$/;"	t
__u_quad_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__extension__ typedef unsigned long long int __u_quad_t;$/;"	t
__u_quad_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned long int __u_quad_t;$/;"	t
__u_short	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned short int __u_short;$/;"	t
__uid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __UID_T_TYPE __uid_t;	\/* Type of user identifications.  *\/$/;"	v
__uid_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	80;"	d
__uint16_identity	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@uintn-identity.h	/^__uint16_identity (__uint16_t __x)$/;"	f
__uint16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned short int __uint16_t;$/;"	t
__uint32_identity	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@uintn-identity.h	/^__uint32_identity (__uint32_t __x)$/;"	f
__uint32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned int __uint32_t;$/;"	t
__uint32_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	171;"	d
__uint64_identity	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@uintn-identity.h	/^__uint64_identity (__uint64_t __x)$/;"	f
__uint64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__extension__ typedef unsigned long long int __uint64_t;$/;"	t
__uint64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned long int __uint64_t;$/;"	t
__uint8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned char __uint8_t;$/;"	t
__uint_c	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	284;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __uint16_t __uint_least16_t;$/;"	t
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	104;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	126;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	142;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	158;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	178;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	198;"	d
__uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	209;"	d
__uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __uint32_t __uint_least32_t;$/;"	t
__uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	102;"	d
__uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	124;"	d
__uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	140;"	d
__uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	156;"	d
__uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	176;"	d
__uint_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __uint64_t __uint_least64_t;$/;"	t
__uint_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	100;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef __uint8_t __uint_least8_t;$/;"	t
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	106;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	128;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	144;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	160;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	180;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	200;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	211;"	d
__uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	228;"	d
__uintmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__extension__ typedef unsigned long long int __uintmax_t;$/;"	t
__uintmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^typedef unsigned long int __uintmax_t;$/;"	t
__useconds_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types.h	/^__STD_TYPE __USECONDS_T_TYPE __useconds_t; \/* Count of microseconds.  *\/$/;"	v
__useconds_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	135;"	d
__va_arg_pack	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	362;"	d
__va_arg_pack_len	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	363;"	d
__va_copy	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	24;"	d
__val	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__sigset_t.h	/^  unsigned long int __val[_SIGSET_NWORDS];$/;"	m	struct:__anon42
__val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __val_comp_iter(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops
__val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^    __val_comp_iter(_Iter_comp_iter<_Compare> __comp)$/;"	f	namespace:__gnu_cxx::__ops
__val_comp_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __val_comp_iter(_Iter_less_iter)$/;"	f	namespace:__gnu_cxx::__ops
__val_less_iter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^  __val_less_iter()$/;"	f	namespace:__gnu_cxx::__ops
__value	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	/^  } __value;		\/* Value so far.  *\/$/;"	m	struct:__anon28	typeref:union:__anon28::__anon29
__warnattr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	129;"	d
__warnattr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	134;"	d
__warndecl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	127;"	d
__warndecl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	133;"	d
__wch	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	/^    __WINT_TYPE__ __wch;$/;"	m	union:__anon28::__anon29
__wchb	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@__mbstate_t.h	/^    char __wchb[4];$/;"	m	union:__anon28::__anon29
__webpack_require__	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	function __webpack_require__(moduleId) {$/;"	f
__webpack_require__.d	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.d = function(exports, name, getter) {$/;"	f
__webpack_require__.n	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.n = function(module) {$/;"	f
__webpack_require__.o	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };$/;"	f
__webpack_require__.r	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.r = function(exports) {$/;"	f
__webpack_require__.t	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.t = function(value, mode) {$/;"	f
__wint_t_defined	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@wint_t.h	2;"	d
__wrefs	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^  unsigned int __wrefs;$/;"	m	struct:__pthread_cond_s
__writers	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __writers;$/;"	m	struct:__pthread_rwlock_arch_t
__writers_futex	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __writers_futex;$/;"	m	struct:__pthread_rwlock_arch_t
__wrphase_futex	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@struct_rwlock.h	/^  unsigned int __wrphase_futex;$/;"	m	struct:__pthread_rwlock_arch_t
__wseq	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^    __extension__ unsigned long long int __wseq;$/;"	m	union:__pthread_cond_s::__anon24
__wseq32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@thread-shared-types.h	/^    } __wseq32;$/;"	m	union:__pthread_cond_s::__anon24	typeref:struct:__pthread_cond_s::__anon24::__anon25
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^			  cookie_io_functions_t __io_funcs) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^     __THROW __attribute_malloc__ __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^     __THROWNL __attribute__ ((__format__ (__printf__, 2, 0))) __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^     __THROWNL __attribute__ ((__format__ (__printf__, 2, 3))) __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^  __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern FILE *fdopen (int __fd, const char *__modes) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern char *tmpnam (char *__s) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern char *tmpnam_r (char *__s) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int feof (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int feof_unlocked (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int ferror (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int ferror_unlocked (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int fileno (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int fileno_unlocked (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^extern int ftrylockfile (FILE *__stream) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^		       char *__restrict __resolved) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^     __THROW __attribute__ ((__const__)) __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^extern char *l64a (long int __n) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^extern char *ptsname (int __fd) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^extern long int labs (long int __x) __THROW __attribute__ ((__const__)) __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	/^extern cpu_set_t *__sched_cpualloc (size_t __count) __THROW __wur;$/;"	v
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	304;"	d
__wur	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@cdefs.h	310;"	d
__x	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    unsigned short int __x[3];	\/* Current state.  *\/$/;"	m	struct:drand48_data
_action_context	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_addDomElement	autoload/plugged/bracey.vim/server/htmlfile.js	/^		htmlparser.DomHandler.prototype._addDomElement.call(this, elem);$/;"	m	class:htmlparser.DomHandler
_add_child	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_apply_change	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_ask_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_before_test	autoload/plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	autoload/plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	f
_before_test	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_cache	autoload/plugged/fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v
_calc_end	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _calc_end(text, start):$/;"	f
_chain	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  struct _IO_FILE *_chain;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_FILE
_check_if_still_inside_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_version	autoload/plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _chomp(string):$/;"	f
_codecvt	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  struct _IO_codecvt *_codecvt;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_codecvt
_colorToAttribute	autoload/plugged/fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v
_context_match	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_create_file	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_transformations	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_cur_column	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  unsigned short _cur_column;$/;"	m	struct:_IO_FILE
_current_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_del_child	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_disable_edits	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_do_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:Choices
_do_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text
_do_print	autoload/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy
_do_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_editable_children	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_enable_edits	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_eval_code	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_execute_action	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _execute_action(self, action, context, additional_locals={}):$/;"	m	class:SnippetDefinition
_extra_vim_config	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	autoload/plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	autoload/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	autoload/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpand_DoNotClobberDefaultRegister
_extra_vim_config	autoload/plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	autoload/plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	autoload/plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	autoload/plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	autoload/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	autoload/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	autoload/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	autoload/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ListAllAvailable_Disabled_ExpectCorrectResult
_extra_vim_config	autoload/plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	autoload/plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	autoload/plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	autoload/plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	autoload/plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
_extra_vim_config	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	autoload/plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_far_nvim_rpc_invoke	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def _far_nvim_rpc_invoke(self, args):$/;"	m	class:FarPlugin
_file	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  struct _IO_FILE _file;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_FILE
_file_to_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_fileno	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  int _fileno;$/;"	m	struct:_IO_FILE
_find_closing_brace	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
_flags	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  int _flags;		\/* High-order word is _IO_MAGIC; rest is flags. *\/$/;"	m	struct:_IO_FILE
_flags2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  int _flags2;$/;"	m	struct:_IO_FILE
_freeres_buf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  void *_freeres_buf;$/;"	m	struct:_IO_FILE_complete
_freeres_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  struct _IO_FILE *_freeres_list;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_FILE
_fzf_alias_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_alias_completion() {$/;"	f
_fzf_compgen_dir	autoload/plugged/fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	autoload/plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	autoload/plugged/fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	autoload/plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	autoload/plugged/fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	autoload/plugged/fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill_post	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill_post() {$/;"	f
_fzf_complete_ssh	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_dir_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_host_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_host_completion() {$/;"	f
_fzf_opts_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_path_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_fzf_proc_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_proc_completion() {$/;"	f
_fzf_proc_completion_post	autoload/plugged/fzf/shell/completion.bash	/^_fzf_proc_completion_post() {$/;"	f
_fzf_setup_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_setup_completion() {$/;"	f
_fzf_statusline	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_var_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_var_completion() {$/;"	f
_get_all_snippet_files_for	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_choices_placeholder	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _get_choices_placeholder(self) -> str:$/;"	m	class:Choices
_get_diff	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_existing_deep_extends	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_line_diff	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_next_tab	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _get_pos(name):$/;"	f
_get_potential_snippet_filenames_to_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _get_potential_snippet_filenames_to_edit(snippet_dir, filetypes):$/;"	f
_get_prev_tab	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _get_tmp():$/;"	f
_handle_failure	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_is_pos_zero	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _is_pos_zero(pos):$/;"	f
_is_preview_window_opened	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def _is_preview_window_opened(self) -> bool:$/;"	m	class:Kind
_jump	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, jump_direction: JumpDirection):$/;"	m	class:SnippetManager
_leaving_buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load_config	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def _load_config (self):$/;"	m	class:configure
_load_snippets_for	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_lock	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  _IO_lock_t *_lock;$/;"	m	struct:_IO_FILE
_make_candidate	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^    def _make_candidate(self, bufnr: int) -> Candidate:$/;"	m	class:Source
_make_debug_exception	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _make_debug_exception(self, e, code=""):$/;"	m	class:SnippetDefinition
_markers	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  struct _IO_marker *_markers;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_marker
_mode	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  int _mode;$/;"	m	struct:_IO_FILE_complete
_move	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _multi_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_needs_update	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_objc_thread_attribs	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^static pthread_attr_t _objc_thread_attribs;$/;"	v
_objc_thread_storage	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^static pthread_key_t _objc_thread_storage;$/;"	v
_offset	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  __off64_t _offset;$/;"	m	struct:_IO_FILE_complete
_old_offset	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  __off_t _old_offset; \/* This used to be _offset but it's too small.  *\/$/;"	m	struct:_IO_FILE
_one_char_case_change	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _one_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ChoicesToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_comments	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_parse_number	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_patternCache	autoload/plugged/fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v
_place_initial_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initial_text
_pthread_cleanup_buffer	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^struct _pthread_cleanup_buffer$/;"	s
_re_match	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_read_text_file	autoload/plugged/ultisnips/test/vim_interface.py	/^def _read_text_file(filename):$/;"	f
_refresh_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_reinit	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace_conditional	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_reset	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_reset	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_restore_win	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def _restore_win(self) -> None:$/;"	m	class:Kind
_root_detect	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def _root_detect (self):$/;"	m	class:configure
_run_shell_command	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_runeWidths	autoload/plugged/fzf/src/util/util.go	/^var _runeWidths = make(map[rune]int)$/;"	v
_rv_changed	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_rv_changed	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_save_win	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def _save_win(self) -> None:$/;"	m	class:Kind
_screen	autoload/plugged/fzf/src/tui/tcell.go	/^	_screen tcell.Screen$/;"	v
_select_and_create_file_to_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _select_and_create_file_to_edit(potentials: Set[str]) -> str:$/;"	f
_send	autoload/plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_set_pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _set_pos(name, pos):$/;"	f
_setup_inner_state	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_shortbuf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char _shortbuf[1];$/;"	m	struct:_IO_FILE
_show_user_warning	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _show_user_warning(msg):$/;"	f
_snip_quote	autoload/plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_splitRegex	autoload/plugged/fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v
_split_conditional	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_teardown_inner_state	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_term_title	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^    def _term_title(self, bufnr: int) -> str:$/;"	m	class:Source
_tolower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (_tolower);$/;"	v
_tolower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	228;"	d
_toupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (_toupper);$/;"	v
_toupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	229;"	d
_track_change	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _unmap_select_mode_mapping():$/;"	f
_unused2	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];$/;"	m	struct:_IO_FILE_complete
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _update(self, done, buf):$/;"	m	class:Choices
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_vim_dec	autoload/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_dec(string):$/;"	f
_vim_enc	autoload/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_enc(bytearray):$/;"	f
_vtable_offset	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  signed char _vtable_offset;$/;"	m	struct:_IO_FILE
_wide_data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_FILE.h	/^  struct _IO_wide_data *_wide_data;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_wide_data
_words_for_line	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "First Line\\nSecond Line"$/;"	v	class:TestWithNewline
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestCheapDelete
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestRealLife1
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo End Beginning"$/;"	v	class:TestRealLife
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
a:temps	autoload/plugged/fzf/plugin/fzf.vim	/^    let a:temps.shellscript = shellscript$/;"	v
aS	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
abs	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@std_abs.h	44;"	d
abs_path	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
absolute_path	autoload/plugged/vim-floaterm/bin/floaterm	/^absolute_path() {$/;"	f
abspath	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:abspath(path)$/;"	f
acosf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1776;"	d
acosl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1781;"	d
actAbort	autoload/plugged/fzf/src/terminal.go	/^	actAbort$/;"	c
actAccept	autoload/plugged/fzf/src/terminal.go	/^	actAccept$/;"	c
actAcceptNonEmpty	autoload/plugged/fzf/src/terminal.go	/^	actAcceptNonEmpty$/;"	c
actBackwardChar	autoload/plugged/fzf/src/terminal.go	/^	actBackwardChar$/;"	c
actBackwardDeleteChar	autoload/plugged/fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c
actBackwardDeleteCharEOF	autoload/plugged/fzf/src/terminal.go	/^	actBackwardDeleteCharEOF$/;"	c
actBackwardKillWord	autoload/plugged/fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c
actBackwardWord	autoload/plugged/fzf/src/terminal.go	/^	actBackwardWord$/;"	c
actBeginningOfLine	autoload/plugged/fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c
actCancel	autoload/plugged/fzf/src/terminal.go	/^	actCancel$/;"	c
actClearQuery	autoload/plugged/fzf/src/terminal.go	/^	actClearQuery$/;"	c
actClearScreen	autoload/plugged/fzf/src/terminal.go	/^	actClearScreen$/;"	c
actClearSelection	autoload/plugged/fzf/src/terminal.go	/^	actClearSelection$/;"	c
actDeleteChar	autoload/plugged/fzf/src/terminal.go	/^	actDeleteChar$/;"	c
actDeleteCharEOF	autoload/plugged/fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c
actDeselectAll	autoload/plugged/fzf/src/terminal.go	/^	actDeselectAll$/;"	c
actDown	autoload/plugged/fzf/src/terminal.go	/^	actDown$/;"	c
actEndOfLine	autoload/plugged/fzf/src/terminal.go	/^	actEndOfLine$/;"	c
actExecute	autoload/plugged/fzf/src/terminal.go	/^	actExecute$/;"	c
actExecuteMulti	autoload/plugged/fzf/src/terminal.go	/^	actExecuteMulti \/\/ Deprecated$/;"	c
actExecuteSilent	autoload/plugged/fzf/src/terminal.go	/^	actExecuteSilent$/;"	c
actForwardChar	autoload/plugged/fzf/src/terminal.go	/^	actForwardChar$/;"	c
actForwardWord	autoload/plugged/fzf/src/terminal.go	/^	actForwardWord$/;"	c
actHalfPageDown	autoload/plugged/fzf/src/terminal.go	/^	actHalfPageDown$/;"	c
actHalfPageUp	autoload/plugged/fzf/src/terminal.go	/^	actHalfPageUp$/;"	c
actIgnore	autoload/plugged/fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c
actInvalid	autoload/plugged/fzf/src/terminal.go	/^	actInvalid$/;"	c
actJump	autoload/plugged/fzf/src/terminal.go	/^	actJump$/;"	c
actJumpAccept	autoload/plugged/fzf/src/terminal.go	/^	actJumpAccept$/;"	c
actKillLine	autoload/plugged/fzf/src/terminal.go	/^	actKillLine$/;"	c
actKillWord	autoload/plugged/fzf/src/terminal.go	/^	actKillWord$/;"	c
actMouse	autoload/plugged/fzf/src/terminal.go	/^	actMouse$/;"	c
actNextHistory	autoload/plugged/fzf/src/terminal.go	/^	actNextHistory$/;"	c
actPageDown	autoload/plugged/fzf/src/terminal.go	/^	actPageDown$/;"	c
actPageUp	autoload/plugged/fzf/src/terminal.go	/^	actPageUp$/;"	c
actPreview	autoload/plugged/fzf/src/terminal.go	/^	actPreview$/;"	c
actPreviewDown	autoload/plugged/fzf/src/terminal.go	/^	actPreviewDown$/;"	c
actPreviewHalfPageDown	autoload/plugged/fzf/src/terminal.go	/^	actPreviewHalfPageDown$/;"	c
actPreviewHalfPageUp	autoload/plugged/fzf/src/terminal.go	/^	actPreviewHalfPageUp$/;"	c
actPreviewPageDown	autoload/plugged/fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c
actPreviewPageUp	autoload/plugged/fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c
actPreviewUp	autoload/plugged/fzf/src/terminal.go	/^	actPreviewUp$/;"	c
actPreviousHistory	autoload/plugged/fzf/src/terminal.go	/^	actPreviousHistory$/;"	c
actPrintQuery	autoload/plugged/fzf/src/terminal.go	/^	actPrintQuery$/;"	c
actRefreshPreview	autoload/plugged/fzf/src/terminal.go	/^	actRefreshPreview$/;"	c
actReload	autoload/plugged/fzf/src/terminal.go	/^	actReload$/;"	c
actReplaceQuery	autoload/plugged/fzf/src/terminal.go	/^	actReplaceQuery$/;"	c
actRune	autoload/plugged/fzf/src/terminal.go	/^	actRune$/;"	c
actSelectAll	autoload/plugged/fzf/src/terminal.go	/^	actSelectAll$/;"	c
actSigStop	autoload/plugged/fzf/src/terminal.go	/^	actSigStop$/;"	c
actToggle	autoload/plugged/fzf/src/terminal.go	/^	actToggle$/;"	c
actToggleAll	autoload/plugged/fzf/src/terminal.go	/^	actToggleAll$/;"	c
actToggleDown	autoload/plugged/fzf/src/terminal.go	/^	actToggleDown$/;"	c
actToggleIn	autoload/plugged/fzf/src/terminal.go	/^	actToggleIn$/;"	c
actToggleOut	autoload/plugged/fzf/src/terminal.go	/^	actToggleOut$/;"	c
actTogglePreview	autoload/plugged/fzf/src/terminal.go	/^	actTogglePreview$/;"	c
actTogglePreviewWrap	autoload/plugged/fzf/src/terminal.go	/^	actTogglePreviewWrap$/;"	c
actToggleSort	autoload/plugged/fzf/src/terminal.go	/^	actToggleSort$/;"	c
actToggleUp	autoload/plugged/fzf/src/terminal.go	/^	actToggleUp$/;"	c
actTop	autoload/plugged/fzf/src/terminal.go	/^	actTop$/;"	c
actUnixLineDiscard	autoload/plugged/fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c
actUnixWordRubout	autoload/plugged/fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c
actUp	autoload/plugged/fzf/src/terminal.go	/^	actUp$/;"	c
actYank	autoload/plugged/fzf/src/terminal.go	/^	actYank$/;"	c
action	autoload/plugged/bracey.vim/server/sorting_test.js	/^		'action': action,$/;"	p	class:newAction
action	autoload/plugged/fzf/src/terminal.go	/^type action struct {$/;"	t
actionType	autoload/plugged/fzf/src/terminal.go	/^type actionType int$/;"	t
action_for	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
action_new	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def action_new(self, context: UserContext) -> None:$/;"	m	class:Kind
action_open	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def action_open(self, context: UserContext) -> None:$/;"	m	class:Kind
action_preview	autoload/plugged/vim-floaterm/rplugin/python3/denite/kind/floaterm.py	/^    def action_preview(self, context: UserContext) -> None:$/;"	m	class:Kind
activate	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:activate()$/;"	f
activateAll	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
activateBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
activateDirNode	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
activateFileNode	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
activeTempFiles	autoload/plugged/fzf/src/terminal.go	/^var activeTempFiles []string$/;"	v
addDiff	autoload/plugged/bracey.vim/server/sorting_test.js	/^function addDiff(action, index, arg){$/;"	f
add_border	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:add_border(winid, title) abort$/;"	f
add_buffer_filetypes	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, filetypes: str):$/;"	m	class:SnippetManager
add_format	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^function! s:add_format(master,count,bang)$/;"	f
add_map_to_dict	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:add_map_to_dict(map, level, dict) " {{{$/;"	f
add_methods	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_section	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
add_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet($/;"	m	class:SnippetManager
add_to_highlight_patterns	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:add_to_highlight_patterns(patterns, highlights) abort$/;"	f
addsucker	autoload/plugged/vim-autoformat/samples/python.py	/^    def addsucker(self):     $/;"	m	class:AppArray
adjust_header	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
adjust_hunk_summary	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
af	plug-config/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
after	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:after() abort$/;"	f
ag_handler	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
ag_to_qf	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
airline	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline#add_inactive_statusline_func	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vcs_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	autoload/plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#battery#init	autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline#extensions#battery#status	autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#bookmark#currentbookmark	autoload/plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark()$/;"	f
airline#extensions#bookmark#init	autoload/plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext)$/;"	f
airline#extensions#branch#get_head	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	autoload/plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	autoload/plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#coc#get	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#init	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
airline#extensions#commandt#apply	autoload/plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	autoload/plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext)$/;"	f
airline#extensions#ctrlspace#statusline	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...)$/;"	f
airline#extensions#cursormode#activate	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#check_denite_mode	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#init	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
airline#extensions#dirvish#init	autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#eclim#creat_line	autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fern#apply	autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fugitiveline#bufname	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#fzf#apply	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
airline#extensions#fzf#init	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#get_loaded_extensions	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#extensions#gina#apply	autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#grepper#init	autoload/plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
airline#extensions#grepper#status	autoload/plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#gutentags#init	autoload/plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	autoload/plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#init	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#keymap#init	autoload/plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	autoload/plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#languageclient#get	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#init	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
airline#extensions#load	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...)$/;"	f
airline#extensions#localsearch#init	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext)$/;"	f
airline#extensions#localsearch#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette)$/;"	f
airline#extensions#lsp#get	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
airline#extensions#lsp#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#init	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
airline#extensions#neomake#get_errors	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	autoload/plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	autoload/plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#nvimlsp#get	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#init	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#obsession#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#omnisharp#init	autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#po#apply	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#on_winenter	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#shorten	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#poetv#apply	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#init	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#update	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
airline#extensions#prepend_to_section	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#get_type	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
airline#extensions#quickfix#inactive_qf_window	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#searchcount#apply	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
airline#extensions#searchcount#init	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#status	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#syntastic#get	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
airline#extensions#tabline#autoshow#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#clean	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
airline#extensions#tabline#buflist#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#enable	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#formatters#default#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#short_path#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#redraw	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#tabs#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_right)$/;"	f
airline#extensions#tabline#tabws#add_tab_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
airline#extensions#tabline#tabws#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#init	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#term#termmode	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
airline#extensions#tmuxline#init	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	autoload/plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	autoload/plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	autoload/plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	autoload/plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#vimagit#get_mode	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#init	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
airline#extensions#vimcmake#init	autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimtex#apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#vista#currenttag	autoload/plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	autoload/plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#whitespace#check	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#to_string	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
airline#extensions#wordcount#formatters#readingtime#to_string	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
airline#extensions#wordcount#get	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#init	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	autoload/plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	autoload/plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#zoomwintab#apply	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
airline#formatter#short_path#format	autoload/plugged/vim-airline/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
airline#highlighter#add_accent	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...)$/;"	f
airline#highlighter#highlight_modified_inactive	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#highlighter#reset_hlcache	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache()$/;"	f
airline#init#bootstrap	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#gui_mode	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#gui_mode()$/;"	f
airline#init#sections	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#mode_changed	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
airline#msdos#round_msdos_colors	autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#themes#generate_color_map	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#gruvbox#refresh	autoload/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^function! airline#themes#gruvbox#refresh()$/;"	f
airline#themes#patch	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
airline#update_tabline	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#util#append	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#doautocmd	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#exec_funcrefs	autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getbufvar	autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#has_custom_scm	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#has_fugitive	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#ignore_buf	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#ignore_next_focusgain	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#prepend	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#stl_disabled	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#strcharpart	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#strchars	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#themes	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#try_focusgained	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
airline#util#warning	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#winwidth	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#winwidth(...)$/;"	f
airline#util#wrap	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale_count	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
airline_ale_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
airline_extensions	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
airline_languageclient_count	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
airline_languageclient_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
airline_lsp_count	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
airline_lsp_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
airline_nvimlsp_count	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
airline_refresh	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
airline_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
akey	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
ale_refresh	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
algo	autoload/plugged/fzf/src/algo/algo.go	/^package algo$/;"	p
algo	autoload/plugged/fzf/src/algo/algo_test.go	/^package algo$/;"	p
algo	autoload/plugged/fzf/src/algo/normalize.go	/^package algo$/;"	p
align_lists	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
align_pairs	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
aligner.project_ctags	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:aligner.project_ctags() abort$/;"	f
alloc16	autoload/plugged/fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int) (int, []int16) {$/;"	f
alloc32	autoload/plugged/fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int) (int, []int32) {$/;"	f
alloca	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@alloca.h	29;"	d
alloca	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@alloca.h	35;"	d
anon	autoload/plugged/vista.vim/test/data/175.cpp	/^} anon;$/;"	v	typeref:struct:__anon4
ansi	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
ansiOffset	autoload/plugged/fzf/src/ansi.go	/^type ansiOffset struct {$/;"	t
ansiRegex	autoload/plugged/fzf/src/ansi.go	/^var ansiRegex *regexp.Regexp$/;"	v
ansiState	autoload/plugged/fzf/src/ansi.go	/^type ansiState struct {$/;"	t
any_include?	autoload/plugged/fzf/test/test_go.rb	/^          def any_include?(val)$/;"	f	class:Tmux.until
append	autoload/plugged/fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f
append	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
append_line	autoload/plugged/fzf/install	/^append_line() {$/;"	f
append_prompt	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:append_prompt(rows) abort$/;"	f
append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
apply_custom_floating_opts	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:apply_custom_floating_opts(opts) abort$/;"	f
apply_highlight_patterns	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:apply_highlight_patterns(patterns) abort$/;"	f
apply_if_ready	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:apply_if_ready(options) abort$/;"	f
applymodifer	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:applymodifer(number,modifier,width)$/;"	f
arabic2roman	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:arabic2roman(arabic)$/;"	f
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ""$/;"	v	class:_AnonBase
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	autoload/plugged/ultisnips/test/test_Autocommands.py	/^    args = ""$/;"	v	class:Autocommands
args	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
arr	autoload/plugged/vim-autoformat/samples/fortran.f90	/^     integer, dimension(5) :: arr$/;"	v	program:example_prog
ary2pat	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:ary2pat(array)$/;"	f
asciiFuzzyIndex	autoload/plugged/fzf/src/algo/algo.go	/^func asciiFuzzyIndex(input *util.Chars, pattern []rune, caseSensitive bool) int {$/;"	f
asinf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1786;"	d
asinl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1791;"	d
ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
ask	autoload/plugged/fzf/install	/^ask() {$/;"	f
ask	autoload/plugged/fzf/uninstall	/^ask() {$/;"	f
ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
asktoinstallnode	utils/install-docker.sh	/^asktoinstallnode() { \\$/;"	f
asktoinstallnode	utils/install.sh	/^asktoinstallnode() { \\$/;"	f
asktoinstallpip	utils/install-docker.sh	/^asktoinstallpip() { \\$/;"	f
asktoinstallpip	utils/install.sh	/^asktoinstallpip() { \\$/;"	f
assemble_context	autoload/plugged/far.vim/autoload/far.vim	/^function! s:assemble_context(far_params, win_params, cmdargs, callback, cbparams) abort "{{{$/;"	f
assemble_context_callback	autoload/plugged/far.vim/autoload/far.vim	/^function! s:assemble_context_callback(exec_ctx) abort "{{{$/;"	f
assert	autoload/plugged/fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f
assertMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sidx int, eidx int, score int) {$/;"	f
assertMatch2	autoload/plugged/fzf/src/algo/algo_test.go	/^func assertMatch2(t *testing.T, fun Algo, caseSensitive, normalize, forward bool, input, pattern string, sidx int, eidx int, score int) {$/;"	f
assert_file_contents	autoload/plugged/tagalong.vim/spec/support/vim.rb	/^    def assert_file_contents(string)$/;"	f	class:Support.Vim
assert_list_of_dicts	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_list_of_dicts(expected, actual)$/;"	f
assert_signs	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_signs(expected, filename)$/;"	f
assignNewIndexes	autoload/plugged/bracey.vim/server/htmlfile.js	/^function assignNewIndexes(elem){$/;"	f
assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
asyncrun#fullname	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#fullname(f)$/;"	f
asyncrun#get_root	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#get_root(path, ...)$/;"	f
asyncrun#path_join	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#path_join(home, name)$/;"	f
asyncrun#path_win2unix	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#path_win2unix(winpath, prefix)$/;"	f
asyncrun#quickfix_toggle	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#quickfix_toggle(size, ...)$/;"	f
asyncrun#run	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#run(bang, opts, args, ...)$/;"	f
asyncrun#status	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#status()$/;"	f
asyncrun#stop	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#stop(bang)$/;"	f
asyncrun#version	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#version()$/;"	f
asyncrun_augroup	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	augroup asyncrun_augroup$/;"	a
asynctasks#cmd	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#cmd(bang, args, ...)$/;"	f
asynctasks#collect_config	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#collect_config(path, force)$/;"	f
asynctasks#finish	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#finish(what)$/;"	f
asynctasks#list	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#list(path)$/;"	f
asynctasks#project_root	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#project_root(name, ...)$/;"	f
asynctasks#source	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#source(maxwidth)$/;"	f
asynctasks#split	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#split(name)$/;"	f
asynctasks#start	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#start(bang, taskname, path, ...)$/;"	f
asynctasks#tabulify	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#tabulify(rows)$/;"	f
asynctasks#timing	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! asynctasks#timing()$/;"	f
atan2f	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1796;"	d
atan2l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1801;"	d
atanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1806;"	d
atanl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1811;"	d
atof	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdlib-float.h	/^__NTH (atof (const char *__nptr))$/;"	f
atof	autoload/plugged/fzf/src/options.go	/^func atof(str string) float64 {$/;"	f
atoi	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^__NTH (atoi (const char *__nptr))$/;"	f
atoi	autoload/plugged/fzf/src/options.go	/^func atoi(str string) int {$/;"	f
atoi	autoload/plugged/fzf/src/tui/light.go	/^func atoi(s string, defaultValue int) int {$/;"	f
atol	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^__NTH (atol (const char *__nptr))$/;"	f
atoll	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^__NTH (atoll (const char *__nptr))$/;"	f
atopi	autoload/plugged/fzf/src/terminal.go	/^func atopi(s string) int {$/;"	f
attach_autocmds	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! s:attach_autocmds() abort$/;"	f
attach_to_buffer	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function attach_to_buffer(buf, options)$/;"	f
attrCodes	autoload/plugged/fzf/src/tui/light.go	/^func attrCodes(attr Attr) []string {$/;"	f
attrFor	autoload/plugged/fzf/src/tui/tui.go	/^func attrFor(color ColorPair, attr Attr) Attr {$/;"	f
auto	autoload/plugged/vim-autoformat/samples/python.py	/^    def auto(self):     $/;"	m	class:App
auto_spellcheck	general/functions.vim	/^augroup auto_spellcheck$/;"	a
awkBlack	autoload/plugged/fzf/src/tokenizer.go	/^	awkBlack$/;"	c
awkNil	autoload/plugged/fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c
awkTokenizer	autoload/plugged/fzf/src/tokenizer.go	/^func awkTokenizer(input string) ([]string, int) {$/;"	f
awkWhite	autoload/plugged/fzf/src/tokenizer.go	/^	awkWhite$/;"	c
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne Hinten"$/;"	v	class:TestCheapDelete
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne hallo  Hinten"$/;"	v	class:TestRealLife1
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo End t"$/;"	v	class:TestRealLife
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "n"$/;"	v	class:TestWithNewline
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b$	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
b.get_posttitle	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_pretitle	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b64encode	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! s:b64encode(bytes, table, pad)$/;"	f
b:codi_target_bufnr	autoload/plugged/codi.vim/autoload/codi.vim	/^  let b:codi_target_bufnr = bufnr$/;"	v
b:current_syntax	autoload/plugged/coc-snippets/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	autoload/plugged/coc-snippets/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	autoload/plugged/git-messenger.vim/syntax/gitmessengerpopup.vim	/^let b:current_syntax = 'gitmessengerpopup'$/;"	v
b:current_syntax	autoload/plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	autoload/plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	autoload/plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	autoload/plugged/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	autoload/plugged/vim-startify/syntax/startify.vim	/^let b:current_syntax = 'startify'$/;"	v
b:current_syntax	autoload/plugged/vim-which-key/syntax/which_key.vim	/^let b:current_syntax = 'which_key'$/;"	v
b:current_syntax	autoload/plugged/vista.vim/syntax/vista.vim	/^let b:current_syntax = 'vista'$/;"	v
b:current_syntax	autoload/plugged/vista.vim/syntax/vista_kind.vim	/^let b:current_syntax = 'vista_kind'$/;"	v
b:current_syntax	autoload/plugged/vista.vim/syntax/vista_markdown.vim	/^let b:current_syntax = 'vista_markdown'$/;"	v
b:did_after_plugin_ultisnips_after	autoload/plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	autoload/plugged/coc-snippets/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:done_vimsnippets	autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:match_ignorecase	autoload/plugged/coc-snippets/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	autoload/plugged/coc-snippets/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:match_words	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:ultisnips_override_snipmate	autoload/plugged/coc-snippets/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:ultisnips_override_snipmate	autoload/plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
bB	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
bY	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
bZ	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
b_	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
backspace	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
bar	autoload/plug.vim	/^function! s:bar()$/;"	f
bar	autoload/plugged/vista.vim/test/data/123.cpp	/^namespace foo::bar {$/;"	n	class:foo	file:
bar	autoload/plugged/vista.vim/test/data/175.cpp	/^		int bar;$/;"	m	struct:example::__anon6	file:
bar	autoload/plugged/vista.vim/test/data/175.cpp	/^	int bar;$/;"	m	struct:__anon4	file:
basename	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
basename	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
bash	autoload/plugged/fzf/test/test_go.rb	/^    def bash$/;"	f	class:Shell
basicMatch	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f
batchfile	autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
baz	autoload/plugged/vista.vim/test/data/70.py	/^        def baz(self):$/;"	m	class:Foo.Bar
bdelete	autoload/plugged/vim-bbye/plugin/bbye.vim	/^function! s:bdelete(action, bang, buffer_name)$/;"	f
be16toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	41;"	d
be16toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	57;"	d
be32toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	46;"	d
be32toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	62;"	d
be64toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	51;"	d
be64toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	67;"	d
beep	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:before() abort$/;"	f
bi	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:bj
big_arr	autoload/plugged/vim-autoformat/samples/fortran.f90	/^   integer, dimension(20) :: big_arr$/;"	v	program:example_prog
bindeval	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def bindeval(text):$/;"	f
black	syntax/java.vim	/^let black = "#282c34"$/;"	v
blame__after_blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__after_blame(git) dict abort$/;"	f
blame__after_diff	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__after_diff(next_diff, git) dict abort$/;"	f
blame__after_log	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__after_log(git) dict abort$/;"	f
blame__append_lines	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__append_lines(lines) dict abort$/;"	f
blame__back	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__back() dict abort$/;"	f
blame__error	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__error(msg) dict abort$/;"	f
blame__forward	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__forward() dict abort$/;"	f
blame__open_popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__open_popup() dict abort$/;"	f
blame__render	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__render() dict abort$/;"	f
blame__reveal_diff	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__reveal_diff(include_all) dict abort$/;"	f
blame__spawn_git	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__spawn_git(args, callback) dict abort$/;"	f
blame__start	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:blame__start() dict abort$/;"	f
blank	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:blank(repel)$/;"	f
blink.clear	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  function! s:blink.clear() abort$/;"	f
blkcnt64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __blkcnt64_t blkcnt64_t;     \/* Type to count number of disk blocks. *\/$/;"	t
blkcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __blkcnt64_t blkcnt_t;	   \/* Type to count number of disk blocks.  *\/$/;"	t
blkcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __blkcnt_t blkcnt_t;	 \/* Type to count number of disk blocks.  *\/$/;"	t
blksize_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __blksize_t blksize_t;$/;"	t
blue	syntax/java.vim	/^let blue = "#61AFEF"$/;"	v
bm	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:bn
bo	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
bonusAt	autoload/plugged/fzf/src/algo/algo.go	/^func bonusAt(input *util.Chars, idx int) int16 {$/;"	f
bonusBoundary	autoload/plugged/fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c
bonusCamel123	autoload/plugged/fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtention$/;"	c
bonusConsecutive	autoload/plugged/fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtention)$/;"	c
bonusFirstCharMultiplier	autoload/plugged/fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c
bonusFor	autoload/plugged/fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f
bonusNonWord	autoload/plugged/fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c
bracey	autoload/plugged/bracey.vim/server/test/server.js	/^var bracey = require('..\/server.js');$/;"	v
bracey#bufferChange	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#bufferChange()$/;"	f
bracey#evalFile	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#evalFile(...)$/;"	f
bracey#reload	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#reload()$/;"	f
bracey#sendCommand	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#sendCommand(msg)$/;"	f
bracey#sendCurrentBuffer	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#sendCurrentBuffer()$/;"	f
bracey#setCursor	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#setCursor()$/;"	f
bracey#setFile	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#setFile()$/;"	f
bracey#setVars	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#setVars()$/;"	f
bracey#setupHandlers	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#setupHandlers()$/;"	f
bracey#start	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#start()$/;"	f
bracey#startBrowser	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#startBrowser(url)$/;"	f
bracey#startServer	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#startServer()$/;"	f
bracey#stop	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#stop()$/;"	f
bracey#stopServer	autoload/plugged/bracey.vim/autoload/bracey.vim	/^function! bracey#stopServer()$/;"	f
bracey_server_process	autoload/plugged/bracey.vim/script/bracey.py	/^bracey_server_process = None$/;"	v
broadcast	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.broadcast = function(command){$/;"	m	class:Server
browse	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:browse(url)$/;"	f
btags_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
btags_source	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
btowc	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^__NTH (btowc (int __c))$/;"	f
buf	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buf_add_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim.vim	/^function! s:buf_add_hl(buf, ns_id, hl_group,$/;"	f
buf_line_count	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:buf_line_count(bufnr) abort$/;"	f
buffer	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer_line_handler	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
buffer_lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
buffer_maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
buffer_repo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_type	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^    let buffers = tabpagebuflist(curtab)$/;"	v
buflist.curr	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.curr() dict abort$/;"	f
buflist.empty	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.empty() dict abort$/;"	f
buflist.first	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.first() dict abort$/;"	f
buflist.gather	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.gather() dict abort$/;"	f
buflist.insert	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.insert(node) dict abort$/;"	f
buflist.last	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.last() dict abort$/;"	f
buflist.next	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.next() dict abort$/;"	f
buflist.prev	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.prev() dict abort$/;"	f
buflist.remove	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.remove(node) dict abort$/;"	f
buflist.to_string	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:buflist.to_string() dict abort$/;"	f
buflisted	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
bufnr	autoload/plugged/codi.vim/autoload/codi.vim	/^  let bufnr = bufnr('%')$/;"	v
bufopen	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
buildCacheKey	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) buildCacheKey() string {$/;"	f
buildGitStatusCommand	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitStatusCommand(workdir) abort$/;"	f
buildGitWorkdirCommand	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitWorkdirCommand(root) abort$/;"	f
buildLists	autoload/plugged/fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]Result, []Result) {$/;"	f
buildPlusList	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) buildPlusList(template string, forcePlus bool) (bool, []*Item) {$/;"	f
buildResult	autoload/plugged/fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int) Result {$/;"	f
build_buffer_content	autoload/plugged/far.vim/autoload/far.vim	/^function! s:build_buffer_content(far_ctx, win_params) abort "{{{$/;"	f
build_command	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
build_command	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
build_sections	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
build_title	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:build_title(bufnr, text) abort$/;"	f
byBegin	autoload/plugged/fzf/src/options.go	/^	byBegin$/;"	c
byEnd	autoload/plugged/fzf/src/options.go	/^	byEnd$/;"	c
byLength	autoload/plugged/fzf/src/options.go	/^	byLength$/;"	c
byScore	autoload/plugged/fzf/src/options.go	/^	byScore criterion = iota$/;"	c
byTimeOrder	autoload/plugged/fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t
byte2col	autoload/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def byte2col(line, nbyte):$/;"	f
byte_is_alphanumeric	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function byte_is_alphanumeric(byte)$/;"	f
byte_is_hex	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function byte_is_hex(byte)$/;"	f
c	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c	autoload/plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cS	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
ca	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cb
cache_load_ini	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:cache_load_ini(name)$/;"	f
cacheable	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f
caddr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __caddr_t caddr_t;$/;"	t
calc_layout	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:calc_layout(mappings) abort " {{{$/;"	f
calc_size	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
calcnt	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t calcnt;	\/* calibration intervals (ro) *\/$/;"	m	struct:timex
calculateScore	autoload/plugged/fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, normalize bool, text *util.Chars, pattern []rune, sidx int, eidx int, withPos bool) (int, *[]int) {$/;"	f
calculateSize	autoload/plugged/fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, occupied int, minSize int, pad int) int {$/;"	f
callback	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
can_diffoff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cancel	autoload/plugged/vim-autoformat/samples/python.py	/^    def cancel(self):     $/;"	m	class:App
cancelPreview	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) cancelPreview() {$/;"	f
capture	autoload/plugged/fzf/test/test_go.rb	/^  def capture$/;"	f	class:Tmux
ccls_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/coc.vim	/^function! s:ccls_hl(params) abort$/;"	f
ccls_regions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/coc.vim	/^function! s:ccls_regions(params) abort$/;"	f
ccls_storage_str	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^function! s:ccls_storage_str(sc) abort$/;"	f
cd	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:cd(dir)$/;"	f
cd_cmd	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:cd_cmd() abort$/;"	f
cd_to_vcs_root	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:cd_to_vcs_root(path) abort$/;"	f
ceilf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1816;"	d
ceill	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1821;"	d
cfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
cgc	autoload/plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
ch	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cr
chCwd	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
chRoot	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
ch_get_id	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:ch_get_id(ch)$/;"	f
changes	autoload/plugged/bracey.vim/server/htmlfile.js	/^		'changes': []$/;"	p	class:diffParsedHtml.selfDiff
changesurround	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
charClass	autoload/plugged/fzf/src/algo/algo.go	/^type charClass int$/;"	t
charClassOf	autoload/plugged/fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f
charClassOfAscii	autoload/plugged/fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f
charClassOfNonAscii	autoload/plugged/fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f
charLetter	autoload/plugged/fzf/src/algo/algo.go	/^	charLetter$/;"	c
charLower	autoload/plugged/fzf/src/algo/algo.go	/^	charLower$/;"	c
charNonWord	autoload/plugged/fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c
charNumber	autoload/plugged/fzf/src/algo/algo.go	/^	charNumber$/;"	c
charUpper	autoload/plugged/fzf/src/algo/algo.go	/^	charUpper$/;"	c
chars	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:chars(string)$/;"	f
chdir	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:chdir(path)$/;"	f
chdir	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:chdir(path)$/;"	f
checkAscii	autoload/plugged/fzf/src/util/chars.go	/^func checkAscii(bytes []byte) (bool, int) {$/;"	f
checkAutocmd	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
checkCommand	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
checkEnvironment	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
checkInitailize	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitailize() abort$/;"	f
checkVersion	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:checkVersion() abort$/;"	f
check_back_space	plug-config/coc.vim	/^function! s:check_back_space() abort$/;"	f
check_binary	autoload/plugged/fzf/install	/^check_binary() {$/;"	f
check_buffer	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:check_buffer(fugitive_repo, current)$/;"	f
check_defined	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_section	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_environ	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def check_environ (self, key):$/;"	m	class:configure
check_exec	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:check_exec(bin)$/;"	f
check_far_window_to_resize	autoload/plugged/far.vim/autoload/far.vim	/^function! s:check_far_window_to_resize(bufnr) abort "{{{$/;"	f
check_floating	autoload/plugged/vim-floaterm/autoload/health/floaterm.vim	/^function! s:check_floating() abort$/;"	f
check_floating_window	autoload/plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_floating_window() abort$/;"	f
check_git_binary	autoload/plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_git_binary() abort$/;"	f
check_job	autoload/plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_job() abort$/;"	f
check_mixed_indent	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_mixed_indent_file	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
check_msgq	autoload/plugged/vim-autoformat/samples/python.py	/^    def check_msgq(self):     $/;"	m	class:App
check_nvr	autoload/plugged/vim-floaterm/autoload/health/floaterm.vim	/^function! s:check_nvr() abort$/;"	f
check_quickfix	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	function! s:check_quickfix()$/;"	f
check_required_vim_version	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
check_required_vim_version	autoload/plugged/ultisnips/test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
check_servers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^function! s:check_servers() abort$/;"	f
check_terminal	autoload/plugged/vim-floaterm/autoload/health/floaterm.vim	/^function! s:check_terminal() abort$/;"	f
check_user_options	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:check_user_options(path) abort$/;"	f
check_vim_version	autoload/plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! s:check_vim_version() abort$/;"	f
checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
children	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def children(self):$/;"	m	class:EditableTextObject
choice	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^    let choice = confirm(a:title, "&Yes\\n&No")$/;"	v
chomp	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
chrono_literals	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^    inline namespace chrono_literals { }$/;"	n	namespace:std::literals
chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
chunkSize	autoload/plugged/fzf/src/constants.go	/^	chunkSize int = 100$/;"	c
ci	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:cr
clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
cleanTemporaryFiles	autoload/plugged/fzf/src/terminal.go	/^func cleanTemporaryFiles() {$/;"	f
cleanse	autoload/plugged/fzf/src/tui/light.go	/^func cleanse(str string) string {$/;"	f
cleanup	autoload/plugged/fzf/bin/fzf-tmux	/^cleanup() {$/;"	f
clear	autoload/plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
clearChunkCache	autoload/plugged/fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f
clearError	autoload/plugged/bracey.vim/server/frontend.js	/^	var clearError = function(){$/;"	f
clearPatternCache	autoload/plugged/fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f
clear_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	autoload/plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clock_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@clock_t.h	/^typedef __clock_t clock_t;$/;"	t
clockid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@clockid_t.h	/^typedef __clockid_t clockid_t;$/;"	t
clone_plugin	autoload/plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
cloneconfig	utils/install-docker.sh	/^cloneconfig() { \\$/;"	f
cloneconfig	utils/install.sh	/^cloneconfig() { \\$/;"	f
close	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^  cookie_close_function_t *close;	\/* Close file.  *\/$/;"	m	struct:_IO_cookie_io_functions_t
close	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:close() abort$/;"	f
closeChildren	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
closeCurrentDir	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
closeOtherEditors	vscode/settings.vim	/^function! s:closeOtherEditors()$/;"	f
closePlatform	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) closePlatform() {$/;"	f
closePlatform	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) closePlatform() {$/;"	f
closeTreeWindow	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
close_cb	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  function! s:close_cb(channel) abort$/;"	f
close_hunk_preview_window	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:close_hunk_preview_window()$/;"	f
close_split_win	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:close_split_win() abort$/;"	f
closematch	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let cmd = s:is_win ? join(a:cmd, ' ') : a:cmd$/;"	v
cmd	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^      let cmd = 'cmd.exe \/C "'.cmd.'"'$/;"	v
cmd	autoload/plugged/far.vim/autoload/far.vim	/^    let cmd = [ 'rg','--json','--with-filename', '--no-heading',$/;"	v
cmd	autoload/plugged/far.vim/autoload/far.vim	/^    let cmd = ['ack', '--nogroup', '--column', '--nocolor',$/;"	v
cmd	autoload/plugged/far.vim/autoload/far.vim	/^    let cmd = ['ag', '--nogroup', '--column', '--nocolor', '--silent', '--vimgrep',$/;"	v
cmd	autoload/plugged/fzf/plugin/fzf.vim	/^      let cmd = 'start \/wait cmd \/c '.command$/;"	v
cmd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
cmd_history_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
coc#_cancel	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_cancel()$/;"	f
coc#_complete	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_complete() abort$/;"	f
coc#_do_complete	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(start, items, preselect)$/;"	f
coc#_hide	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_hide() abort$/;"	f
coc#_insert_key	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_map	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_map()$/;"	f
coc#_select	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select() abort$/;"	f
coc#_select_confirm	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm() abort$/;"	f
coc#_selected	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_selected()$/;"	f
coc#_unmap	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unmap()$/;"	f
coc#_unwatch	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_command	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_command(id, cmd, ...)$/;"	f
coc#add_extension	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#api#call	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#call(method, args) abort$/;"	f
coc#api#func_names	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#func_names() abort$/;"	f
coc#api#notify	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#notify(method, args) abort$/;"	f
coc#client#create	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#get_channel	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_channel(client)$/;"	f
coc#client#get_client	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_client(name) abort$/;"	f
coc#client#is_running	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#notify	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#open_log	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#open_log()$/;"	f
coc#client#request	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#config	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#do_notify	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#do_notify(id, method, result)$/;"	f
coc#expandable	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#jumpable	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#create	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#create(position, height, name, numberSelect)$/;"	f
coc#list#get_chars	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_chars()$/;"	f
coc#list#getc	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getc() abort$/;"	f
coc#list#getchar	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getchar() abort$/;"	f
coc#list#has_preview	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#names	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#names(...) abort$/;"	f
coc#list#options	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#restore	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#restore(winid, height)$/;"	f
coc#list#set_height	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#set_height(height) abort$/;"	f
coc#list#setlines	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(lines, append)$/;"	f
coc#list#setup	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#start_prompt	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#start_prompt(...) abort$/;"	f
coc#list#status	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#list#stop_prompt	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#stop_prompt(...)$/;"	f
coc#on_enter	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#on_notify	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_notify(id, method, Cb)$/;"	f
coc#refresh	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#get_errors	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_errors()$/;"	f
coc#rpc#kill	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#start_server	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#started	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#started() abort$/;"	f
coc#rpc#stop	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#snippet#_select_mappings	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable()$/;"	f
coc#snippet#show_choices	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, len, values) abort$/;"	f
coc#start	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#status()$/;"	f
coc#task#running	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#terminal#close	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#close(bufnr) abort$/;"	f
coc#terminal#send	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#send(bufnr, text, add_new_line) abort$/;"	f
coc#terminal#start	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#start(cmd, cwd, env) abort$/;"	f
coc#util#change_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#change_lines(bufnr, list) abort$/;"	f
coc#util#check_refresh	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#check_refresh(bufnr)$/;"	f
coc#util#clear_highlights	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clear_highlights(...) abort$/;"	f
coc#util#clear_pos_matches	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clear_pos_matches(match, ...) abort$/;"	f
coc#util#clear_signs	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clear_signs()$/;"	f
coc#util#clearmatches	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clearmatches(ids, ...)$/;"	f
coc#util#close	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close(id) abort$/;"	f
coc#util#close_floats	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close_floats() abort$/;"	f
coc#util#close_win	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close_win(id)$/;"	f
coc#util#create_float_buf	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#create_float_buf(bufnr) abort$/;"	f
coc#util#create_float_win	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#create_float_win(winid, bufnr, config) abort$/;"	f
coc#util#create_prompt_win	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#create_prompt_win(title, default) abort$/;"	f
coc#util#cursor	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#diff_content	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diff_content(lines) abort$/;"	f
coc#util#do_autocmd	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_autocmd(name) abort$/;"	f
coc#util#do_complete	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_complete(name, opt, cb) abort$/;"	f
coc#util#echo_hover	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_hover(msg)$/;"	f
coc#util#echo_line	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_line()$/;"	f
coc#util#echo_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_lines(lines)$/;"	f
coc#util#echo_messages	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_messages(hl, msgs)$/;"	f
coc#util#echo_signatures	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_signatures(signatures) abort$/;"	f
coc#util#execute	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#execute(cmd)$/;"	f
coc#util#extension_root	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#float_hide	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_hide()$/;"	f
coc#util#float_jump	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_jump()$/;"	f
coc#util#float_scroll	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_scroll(forward)$/;"	f
coc#util#float_scrollable	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_scrollable()$/;"	f
coc#util#get_bufoptions	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr) abort$/;"	f
coc#util#get_changeinfo	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo()$/;"	f
coc#util#get_complete_option	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config(key) abort$/;"	f
coc#util#get_config_home	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_content	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_content(bufnr)$/;"	f
coc#util#get_data_home	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_data_home()$/;"	f
coc#util#get_float	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_float()$/;"	f
coc#util#get_float_mode	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_float_mode(allow_selection, align_top, pum_align_top) abort$/;"	f
coc#util#get_format_opts	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_format_opts(bufnr) abort$/;"	f
coc#util#get_input	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_input()$/;"	f
coc#util#get_pretext	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_pretext() abort$/;"	f
coc#util#get_syntax_name	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_syntax_name(lnum, col)$/;"	f
coc#util#getpid	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#getpid()$/;"	f
coc#util#has_float	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_float()$/;"	f
coc#util#has_preview	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_preview()$/;"	f
coc#util#highlight_options	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#highlight_options()$/;"	f
coc#util#install	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install() abort$/;"	f
coc#util#install_extension	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#is_preview	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#is_preview(bufnr)$/;"	f
coc#util#iterm_open	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#iterm_open(dir)$/;"	f
coc#util#job_command	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#jump	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jump(cmd, filepath, ...) abort$/;"	f
coc#util#jumpTo	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jumpTo(line, character) abort$/;"	f
coc#util#move_cursor	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#move_cursor(delta)$/;"	f
coc#util#on_error	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#on_error(msg) abort$/;"	f
coc#util#open_file	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_files	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_files(files)$/;"	f
coc#util#open_terminal	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#open_url	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_url(url)$/;"	f
coc#util#path_replace_patterns	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#path_replace_patterns() abort$/;"	f
coc#util#pclose	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pclose()$/;"	f
coc#util#pick_color	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pick_color(default_color)$/;"	f
coc#util#platform	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#platform()$/;"	f
coc#util#preview_info	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#preview_info(info, filetype, ...) abort$/;"	f
coc#util#prompt	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#prompt(title, cb) abort$/;"	f
coc#util#prompt_confirm	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#prompt_confirm(title)$/;"	f
coc#util#quickpick	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#quickpick(title, items, cb) abort$/;"	f
coc#util#rebuild	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#rebuild()$/;"	f
coc#util#refactor_fold_text	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_fold_text(lnum) abort$/;"	f
coc#util#refactor_foldlevel	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_foldlevel(lnum) abort$/;"	f
coc#util#remote_fns	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#remote_fns(name)$/;"	f
coc#util#root_patterns	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns() abort$/;"	f
coc#util#run_terminal	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#run_terminal(opts, cb)$/;"	f
coc#util#scroll_preview	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#scroll_preview(dir) abort$/;"	f
coc#util#set_buf_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_buf_lines(bufnr, lines) abort$/;"	f
coc#util#set_buf_var	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_buf_var(bufnr, name, val) abort$/;"	f
coc#util#setline	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#timer	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unmap	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unmap(bufnr, keys) abort$/;"	f
coc#util#unplace_signs	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unplace_signs(bufnr, sign_ids)$/;"	f
coc#util#update_extensions	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions(...) abort$/;"	f
coc#util#valid_float_win	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#valid_float_win(winid) abort$/;"	f
coc#util#version	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#win_gotoid	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#win_gotoid(winid) abort$/;"	f
coc#util#win_position	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#win_position()$/;"	f
coc#util#with_callback	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#with_callback(method, args, cb)$/;"	f
cocActionsOpenFromSelected	plug-config/coc.vim	/^function! s:cocActionsOpenFromSelected(type) abort$/;"	f
coc_git_enabled	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
codi#__vim_callback	autoload/plugged/codi.vim/autoload/codi.vim	/^function! codi#__vim_callback(ch, msg)$/;"	f
codi#complete	autoload/plugged/codi.vim/autoload/codi.vim	/^function! codi#complete(arg_lead, cmd_line, cursor_pos)$/;"	f
codi#load#aliases	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! codi#load#aliases()$/;"	f
codi#load#interpreters	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! codi#load#interpreters()$/;"	f
codi#run	autoload/plugged/codi.vim/autoload/codi.vim	/^  function! codi#run(...)$/;"	f
codi#run	autoload/plugged/codi.vim/autoload/codi.vim	/^function! codi#run(bang, ...)$/;"	f
codi#update	autoload/plugged/codi.vim/autoload/codi.vim	/^function! codi#update()$/;"	f
codi_autoclose	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_autoclose()$/;"	f
codi_do_update	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_do_update()$/;"	f
codi_handle_data	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_handle_data(data, msg)$/;"	f
codi_handle_done	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_handle_done(bufnr, output)$/;"	f
codi_hide	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_hide()$/;"	f
codi_kill	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_kill()$/;"	f
codi_nvim_callback	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_nvim_callback(job_id, data, event)$/;"	f
codi_show	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_show()$/;"	f
codi_spawn	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_spawn(filetype)$/;"	f
codi_toggle	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:codi_toggle(filetype)$/;"	f
col2byte	autoload/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def col2byte(line, col):$/;"	f
colBlack	autoload/plugged/fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c
colBlue	autoload/plugged/fzf/src/tui/tui.go	/^	colBlue$/;"	c
colCyan	autoload/plugged/fzf/src/tui/tui.go	/^	colCyan$/;"	c
colDefault	autoload/plugged/fzf/src/tui/tui.go	/^	colDefault   Color = -1$/;"	c
colGreen	autoload/plugged/fzf/src/tui/tui.go	/^	colGreen$/;"	c
colMagenta	autoload/plugged/fzf/src/tui/tui.go	/^	colMagenta$/;"	c
colRed	autoload/plugged/fzf/src/tui/tui.go	/^	colRed$/;"	c
colUndefined	autoload/plugged/fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c
colWhite	autoload/plugged/fzf/src/tui/tui.go	/^	colWhite$/;"	c
colYellow	autoload/plugged/fzf/src/tui/tui.go	/^	colYellow$/;"	c
collect	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
collect_local_config	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def collect_local_config (self):$/;"	m	class:configure
collect_rtp_config	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def collect_rtp_config (self):$/;"	m	class:configure
collect_rtp_config	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:collect_rtp_config() abort$/;"	f
colorCodes	autoload/plugged/fzf/src/tui/light.go	/^func colorCodes(fg Color, bg Color) []string {$/;"	f
colorOffset	autoload/plugged/fzf/src/result.go	/^type colorOffset struct {$/;"	t
colorOffsets	autoload/plugged/fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, color tui.ColorPair, attr tui.Attr, current bool) []colorOffset {$/;"	f
color_is_bright	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function color_is_bright(r, g, b)$/;"	f
color_name_parser	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function color_name_parser(line, i)$/;"	f
colored	autoload/plugged/fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f
colors	autoload/plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
cols_layout.project_ctags	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:cols_layout.project_ctags() abort$/;"	f
combine	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:combine(key, desc) abort$/;"	f
command	autoload/plugged/bracey.vim/server/server.js	/^		'command': 'select'$/;"	p	class:Server.var.cmd
command	autoload/plugged/fzf/plugin/fzf.vim	/^      let command = a:command$/;"	v
command	autoload/plugged/fzf/plugin/fzf.vim	/^      let command = fzf.temps.batchfile$/;"	v
command	autoload/plugged/fzf/plugin/fzf.vim	/^    let command .= s:term_marker$/;"	v
command	autoload/plugged/fzf/plugin/fzf.vim	/^    let command = 'cmd.exe \/C '.fzf#shellescape('set "TERM=" & start \/WAIT sh -c '.shellscript)$/;"	v
command	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def command(cmd):$/;"	f
command_check	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def command_check (self, command, task):$/;"	m	class:TaskManager
command_check	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:command_check(command, cwd)$/;"	f
command_environ	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:command_environ(command)$/;"	f
command_input	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def command_input (self, command):$/;"	m	class:TaskManager
command_input	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:command_input(command, taskname, remember)$/;"	f
command_select	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def command_select (self, task):$/;"	m	class:TaskManager
command_select	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:command_select(config, ft)$/;"	f
command_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
commits	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
commits_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
common_notify_checks	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! s:common_notify_checks(server, buffer, data) abort$/;"	f
common_prefix	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_prefix(a, b)$/;"	f
common_sink	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
common_suffix	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_suffix(a, b, start)$/;"	f
compareElements	autoload/plugged/bracey.vim/server/htmlfile.js	/^function compareElements(left, right){$/;"	f
compareRanks	autoload/plugged/fzf/src/result_others.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f
compareRanks	autoload/plugged/fzf/src/result_x86.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f
compare_by_index	autoload/plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_index(foo, bar)$/;"	f
compare_by_val_len	autoload/plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_val_len(foo, bar)$/;"	f
compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
comparecase	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:comparecase(i1, i2)$/;"	f
comparison_fn_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^typedef __compar_fn_t comparison_fn_t;$/;"	t
compatible	autoload/plugged/bracey.vim/server/htmlfile.js	/^		compatible: false,$/;"	p	class:diff
compensate_for_pum	autoload/plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum() abort$/;"	f
compile_matcher	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function compile_matcher(matchers)$/;"	f
complete	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:complete(ArgLead, CmdLine, CursorPos)$/;"	f
complete	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
complete_dir	autoload/plugged/far.vim/autoload/far.vim	/^function! s:complete_dir(val)$/;"	f
complete_edit	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
complete_insert	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
complete_trigger	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
complex_literals	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^    inline namespace complex_literals { }$/;"	n	namespace:std::literals
compose_local_config	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:compose_local_config(path)$/;"	f
compose_rtp_config	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:compose_rtp_config(force)$/;"	f
compute_velocity	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:compute_velocity()$/;"	f
config_merge	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def config_merge (self, target, source, ininame, mode):$/;"	m	class:configure
config_merge	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:config_merge(target, source, ininame, mode)$/;"	f
configure	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^class configure (object):$/;"	c
confirm	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^    let confirm = nr2char(getchar())$/;"	v
conflict_marker	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
connectSocket	autoload/plugged/bracey.vim/server/frontend.js	/^	var connectSocket = function(){$/;"	f
conserve	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
console.log	autoload/plugged/bracey.vim/server/launch.js	/^console.log = function(msg) {$/;"	f
consoleDevice	autoload/plugged/fzf/src/tui/light.go	/^const consoleDevice string = "\/dev\/tty"$/;"	c
consoleFlagsInput	autoload/plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsInput  = uint32(windows.ENABLE_VIRTUAL_TERMINAL_INPUT | windows.ENABLE_PROCESSED_INPUT | windows.ENABLE_EXTENDED_FLAGS)$/;"	v
consoleFlagsOutput	autoload/plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsOutput = uint32(windows.ENABLE_VIRTUAL_TERMINAL_PROCESSING | windows.ENABLE_PROCESSED_OUTPUT | windows.DISABLE_NEWLINE_AUTO_RETURN)$/;"	v
const	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:const(val, min, max)$/;"	f
constant	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t constant;	\/* pll time constant *\/$/;"	m	struct:timex
constrain	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f
constructElem	autoload/plugged/bracey.vim/server/frontend.js	/^	var constructElem = function(data){$/;"	f
context	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def context(self):$/;"	m	class:SnippetUtil
context	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
conv	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def conv(obj):$/;"	f	function:escape
convertBoolToInt32	autoload/plugged/fzf/src/util/atomicbool.go	/^func convertBoolToInt32(b bool) int32 {$/;"	f
convert_keys	autoload/plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
cookie_close_function_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^typedef int cookie_close_function_t (void *__cookie);$/;"	t
cookie_io_functions_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^} cookie_io_functions_t;$/;"	t	typeref:struct:_IO_cookie_io_functions_t
cookie_read_function_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^typedef __ssize_t cookie_read_function_t (void *__cookie, char *__buf,$/;"	t
cookie_seek_function_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^typedef int cookie_seek_function_t (void *__cookie, __off64_t *__pos, int __w);$/;"	t
cookie_write_function_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^typedef __ssize_t cookie_write_function_t (void *__cookie, const char *__buf,$/;"	t
coordinatorDelayMax	autoload/plugged/fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c
coordinatorDelayStep	autoload/plugged/fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c
copySlice	autoload/plugged/fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f
cosf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1826;"	d
coshf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1831;"	d
coshl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1836;"	d
cosl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1841;"	d
could_match	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
count_to_scroll	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:count_to_scroll()$/;"	f
counts	autoload/plugged/fzf/test/test_go.rb	/^          def counts$/;"	f	class:Tmux.until
cpath	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
cprint2	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) cprint2(fg Color, bg Color, attr Attr, text string) {$/;"	f
cpu_set_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@cpu-set.h	/^} cpu_set_t;$/;"	t	typeref:struct:__anon14
cquery_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/coc.vim	/^function! s:cquery_hl(params) abort$/;"	f
cquery_regions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/coc.vim	/^function! s:cquery_regions(params) abort$/;"	f
cquery_role_dict	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^function! s:cquery_role_dict(role_int) abort$/;"	f
cquery_storage_str	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^function! s:cquery_storage_str(sc) abort$/;"	f
crb	autoload/plugged/vim-radical/plugin/radical.vim	/^  nmap crb <Plug>RadicalCoerceToBinary$/;"	m
crd	autoload/plugged/vim-radical/plugin/radical.vim	/^  nmap crd <Plug>RadicalCoerceToDecimal$/;"	m
create	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create_directory	autoload/plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
create_far_params	autoload/plugged/far.vim/autoload/far.vim	/^function! s:create_far_params() abort$/;"	f
create_file	autoload/plugged/fzf/install	/^create_file() {$/;"	f
create_highlight	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function create_highlight(rgb_hex, options)$/;"	f
create_last_session_link	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:create_last_session_link(session_path)$/;"	f
create_popup	autoload/plugged/fzf/plugin/fzf.vim	/^  function s:create_popup(hl, opts) abort$/;"	f
create_popup	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:create_popup(hl, opts) abort$/;"	f
create_repl_params	autoload/plugged/far.vim/autoload/far.vim	/^function! s:create_repl_params() abort$/;"	f
create_rows	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:create_rows(layout, mappings) abort$/;"	f
create_runtime	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:create_runtime(key)$/;"	f
create_undo_params	autoload/plugged/far.vim/autoload/far.vim	/^function! s:create_undo_params() abort$/;"	f
create_win_params	autoload/plugged/far.vim/autoload/far.vim	/^function! s:create_win_params() abort$/;"	f
createtimehandler	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:createtimehandler(format)$/;"	f
credentials	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:credentials() abort$/;"	f
criterion	autoload/plugged/fzf/src/options.go	/^type criterion int$/;"	t
cro	autoload/plugged/vim-radical/plugin/radical.vim	/^  nmap cro <Plug>RadicalCoerceToOctal$/;"	m
crx	autoload/plugged/vim-radical/plugin/radical.vim	/^  nmap crx <Plug>RadicalCoerceToHex$/;"	m
cs	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csi	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
csi	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) csi(code string) {$/;"	f
csi	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csi(code string) {$/;"	f
csiColor	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csiColor(fg Color, bg Color, attr Attr) bool {$/;"	f
css_fn   	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	css_fn   = false;        -- Enable all CSS *functions*: rgb_fn, hsl_fn$/;"	f
css_fn   	lua/plug-colorizer.lua	/^	  css_fn   = true;         -- Enable all CSS *functions*: rgb_fn, hsl_fn$/;"	f
css_fn.hsl	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	function css_fn.hsl(line, i)$/;"	f
css_fn.hsla	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	function css_fn.hsla(line, i)$/;"	f
css_fn.rgb	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	function css_fn.rgb(line, i)$/;"	f
css_fn.rgba	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	function css_fn.rgba(line, i)$/;"	f
css_function_parser 	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	css_function_parser = function(line, i)$/;"	f
cssfile	autoload/plugged/bracey.vim/server/filemanager.js	/^var cssfile = require(".\/cssfile.js");$/;"	v
cssfile	autoload/plugged/bracey.vim/server/test/cssfile.js	/^var cssfile = require('..\/cssfile');$/;"	v
csslint	autoload/plugged/bracey.vim/server/cssfile.js	/^var csslint = require('csslint').CSSLint;$/;"	v
cssparser	autoload/plugged/bracey.vim/server/cssfile.js	/^var cssparser = require('postcss');$/;"	v
ct	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:function
curl_arguments	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:curl_arguments(path, ...) abort$/;"	f
currency_symbol	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *currency_symbol;	\/* Local currency symbol.  *\/$/;"	m	struct:lconv
current	autoload/plugged/fzf/src/history.go	/^func (h *History) current() string {$/;"	f
current	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:current()$/;"	f
currentItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f
current_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let current_buffer = max([index(b.buffers, cur), 0])$/;"	v
current_exception	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    nested_exception() noexcept : _M_ptr(current_exception()) { }$/;"	f	class:std::nested_exception
current_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
current_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor_in_two_hunks	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
customOpenBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
customOpenDir	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
customOpenFile	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
cyan	syntax/java.vim	/^let cyan = "#56B6C2"$/;"	v
d<C-A>	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap d<C-A>     <Plug>SpeedDatingNowUTC$/;"	m
d<C-X>	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap d<C-X>     <Plug>SpeedDatingNowLocal$/;"	m
daddr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __daddr_t daddr_t;$/;"	t
dateincrement	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:dateincrement(string,offset,increment) dict$/;"	f
debug	autoload/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
debugV2	autoload/plugged/fzf/src/algo/algo.go	/^func debugV2(T []rune, pattern []rune, F []int32, lastIdx int, H []int16, C []int16) {$/;"	f
decimal_point	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *decimal_point;		\/* Decimal point character.  *\/$/;"	m	struct:lconv
deep_extend	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:deep_extend(d, e)$/;"	f
defaultCommand	autoload/plugged/fzf/src/constants.go	/^var defaultCommand string$/;"	v
defaultEscDelay	autoload/plugged/fzf/src/tui/light.go	/^	defaultEscDelay = 100$/;"	c
defaultHeight	autoload/plugged/fzf/src/tui/light.go	/^	defaultHeight = 24$/;"	c
defaultHistoryMax	autoload/plugged/fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c
defaultJumpLabels	autoload/plugged/fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,<.>\/?'\\"!@#$%^&*()[{]}-_=+"$/;"	c
defaultKeymap	autoload/plugged/fzf/src/terminal.go	/^func defaultKeymap() map[int][]action {$/;"	f
defaultMargin	autoload/plugged/fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f
defaultOptions	autoload/plugged/fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f
defaultTheme	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f
defaultTheme	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f
defaultTheme	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) defaultTheme() *ColorTheme {$/;"	f
defaultWidth	autoload/plugged/fzf/src/tui/light.go	/^	defaultWidth  = 80$/;"	c
default_color	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! s:default_color(hlgroup, what, mode) abort$/;"	f
default_grep	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
default_layout	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:default_layout()$/;"	f
default_register	autoload/plugged/vim-repeat/autoload/repeat.vim	/^function! s:default_register()$/;"	f
defaults	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
define_sign_line_highlights	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
define_sign_linenr_highlights	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_linenr_highlights() abort$/;"	f
define_sign_text	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
defs	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
delChar	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f
delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
delete	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
deleteBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
delete_mark	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def delete_mark(name):$/;"	f
delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
delimiterRegexp	autoload/plugged/fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f
delta	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
deprecated	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:deprecated(oldv, newv) abort$/;"	f
description	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
deselectItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItem(item *Item) {$/;"	f
detach_from_buffer	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function detach_from_buffer(buf, ns)$/;"	f
detect	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:detect() abort$/;"	f
devPrefixes	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^var devPrefixes = [...]string{"\/dev\/pts\/", "\/dev\/"}$/;"	v
dev_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __dev_t dev_t;$/;"	t
diagnostics_for_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
did_plugin_ultisnips	autoload/plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
diff	autoload/plug.vim	/^function! s:diff()$/;"	f
diff	autoload/plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def diff(a, b, sline=0):$/;"	f
diff	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:diff(rline, aline, rlinenr, alinenr, rprefix, aprefix, regions, whole_line)$/;"	f
diffParsedHtml	autoload/plugged/bracey.vim/server/htmlfile.js	/^function diffParsedHtml(left, right, edit_left, parent){$/;"	f
diff_in_buffer_length	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
diff_modifier	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffoff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffpanel.BindAu	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.BindAu() abort$/;"	f
diffpanel.CleanUpHighlight	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.CleanUpHighlight() abort$/;"	f
diffpanel.GetStatusLine	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.GetStatusLine() abort$/;"	f
diffpanel.Hide	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Hide() abort$/;"	f
diffpanel.Init	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Init() abort$/;"	f
diffpanel.ParseDiff	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.ParseDiff(diffresult, targetBufnr) abort$/;"	f
diffpanel.Show	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Show() abort$/;"	f
diffpanel.Toggle	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Toggle() abort$/;"	f
diffpanel.Update	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Update(seq,targetBufnr,targetid) abort$/;"	f
diffthis	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
dirname	autoload/plugged/nvim-colorizer.lua/test/print-trie.lua	/^local function dirname(str,sep)$/;"	f
dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
disableLiveUpdate	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:disableLiveUpdate() abort$/;"	f
disable_conceal_in_other_windows	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:disable_conceal_in_other_windows() abort$/;"	f
dispatch	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^function! s:dispatch(force) abort$/;"	f
dispatch	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! s:dispatch(force) abort$/;"	f
displayHelp	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
displayWidth	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidth(runes []rune) int {$/;"	f
displayWidthWithLimit	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f
display_by_path	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:display_by_path(path_prefix, path_format, use_env) abort$/;"	f
display_git_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
display_hg_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
display_width	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def display_width(str):$/;"	f
div	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:div(a,b)$/;"	f
div_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^  } div_t;$/;"	t	typeref:struct:__anon43
dname	autoload/plugged/vim-startify/autoload/startify.vim	/^    let dname = sfiles[i] ==# v:this_session ? fname.' (*)' : fname$/;"	v
do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
do_label	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:do_label(s, v, reverse, label) abort "{{{$/;"	f
do_post_expand	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_tests	autoload/plugged/emmet-vim/unittest.vim	/^function! s:do_tests(bang, ...)$/;"	f
do_unmapping	autoload/plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	autoload/plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
do_vim_enter	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:do_vim_enter()$/;"	f
doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
doinit	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/LanguageClient.vim	/^function! s:doinit() abort$/;"	f
doinit	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/coc.vim	/^function! s:doinit() abort$/;"	f
doinit	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/nvim_lsp.vim	/^function! s:doinit() abort$/;"	f
dollar_add	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
done	autoload/plugged/vim-autoformat/samples/python.py	/^    done=0     $/;"	v	class:AppArray
dopopd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
dos_shell	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dos_shell()$/;"	f
dosurround	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dot	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:dot()$/;"	f
doubleClickDuration	autoload/plugged/fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c
download	autoload/plugged/fzf/install	/^download() {$/;"	f
dp	autoload/plugged/vim-autoformat/samples/fortran.f90	/^   integer,   parameter :: dp /;"	v	module:prettify_selftest
drand48_data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^struct drand48_data$/;"	s
drawBorder	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorder() {$/;"	f
drawBorder	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) drawBorder() {$/;"	f
drawBorderAround	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderAround() {$/;"	f
drawBorderHorizontal	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderHorizontal() {$/;"	f
draw_border	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:draw_border(title, width, height) abort$/;"	f
draw_box	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:draw_box(lines) abort$/;"	f
ds	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dupeTheme	autoload/plugged/fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f
e	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:l.var
echo	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def echo (self, color, text, stderr = False):$/;"	m	class:PrettyText
echo	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! s:echo(group, msg) abort$/;"	f
echo_prompt	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:echo_prompt() abort$/;"	f
echo_signature	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:echo_signature(parts)$/;"	f
echo_to_hierarchy	autoload/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
echon	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! s:echon(group, msg) abort$/;"	f
edit	autoload/plugged/tagalong.vim/spec/support/vim.rb	/^    def edit(keys)$/;"	f	class:Support.Vim
editor-address	autoload/plugged/bracey.vim/server/test/server.js	/^	'editor-address': '127.0.0.1'$/;"	p	class:serverSettings
element	autoload/plugged/bracey.vim/server/htmlfile.js	/^		'element': parent,$/;"	p	class:diffParsedHtml.selfDiff
elementBox	autoload/plugged/bracey.vim/server/frontend.js	/^	var elementBox = function(element){$/;"	f
ellipsis	autoload/plugged/fzf/src/terminal.go	/^const ellipsis string = ".."$/;"	c
emit	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def emit(self, record):$/;"	m	class:NeoVimLoggerHandler
emmet#anchorizeURL	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#expandAbbr	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageEncode	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageEncode() abort$/;"	f
emmet#imageSize	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageEncode() abort$/;"	f
emmet#lang#css#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#mergeLines() abort$/;"	f
emmet#lang#css#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#elm#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#balanceTag(flag) range abort$/;"	f
emmet#lang#elm#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#findTokens(str) abort$/;"	f
emmet#lang#elm#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#imageEncode() abort$/;"	f
emmet#lang#elm#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#mergeLines() abort$/;"	f
emmet#lang#elm#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#moveNextPrev(flag) abort$/;"	f
emmet#lang#elm#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#elm#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#elm#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseTag(tag) abort$/;"	f
emmet#lang#elm#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#removeTag() abort$/;"	f
emmet#lang#elm#renderNode	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderNode(node)$/;"	f
emmet#lang#elm#renderParam	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderParam(param)$/;"	f
emmet#lang#elm#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#splitJoinTag() abort$/;"	f
emmet#lang#elm#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#elm#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toggleComment() abort$/;"	f
emmet#lang#exists	autoload/plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#getExtends	autoload/plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#getExtends(type) abort$/;"	f
emmet#lang#haml#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageEncode() abort$/;"	f
emmet#lang#haml#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#mergeLines() abort$/;"	f
emmet#lang#haml#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageEncode() abort$/;"	f
emmet#lang#html#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#mergeLines() abort$/;"	f
emmet#lang#html#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageEncode() abort$/;"	f
emmet#lang#jade#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#mergeLines() abort$/;"	f
emmet#lang#jade#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageEncode() abort$/;"	f
emmet#lang#less#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#mergeLines() abort$/;"	f
emmet#lang#less#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageEncode() abort$/;"	f
emmet#lang#sass#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#mergeLines() abort$/;"	f
emmet#lang#sass#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageEncode() abort$/;"	f
emmet#lang#scss#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#mergeLines() abort$/;"	f
emmet#lang#scss#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#findTokens	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageEncode	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageEncode() abort$/;"	f
emmet#lang#slim#imageSize	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#mergeLines	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#mergeLines() abort$/;"	f
emmet#lang#slim#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	autoload/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#type	autoload/plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#type(type) abort$/;"	f
emmet#lorem#en#expand	autoload/plugged/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	autoload/plugged/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() abort$/;"	f
emmet#mergeLines	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageEncodeDecode	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageEncodeDecode(fn, flag) abort$/;"	f
emmet#util#imageSizeWithImageMagick	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	autoload/plugged/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
emptyLine	autoload/plugged/fzf/src/terminal.go	/^var emptyLine = itemLine{}$/;"	v
enableLiveUpdate	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:enableLiveUpdate() abort$/;"	f
enable_staging_from_hunk_preview_window	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:enable_staging_from_hunk_preview_window()$/;"	f
enc_to_cp	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:enc_to_cp(str)$/;"	f
end	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def end(self):$/;"	m	class:TextObject
end	autoload/plugged/vim-floaterm/bin/floaterm.cmd	/^:end$/;"	l
end_ptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int32_t *end_ptr;		\/* Pointer behind state table.  *\/$/;"	m	struct:random_data
endif	autoload/plugged/vim-autoformat/samples/fortran.f90	/^integer :: endif$/;"	v	program:example_prog
ensure	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
equals	autoload/plugged/fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f
err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
err	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:err(msg)$/;"	f
errcnt	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t errcnt;	\/* calibration errors (ro) *\/$/;"	m	struct:timex
errmsg	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:errmsg(msg)$/;"	f
errno	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@errno.h	38;"	d
error	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def error (self, text):$/;"	m	class:PrettyText
error	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
error	autoload/plugged/vim-bbye/plugin/bbye.vim	/^function! s:error(msg)$/;"	f
errorExit	autoload/plugged/fzf/src/options.go	/^func errorExit(msg string) {$/;"	f
errorExit	autoload/plugged/fzf/src/tui/tui.go	/^func errorExit(message string) {$/;"	f
errorIndicator	autoload/plugged/bracey.vim/server/frontend.js	/^	var errorIndicator = undefined;$/;"	v
errorPage	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.errorPage = {$/;"	m	class:FileManager
error_msg	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^function! s:error_msg(msg) abort$/;"	f
error_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@error_t.h	/^typedef int error_t;$/;"	t
esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
escPollInterval	autoload/plugged/fzf/src/tui/light.go	/^	escPollInterval = 5$/;"	c
escSequence	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) escSequence(sz *int) Event {$/;"	f
escape	autoload/plugged/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
escape	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
escape	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
escape	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def escape(inp):$/;"	f
escape	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:escape(mapping) abort " {{{$/;"	f
escape_keys	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:escape_keys(inp) abort " {{{$/;"	f
escapedColon	autoload/plugged/fzf/src/options.go	/^	escapedColon = 0$/;"	c
escapedComma	autoload/plugged/fzf/src/options.go	/^	escapedComma = 1$/;"	c
escapedPlus	autoload/plugged/fzf/src/options.go	/^	escapedPlus  = 2$/;"	c
escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
esterror	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t esterror;	\/* estimated error (usec) *\/$/;"	m	struct:timex
eunuch	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^augroup eunuch$/;"	a
eval	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
eval	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def eval(text):$/;"	f
evaluateScrollOffset	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) evaluateScrollOffset(list []*Item, height int) int {$/;"	f
evaluate_opts	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:evaluate_opts(options)$/;"	f
evaluate_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
example	autoload/plugged/vista.vim/test/data/175.cpp	/^namespace example {$/;"	n	file:
example_prog	autoload/plugged/vim-autoformat/samples/fortran.f90	/^program example_prog$/;"	p
exception	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception.h	/^  class exception$/;"	c	namespace:std
exception_ignore	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def exception_ignore(ignore_rules_origin):$/;"	f
exception_ptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^    class exception_ptr$/;"	c	namespace:std::__exception_ptr
excmds	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
exec	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:exec(cmd) abort$/;"	f
exec_separator	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
exec_silent	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:exec_silent(cmd) abort$/;"	f
executable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
execute	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def execute (self, opts):$/;"	m	class:TaskManager
execute	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:execute(cmd)$/;"	f
execute	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:execute(dict, command, use_height, temps) abort$/;"	f
execute	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:execute(cmd) abort$/;"	f
executeCommand	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, forcePlus bool, background bool) {$/;"	f
executeRegexp	autoload/plugged/fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v
execute_native_fallback	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:execute_native_fallback() abort$/;"	f
execute_preserving_scroll	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:execute_preserving_scroll(command)$/;"	f
execute_term	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
execute_tmux	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
exists_file	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
exit	autoload/plugged/vim-autoformat/samples/python.py	/^    def exit(self):     $/;"	m	class:AppArray
exitCancel	autoload/plugged/fzf/src/constants.go	/^	exitCancel    = -1$/;"	c
exitError	autoload/plugged/fzf/src/constants.go	/^	exitError     = 2$/;"	c
exitIfLast	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:exitIfLast() abort$/;"	f
exitInterrupt	autoload/plugged/fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c
exitNoMatch	autoload/plugged/fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c
exitOk	autoload/plugged/fzf/src/constants.go	/^	exitOk        = 0$/;"	c
exit_handler	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
exit_status	autoload/plugged/fzf/plugin/fzf.vim	/^  let exit_status = v:shell_error$/;"	v
expand	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand	autoload/plugged/vim-floaterm/autoload/floaterm/cmdline.vim	/^function! s:expand(cmd) abort$/;"	f
expand_anon	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_macros	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:expand_macros()$/;"	f
expand_or_jump	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expect	autoload/plugged/bracey.vim/server/test/cssfile.js	/^var expect = require('chai').expect;$/;"	v
expect	autoload/plugged/bracey.vim/server/test/files.js	/^var expect = require('chai').expect;$/;"	v
expect	autoload/plugged/bracey.vim/server/test/htmlfile.js	/^var expect = require('chai').expect;$/;"	v
expect	autoload/plugged/bracey.vim/server/test/server.js	/^var expect = require('chai').expect;$/;"	v
expected	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [{'lnum': 1, 'name': 'GitGutterLineRemovedFirstLine'}]$/;"	v
expected	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [{'lnum': 2, 'name': 'GitGutterLineRemoved'}]$/;"	v
expected_error	autoload/plugged/ultisnips/test/test_Choices.py	/^    expected_error = "Choices selection is not supported on \\$0"$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
expected_error	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "changes are untrackable"$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "line under the cursor was modified"$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	autoload/plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ""$/;"	v	class:VimTestCase
expected_python_version	autoload/plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = ($/;"	v	class:VimTestCase
expf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1846;"	d
expl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1851;"	d
ext.add_inactive_statusline_func	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
extend	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
extend_opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
extendedMatch	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, *[]int) {$/;"	f
extractColor	autoload/plugged/fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]ansiOffset, *ansiState) {$/;"	f
extract_list	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def extract_list (self, text):$/;"	m	class:configure
extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
extractafter	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
f 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^				f = function()$/;"	f
fabsf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1856;"	d
fabsl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1861;"	d
fail	autoload/plugged/fzf/bin/fzf-tmux	/^fail() {$/;"	f
far#CheckFarWindowsToResizeHandler	autoload/plugged/far.vim/autoload/far.vim	/^function! far#CheckFarWindowsToResizeHandler(timer) abort$/;"	f
far#FarArgsComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FarArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarFileMaskComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FarFileMaskComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarReplaceComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FarReplaceComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarSearchComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FarSearchComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FardoComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FardoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarundoComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FarundoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindArgsComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FindArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#FindComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#ModePromptComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#ModePromptComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#RefarComplete	autoload/plugged/far.vim/autoload/far.vim	/^function! far#RefarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#apply_default_mappings	autoload/plugged/far.vim/autoload/far.vim	/^function! far#apply_default_mappings() abort "{{{$/;"	f
far#change_collapse_all	autoload/plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_all(cmode) abort "{{{$/;"	f
far#change_collapse_under_cursor	autoload/plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_under_cursor(cmode) abort "{{{$/;"	f
far#change_collapse_under_selection	autoload/plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_under_selection(cmode) abort range "{{{$/;"	f
far#change_exclude_all	autoload/plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_all(cmode) abort "{{{$/;"	f
far#change_exclude_under_cursor	autoload/plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_under_cursor(cmode) abort "{{{$/;"	f
far#change_exclude_under_selection	autoload/plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_under_selection(cmode) abort range "{{{$/;"	f
far#close_far_buff	autoload/plugged/far.vim/autoload/far.vim	/^function! far#close_far_buff() abort range "{{{$/;"	f
far#close_preview_window	autoload/plugged/far.vim/autoload/far.vim	/^function! far#close_preview_window() abort "{{{$/;"	f
far#executors#basic#execute	autoload/plugged/far.vim/autoload/far/executors/basic.vim	/^function! far#executors#basic#execute(exec_ctx, callback) abort$/;"	f
far#executors#nvim#callback	autoload/plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#callback(result, ctx_idx) abort$/;"	f
far#executors#nvim#execute	autoload/plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#execute(exec_ctx, callback) abort$/;"	f
far#executors#py3#execute	autoload/plugged/far.vim/autoload/far/executors/py3.vim	/^function! far#executors#py3#execute(exec_ctx, callback) abort$/;"	f
far#find	autoload/plugged/far.vim/autoload/far.vim	/^function! far#find(far_params, xargs) "{{{$/;"	f
far#jump_buffer_under_cursor	autoload/plugged/far.vim/autoload/far.vim	/^function! far#jump_buffer_under_cursor() abort "{{{$/;"	f
far#mode_prompt_close	autoload/plugged/far.vim/autoload/far.vim	/^function! far#mode_prompt_close() abort "{{{$/;"	f
far#mode_prompt_get_item	autoload/plugged/far.vim/autoload/far.vim	/^function! far#mode_prompt_get_item(item_name, default_item, complete_list) abort "{{{$/;"	f
far#mode_prompt_open	autoload/plugged/far.vim/autoload/far.vim	/^function! far#mode_prompt_open() abort "{{{$/;"	f
far#refind	autoload/plugged/far.vim/autoload/far.vim	/^function! far#refind(range, xargs) abort "{{{$/;"	f
far#replace	autoload/plugged/far.vim/autoload/far.vim	/^function! far#replace(xargs) abort "{{{$/;"	f
far#rpc#invoke	autoload/plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#invoke(imports, evalstr) abort "{{{$/;"	f
far#rpc#nvim_invoke	autoload/plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#nvim_invoke(execlist) abort "{{{$/;"	f
far#scroll_preview_window	autoload/plugged/far.vim/autoload/far.vim	/^function! far#scroll_preview_window(steps) abort "{{{$/;"	f
far#set_mappings	autoload/plugged/far.vim/autoload/far.vim	/^function! far#set_mappings(map, act_func_ref) abort "{{{$/;"	f
far#show_preview_window_under_cursor	autoload/plugged/far.vim/autoload/far.vim	/^function! far#show_preview_window_under_cursor() abort "{{{$/;"	f
far#sources#qf#search	autoload/plugged/far.vim/autoload/far/sources/qf.vim	/^function! far#sources#qf#search(ctx, fargs, cmdargs) abort "{{{$/;"	f
far#tools#centrify_text	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#centrify_text(text, width, val_col) abort "{{{$/;"	f
far#tools#cut_text_middle	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#cut_text_middle(text, width) abort "{{{$/;"	f
far#tools#echo_err	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_err(msg) abort "{{{$/;"	f
far#tools#echo_msg	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_msg(msg) abort "{{{$/;"	f
far#tools#echo_warn	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_warn(msg) abort "{{{$/;"	f
far#tools#ftlookup	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#ftlookup(ext) abort "{{{$/;"	f
far#tools#isdebug	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#isdebug()$/;"	f
far#tools#log	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#log(msg)$/;"	f
far#tools#matchcnt	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#matchcnt(pat, exp) abort "{{{$/;"	f
far#tools#replace	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#replace(text, str, repl) "{{{$/;"	f
far#tools#setdefault	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#setdefault(var, val) abort "{{{$/;"	f
far#tools#split_layout	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#split_layout(smode, bname, width, height) abort "{{{$/;"	f
far#tools#splitcmd	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#splitcmd(cmdline) "{{{$/;"	f
far#tools#undo_nextnr	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#undo_nextnr() "{{{$/;"	f
far#tools#visualtext	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#visualtext(...) "{{{$/;"	f
far#tools#win_layout	autoload/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#win_layout(win_params, param_prefix, fname) abort "{{{$/;"	f
far#undo	autoload/plugged/far.vim/autoload/far.vim	/^function! far#undo(xargs) abort "{{{$/;"	f
far_glob	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def far_glob(root, rules, ignore_rules):$/;"	f
faraugroup	autoload/plugged/far.vim/autoload/far.vim	/^augroup faraugroup "{{{$/;"	a
farpy_path	autoload/plugged/far.vim/autoload/far/rpc.vim	/^let farpy_path = escape(fnamemodify(expand('<sfile>'), ':p:h:h:h'), ' \\').'\/rplugin\/python3'$/;"	v
fcall	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:fcall(fn, path, ...) abort$/;"	f
fd	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) fd() int {$/;"	f
fd_mask	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	/^typedef __fd_mask fd_mask;$/;"	t
fd_set	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	/^  } fd_set;$/;"	t	typeref:struct:__anon48
fds_bits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	/^    __fd_mask fds_bits[__FD_SETSIZE \/ __NFDBITS];$/;"	m	struct:__anon48
feed	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f
feedkeys	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def feedkeys(keys, mode="n"):$/;"	f
fff_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/fff.vim	/^function! s:fff_callback(...) abort$/;"	f
ffn	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:ffn(fn, path) abort$/;"	f
fgetpos	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	744;"	d
file_options	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
file_source	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
file_split_prefix	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
filemanager	autoload/plugged/bracey.vim/server/server.js	/^var filemanager = require(".\/filemanager.js");$/;"	v
filename	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
files	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchContext
files	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_CursorIsZeroBased
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ExpandOnTrue
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_PriorityKeyword
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportError
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SimpleSnippet
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SnippetPriority
files	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_UseContext
files	autoload/plugged/ultisnips/test/test_Format.py	/^    files = {$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearAll
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearOne
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearTwo
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Local_Python
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine1
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MissingEndSnippet
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_NoContainer
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_Quotes
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippet
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktrace
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_SimpleSnippet
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_UnknownDirective
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord
files	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord_RE
files	autoload/plugged/ultisnips/test/test_Recursive.py	/^    files = {$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Disabled
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_EmptyLinesContinueSnippets
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Extends
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Interpolation
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_InterpolationWithSystem
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue658
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_MultiMatches
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_NoNestedTabstops
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OtherFiletype
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippet
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetSubDirectory
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrors
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstops
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
files	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Visual_Simple
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanModifyParentBody
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_EnsureIndent
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveVisual
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesBuffer
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PreActionModifiesBuffer
files	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_UseCorrectJumpActions
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	autoload/plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
files	autoload/plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
files	autoload/plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetypes	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) fill(str string, onMove func()) FillReturn {$/;"	f
fill	autoload/plugged/fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, n ColorPair, r rune) {$/;"	f
fill	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:fill(cmd)$/;"	f
fillString	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) fillString(text string, pair ColorPair, a Attr) FillReturn {$/;"	f
fill_in_whitespace	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
fill_quickfix	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
filter_oldfiles	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles(path_prefix, path_format, use_env) abort$/;"	f
filter_oldfiles_unsafe	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles_unsafe(path_prefix, path_format, use_env) abort$/;"	f
fin	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) fin(success bool) {$/;"	f
finalize	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
findAndRevealPath	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
findAnsiStart	autoload/plugged/fzf/src/ansi.go	/^func findAnsiStart(str string) int {$/;"	f
findFirstMatch	autoload/plugged/fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f
findHunk	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:findHunk(node, direction) abort$/;"	f
findLastMatch	autoload/plugged/fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f
findOffset	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f
findOffset	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f
find_all_snippet_directories	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_directories():$/;"	f
find_all_snippet_files	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft):$/;"	f
find_current_signs	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
find_dotgit	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! s:find_dotgit(from) abort$/;"	f
find_formatters	autoload/plugged/vim-autoformat/plugin/autoformat.vim	/^function! s:find_formatters(...)$/;"	f
find_matches	autoload/plugged/far.vim/autoload/far.vim	/^function! s:find_matches(items, key) abort$/;"	f
find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
find_open_window	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
find_parent_for_new_to	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_root	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:find_root(path, markers, strict)$/;"	f
find_root	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def find_root (self, path, markers = None, fallback = False):$/;"	m	class:configure
find_root	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:find_root(name, markers, strict)$/;"	f
find_root	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^function! s:find_root(path, markers, strict) abort$/;"	f
find_snippet_files	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory):$/;"	f
findatoffset	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:findatoffset(string,pattern,offset)$/;"	f
findinline	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:findinline(pattern)$/;"	f
finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
finite	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1866;"	d
finitef	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1871;"	d
finitel	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1876;"	d
firstKey	autoload/plugged/fzf/src/options.go	/^func firstKey(keymap map[int]string) int {$/;"	f
first_line	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
first_str	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:first_str(o)$/;"	f
fish	autoload/plugged/fzf/test/test_go.rb	/^    def fish$/;"	f
fix_file_references	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
fixindent	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flatten	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:flatten(dict, str) abort$/;"	f
flatten_test_suite	autoload/plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f	function:setup_other_plugins
floaterm#buffer#create	autoload/plugged/vim-floaterm/autoload/floaterm/buffer.vim	/^function! floaterm#buffer#create(linelist, opts) abort$/;"	f
floaterm#buffer#update_opts	autoload/plugged/vim-floaterm/autoload/floaterm/buffer.vim	/^function! floaterm#buffer#update_opts(bufnr, opts) abort$/;"	f
floaterm#buflist#add	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#add(bufnr) abort$/;"	f
floaterm#buflist#curr	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#curr() abort$/;"	f
floaterm#buflist#first	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#first() abort$/;"	f
floaterm#buflist#gather	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#gather() abort$/;"	f
floaterm#buflist#info	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#info() abort$/;"	f
floaterm#buflist#last	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#last() abort$/;"	f
floaterm#buflist#next	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#next() abort$/;"	f
floaterm#buflist#prev	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#prev() abort$/;"	f
floaterm#buflist#test	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! floaterm#buflist#test() abort$/;"	f
floaterm#cmdline#complete	autoload/plugged/vim-floaterm/autoload/floaterm/cmdline.vim	/^function! floaterm#cmdline#complete(arg_lead, cmd_line, cursor_pos) abort$/;"	f
floaterm#cmdline#floaterm_names	autoload/plugged/vim-floaterm/autoload/floaterm/cmdline.vim	/^function! floaterm#cmdline#floaterm_names(...) abort$/;"	f
floaterm#cmdline#floaterm_names2	autoload/plugged/vim-floaterm/autoload/floaterm/cmdline.vim	/^function! floaterm#cmdline#floaterm_names2(arg_lead, cmd_line, cursor_pos) abort$/;"	f
floaterm#cmdline#parse	autoload/plugged/vim-floaterm/autoload/floaterm/cmdline.vim	/^function! floaterm#cmdline#parse(arglist) abort$/;"	f
floaterm#curr	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#curr() abort$/;"	f
floaterm#first	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#first() abort$/;"	f
floaterm#hide	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#hide(bang, bufnr, name) abort$/;"	f
floaterm#kill	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#kill(bang, bufnr, name) abort$/;"	f
floaterm#last	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#last() abort$/;"	f
floaterm#new	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#new(bang, cmd, jobopts, opts) abort$/;"	f
floaterm#next	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#next()  abort$/;"	f
floaterm#path#chdir	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^function! floaterm#path#chdir(path) abort$/;"	f
floaterm#path#get_root	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^function! floaterm#path#get_root() abort$/;"	f
floaterm#prev	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#prev()  abort$/;"	f
floaterm#run	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#run(action, bang, ...) abort$/;"	f
floaterm#send	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#send(bang, mode, range, line1, line2, argstr) abort$/;"	f
floaterm#show	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#show(bang, bufnr, name) abort$/;"	f
floaterm#terminal#get_bufnr	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^function! floaterm#terminal#get_bufnr(termname) abort$/;"	f
floaterm#terminal#kill	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^function! floaterm#terminal#kill(bufnr) abort$/;"	f
floaterm#terminal#open	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^function! floaterm#terminal#open(bufnr, cmd, jobopts, opts) abort$/;"	f
floaterm#terminal#open_existing	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^function! floaterm#terminal#open_existing(bufnr) abort$/;"	f
floaterm#terminal#send	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^function! floaterm#terminal#send(bufnr, cmds) abort$/;"	f
floaterm#toggle	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#toggle(bang, bufnr, name)  abort$/;"	f
floaterm#update	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! floaterm#update(opts) abort$/;"	f
floaterm#util#autohide	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! floaterm#util#autohide() abort$/;"	f
floaterm#util#edit	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! floaterm#util#edit(_bufnr, filename) abort$/;"	f
floaterm#util#show_msg	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! floaterm#util#show_msg(message, ...) abort$/;"	f
floaterm#util#startinsert	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! floaterm#util#startinsert() abort$/;"	f
floaterm#util#string_compose	autoload/plugged/vim-floaterm/autoload/floaterm/util.vim	/^function! floaterm#util#string_compose(target, pos, source)$/;"	f
floaterm#window#find_floaterm_window	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#find_floaterm_window() abort$/;"	f
floaterm#window#hide_floaterm	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#hide_floaterm(bufnr) abort$/;"	f
floaterm#window#hide_floaterm_border	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#hide_floaterm_border(bufnr, ...) abort$/;"	f
floaterm#window#open	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#open(bufnr, opts) abort$/;"	f
floaterm#window#open_floating	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#open_floating(bufnr, width, height, pos, title) abort$/;"	f
floaterm#window#open_popup	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#open_popup(bufnr, width, height, pos, title) abort$/;"	f
floaterm#window#open_split	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! floaterm#window#open_split(bufnr, height, width, pos) abort$/;"	f
floaterm#wrapper#fff#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/fff.vim	/^function! floaterm#wrapper#fff#(cmd) abort$/;"	f
floaterm#wrapper#fzf#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/fzf.vim	/^function! floaterm#wrapper#fzf#(cmd) abort$/;"	f
floaterm#wrapper#lf#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/lf.vim	/^function! floaterm#wrapper#lf#(cmd) abort$/;"	f
floaterm#wrapper#nnn#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/nnn.vim	/^function! floaterm#wrapper#nnn#(cmd) abort$/;"	f
floaterm#wrapper#ranger#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/ranger.vim	/^function! floaterm#wrapper#ranger#(cmd) abort$/;"	f
floaterm#wrapper#rg#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/rg.vim	/^function! floaterm#wrapper#rg#(cmd) abort$/;"	f
floaterm#wrapper#vifm#	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/vifm.vim	/^function! floaterm#wrapper#vifm#(cmd) abort$/;"	f
floaterm.on_move	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^function! s:floaterm.on_move() abort$/;"	f
floaterm.sink	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^function! s:floaterm.sink(curline) abort$/;"	f
floaterm.source	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^function! s:floaterm.source() abort$/;"	f
floaterm_enter_insertmode	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^augroup floaterm_enter_insertmode$/;"	a
floating_win_col_offset	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:floating_win_col_offset() abort$/;"	f
floatwin_pos	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:floatwin_pos(width, height, pos) abort$/;"	f
floorf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1881;"	d
floorl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1886;"	d
flush	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) flush() {$/;"	f
fmodf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1891;"	d
fmodl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1896;"	d
fn	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
fn	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
fname	autoload/plugged/vim-startify/autoload/startify.vim	/^      let fname = substitute(fname, '\\[', '\\[[]', 'g')$/;"	v
fname	autoload/plugged/vim-startify/autoload/startify.vim	/^    let fname = fnamemodify(sfiles[i], ':t')$/;"	v
fname_prefix	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
fnameescape	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:fnameescape(string) abort$/;"	f
fnameescape	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
focus	autoload/plugged/fzf/test/test_go.rb	/^  def focus$/;"	f	class:Tmux
focus	autoload/plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
folded	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:folded()$/;"	f
foldmarker	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
foo	autoload/plugged/vista.vim/test/data/175.cpp	/^		int foo;$/;"	m	struct:example::__anon5	file:
fopen	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	265;"	d
format_cmd	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
format_excmd	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
format_for_log	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
format_gist	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:format_gist(gist) abort$/;"	f
format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_mark	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
format_name	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_win	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
format_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
format_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
formattz	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:formattz(offset)$/;"	f
fpclass	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1901;"	d
fpos64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __fpos64_t fpos64_t;$/;"	t
fpos_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __fpos64_t fpos_t;$/;"	t
fpos_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __fpos_t fpos_t;$/;"	t
fptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int32_t *fptr;		\/* Front pointer.  *\/$/;"	m	struct:random_data
frac_digits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char frac_digits;		\/* Local fractional digits.  *\/$/;"	m	struct:lconv
freeElemIndex	autoload/plugged/bracey.vim/server/htmlfile.js	/^function freeElemIndex(index){$/;"	f
freopen	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	266;"	d
freq	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t freq;	\/* frequency offset (scaled ppm) *\/$/;"	m	struct:timex
frexpf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1906;"	d
frexpl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1911;"	d
friendly_name	autoload/plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
friendly_name	autoload/plugged/vim-rooter/test/runner.vim	/^  let friendly_name = substitute(test[5:-3], '_', ' ', 'g')$/;"	v
fs	autoload/plugged/bracey.vim/server/filemanager.js	/^var fs = require("fs");$/;"	v
fs	autoload/plugged/bracey.vim/server/launch.js	/^var fs = require('fs');$/;"	v
fs	autoload/plugged/bracey.vim/server/server.js	/^var fs = require("fs");$/;"	v
fs	autoload/plugged/bracey.vim/server/test/cssfile.js	/^var fs = require('fs');$/;"	v
fs	autoload/plugged/bracey.vim/server/test/htmlfile.js	/^var fs = require("fs");$/;"	v
fs	autoload/plugged/bracey.vim/server/test/server.js	/^var fs = require('fs');$/;"	v
fsblkcnt64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsblkcnt64_t fsblkcnt64_t; \/* Type to count file system blocks.  *\/$/;"	t
fsblkcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsblkcnt64_t fsblkcnt_t; \/* Type to count file system blocks.  *\/$/;"	t
fsblkcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsblkcnt_t fsblkcnt_t; \/* Type to count file system blocks.  *\/$/;"	t
fscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	421;"	d
fseeko	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	720;"	d
fsetpos	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	745;"	d
fsfilcnt64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsfilcnt64_t fsfilcnt64_t; \/* Type to count file system inodes.  *\/$/;"	t
fsfilcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsfilcnt64_t fsfilcnt_t; \/* Type to count file system inodes.  *\/$/;"	t
fsfilcnt_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsfilcnt_t fsfilcnt_t; \/* Type to count file system inodes.  *\/$/;"	t
fsid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __fsid_t fsid_t;$/;"	t
ft	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
ft	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
ft_hook	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! s:ft_hook() abort$/;"	f
ftello	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	721;"	d
fugitive	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#BlameComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameSyntax	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#BufReadCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#CommonDir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#Cwindow	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#DiffClose	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, args) abort$/;"	f
fugitive#EditComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Expand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FetchComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GitVersion	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#Object	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, args) abort$/;"	f
fugitive#PagerFor	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#Prepare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvArgv	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvArgv(...) abort$/;"	f
fugitive#PullComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#ReadComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#Resume	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#SourceCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#StatusCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#WqCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#buffer	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive_blame	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_job	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
fullname	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let fullname = asyncrun#fullname(a:path)$/;"	v
fullname	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^  let fullname = s:fullname(a:path)$/;"	v
fullname	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^function! s:fullname(f) abort$/;"	f
funcs.buf_add_highlight	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_add_highlight(bufnr, srcId, hlGroup, line, colStart, colEnd) abort$/;"	f
funcs.buf_attach	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_attach(...)$/;"	f
funcs.buf_clear_namespace	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_clear_namespace(bufnr, srcId, startLine, endLine) abort$/;"	f
funcs.buf_del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_var(bufnr, name)$/;"	f
funcs.buf_detach	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_detach()$/;"	f
funcs.buf_get_changedtick	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_changedtick(bufnr)$/;"	f
funcs.buf_get_lines	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_lines(bufnr, start, end, strict) abort$/;"	f
funcs.buf_get_mark	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_mark(bufnr, name)$/;"	f
funcs.buf_get_name	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_name(bufnr)$/;"	f
funcs.buf_get_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_option(bufnr, name)$/;"	f
funcs.buf_get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_var(bufnr, name)$/;"	f
funcs.buf_is_valid	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_valid(bufnr)$/;"	f
funcs.buf_line_count	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_line_count(bufnr) abort$/;"	f
funcs.buf_set_lines	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_lines(bufnr, start, end, strict, ...) abort$/;"	f
funcs.buf_set_name	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_name(bufnr, name) abort$/;"	f
funcs.buf_set_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_option(bufnr, name, val)$/;"	f
funcs.buf_set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_var(bufnr, name, val)$/;"	f
funcs.call_atomic	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_atomic(calls)$/;"	f
funcs.call_dict_function	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_dict_function(dict, method, args) abort$/;"	f
funcs.call_function	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_function(method, args) abort$/;"	f
funcs.command	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command(command) abort$/;"	f
funcs.command_output	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command_output(cmd)$/;"	f
funcs.create_namespace	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.create_namespace(name) abort$/;"	f
funcs.del_current_line	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_current_line(line)$/;"	f
funcs.del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_var(name) abort$/;"	f
funcs.err_write	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_write(str)$/;"	f
funcs.err_writeln	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_writeln(str)$/;"	f
funcs.eval	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.eval(expr) abort$/;"	f
funcs.feedkeys	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.feedkeys(keys, mode, escape_csi)$/;"	f
funcs.get_api_info	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_api_info()$/;"	f
funcs.get_current_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_buf()$/;"	f
funcs.get_current_line	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_line()$/;"	f
funcs.get_current_tabpage	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_tabpage()$/;"	f
funcs.get_current_win	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_win()$/;"	f
funcs.get_mode	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_mode()$/;"	f
funcs.get_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_option(name)$/;"	f
funcs.get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_var(var)$/;"	f
funcs.get_vvar	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_vvar(var)$/;"	f
funcs.list_bufs	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_bufs()$/;"	f
funcs.list_runtime_paths	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_runtime_paths()$/;"	f
funcs.list_tabpages	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_tabpages()$/;"	f
funcs.list_wins	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_wins() abort$/;"	f
funcs.out_write	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.out_write(str)$/;"	f
funcs.set_client_info	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_client_info(...) abort$/;"	f
funcs.set_current_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_buf(bufnr) abort$/;"	f
funcs.set_current_dir	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_dir(dir) abort$/;"	f
funcs.set_current_line	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_line(line)$/;"	f
funcs.set_current_tabpage	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_tabpage(tabnr) abort$/;"	f
funcs.set_current_win	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_win(win_id) abort$/;"	f
funcs.set_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_option(name, value) abort$/;"	f
funcs.set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_var(name, value) abort$/;"	f
funcs.strwidth	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.strwidth(str)$/;"	f
funcs.subscribe	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.subscribe(...) abort$/;"	f
funcs.tabpage_del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_del_var(tabnr, name)$/;"	f
funcs.tabpage_get_number	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_number(id)$/;"	f
funcs.tabpage_get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_var(tabnr, name)$/;"	f
funcs.tabpage_get_win	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_win(tabnr)$/;"	f
funcs.tabpage_is_valid	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_is_valid(tabnr)$/;"	f
funcs.tabpage_list_wins	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_list_wins(tabnr)$/;"	f
funcs.tabpage_set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_set_var(tabnr, name, value)$/;"	f
funcs.unsubscribe	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.unsubscribe(...) abort$/;"	f
funcs.win_close	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_close(win_id, ...) abort$/;"	f
funcs.win_del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_del_var(win_id, name) abort$/;"	f
funcs.win_get_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_buf(winid)$/;"	f
funcs.win_get_cursor	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_cursor(win_id) abort$/;"	f
funcs.win_get_height	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_height(win_id) abort$/;"	f
funcs.win_get_number	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_number(win_id) abort$/;"	f
funcs.win_get_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_option(win_id, name) abort$/;"	f
funcs.win_get_position	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_position(win_id) abort$/;"	f
funcs.win_get_tabpage	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_tabpage(win_id) abort$/;"	f
funcs.win_get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_var(win_id, name) abort$/;"	f
funcs.win_get_width	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_width(win_id) abort$/;"	f
funcs.win_is_valid	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_is_valid(win_id) abort$/;"	f
funcs.win_set_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_buf(win_id, buf_id) abort$/;"	f
funcs.win_set_cursor	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_cursor(win_id, pos) abort$/;"	f
funcs.win_set_height	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_height(win_id, height) abort$/;"	f
funcs.win_set_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_option(win_id, name, value) abort$/;"	f
funcs.win_set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_var(win_id, name, value) abort$/;"	f
funcs.win_set_width	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_width(win_id, width) abort$/;"	f
function	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
function	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
function	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:function(name)$/;"	f
fwscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	658;"	d
fzf	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
fzf	autoload/plugged/fzf/plugin/fzf.vim	/^      let fzf.buf = term_start([&shell, &shellcmdflag, command], term_opts)$/;"	v
fzf	autoload/plugged/fzf/plugin/fzf.vim	/^      let fzf.temps.batchfile = s:fzf_tempname().'.bat'$/;"	v
fzf	autoload/plugged/fzf/src/ansi.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/cache.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/constants.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/core.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/history.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/history_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/item.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/item_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/matcher.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/merger.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/options.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/options_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/pattern.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/reader.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result_others.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result_x86.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf!	autoload/plugged/fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#complete	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#exec	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#exec()$/;"	f
fzf#install	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#install()$/;"	f
fzf#run	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#shellescape	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#shellescape(arg, ...)$/;"	f
fzf#vim#_buflisted_sorted	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#helptags	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf#wrap	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf.on_exit	autoload/plugged/fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code, ...)$/;"	f
fzf_buffers	autoload/plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_call	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:fzf_call(fn, ...)$/;"	f
fzf_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/fzf.vim	/^function! s:fzf_callback(...) abort$/;"	f
fzf_expand	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_expand(fmt)$/;"	f
fzf_fnamemodify	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_fnamemodify(fname, mods)$/;"	f
fzf_getcwd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_getcwd()$/;"	f
fzf_popd	autoload/plugged/fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_restore_colors	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
fzf_sink	plug-config/asynctask.vim	/^function! s:fzf_sink(what)$/;"	f
fzf_task	plug-config/asynctask.vim	/^function! s:fzf_task()$/;"	f
fzf_tempname	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tempname()$/;"	f
fzf_tmux	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
fzf_vim_term	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
g:AutoPairs	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":"'''", "`":"`"}$/;"	v
g:AutoPairsCenterLine	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:Illuminate_ftblacklist	plug-config/illuminate.vim	/^let g:Illuminate_ftblacklist = ['javascript', 'jsx', 'html']$/;"	v
g:LanguageClient_serverCommands	autoload/plugged/vim-lsp-cxx-highlight/sample-configs/LanguageClient-register.vim	/^let g:LanguageClient_serverCommands = {$/;"	v
g:NERDTree	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	autoload/plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOldSortOrder	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	autoload/plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:UltiSnipsEditSplit	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	autoload/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	autoload/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plug-config/ultisnips.vim	/^let g:UltiSnipsExpandTrigger="<leader><tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	autoload/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="1"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plug-config/ultisnips.vim	/^let g:UltiSnipsJumpBackwardTrigger="<ctrl-e>"$/;"	v
g:UltiSnipsJumpForwardTrigger	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	autoload/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="2"$/;"	v
g:UltiSnipsJumpForwardTrigger	plug-config/ultisnips.vim	/^let g:UltiSnipsJumpForwardTrigger="<leader><tab>"$/;"	v
g:UltiSnipsListSnippets	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsListSnippets	autoload/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsListSnippets="9"$/;"	v
g:UltiSnipsMappingsToIgnore	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	autoload/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:UltiSnipsSnippetDirectories	plug-config/ultisnips.vim	/^let g:UltiSnipsSnippetDirectories = [$HOME.'\/.config\/nvim\/Ultisnips\/', 'UltiSnips']$/;"	v
g:WhichKeyFormatFunc	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:WhichKeyFormatFunc = get(g:, 'WhichKeyFormatFunc', function('which_key#format'))$/;"	v
g:airline#extensions#default#layout	autoload/plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#inverted	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted', 0)$/;"	v
g:airline#extensions#localsearch#loaded	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#enabled	autoload/plugged/vim-airline/t/extensions_tabline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	themes/airline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#windowswap#indicator_text	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_commandline, s:airline_b_commandline, s:airline_c_commandline)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inactive, s:airline_b_inactive, s:airline_c_inactive)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal, s:airline_b_normal, s:airline_c_normal)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:airline_b_insert[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual, s:airline_b_visual, s:airline_c_visual)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#gruvbox#palette	autoload/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^let g:airline#themes#gruvbox#palette = {}$/;"	v
g:airline_inactive_collapse	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	autoload/plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	autoload/plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:ale_disable_lsp	plug-config/ale.vim	/^let g:ale_disable_lsp = 1$/;"	v
g:asyncrun_auto	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_auto = get(g:, 'asyncrun_auto', '')$/;"	v
g:asyncrun_bell	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_bell = get(g:, 'asyncrun_bell', 0)$/;"	v
g:asyncrun_code	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_code = get(g:, 'asyncrun_code', '')$/;"	v
g:asyncrun_encs	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_encs = get(g:, 'asyncrun_encs', '')$/;"	v
g:asyncrun_exit	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_exit = get(g:, 'asyncrun_exit', '')$/;"	v
g:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^			let g:asyncrun_gui = 1$/;"	v
g:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_gui = 1$/;"	v
g:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_gui = s:asyncrun_gui$/;"	v
g:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_gui = has('gui_running')$/;"	v
g:asyncrun_hook	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_hook = get(g:, 'asyncrun_hook', '')$/;"	v
g:asyncrun_info	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_info = get(g:, 'asyncrun_info', '')$/;"	v
g:asyncrun_last	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_last = get(g:, 'asyncrun_last', 0)$/;"	v
g:asyncrun_local	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_local = get(g:, 'asyncrun_local', 1)$/;"	v
g:asyncrun_mode	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_mode = get(g:, 'asyncrun_mode', 0)$/;"	v
g:asyncrun_name	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_name = ''$/;"	v
g:asyncrun_open	plug-config/asynctask.vim	/^let g:asyncrun_open = 6$/;"	v
g:asyncrun_program	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_program = get(g:, 'asyncrun_program', {})$/;"	v
g:asyncrun_runner	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_runner = get(g:, 'asyncrun_runner', {})$/;"	v
g:asyncrun_save	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_save = get(g:, 'asyncrun_save', 0)$/;"	v
g:asyncrun_script	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_script = get(g:, 'asyncrun_script', '')$/;"	v
g:asyncrun_shell	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_shell = get(g:, 'asyncrun_shell', '')$/;"	v
g:asyncrun_shellflag	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_shellflag = get(g:, 'asyncrun_shellflag', '')$/;"	v
g:asyncrun_silent	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_silent = get(g:, 'asyncrun_silent', 1)$/;"	v
g:asyncrun_skip	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_skip = get(g:, 'asyncrun_skip', 0)$/;"	v
g:asyncrun_skip	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asyncrun_skip = 1$/;"	v
g:asyncrun_status	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_status = get(g:, 'asyncrun_status', '')$/;"	v
g:asyncrun_stdin	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_stdin = has('win32') || has('win64') || has('win95')$/;"	v
g:asyncrun_stop	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_stop = get(g:, 'asyncrun_stop', '')$/;"	v
g:asyncrun_strict	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_strict = get(g:, 'asyncrun_strict', 0)$/;"	v
g:asyncrun_support	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_support = 0$/;"	v
g:asyncrun_text	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_text = get(g:, 'asyncrun_text', '')$/;"	v
g:asyncrun_timer	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_timer = get(g:, 'asyncrun_timer', 25)$/;"	v
g:asyncrun_timer	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^	let g:asyncrun_timer = 100$/;"	v
g:asyncrun_trim	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_trim = get(g:, 'asyncrun_trim', 0)$/;"	v
g:asyncrun_windows	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_windows = 1$/;"	v
g:asyncrun_windows	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_windows = 0$/;"	v
g:asynctasks_config_name	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_config_name = get(g:, 'asynctasks_config_name', '.tasks')$/;"	v
g:asynctasks_confirm	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_confirm = get(g:, 'asynctasks_confirm', 1)$/;"	v
g:asynctasks_edit_split	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_edit_split = get(g:, 'asynctasks_edit_split', '')$/;"	v
g:asynctasks_environ	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_environ = get(g:, 'asynctasks_environ', {})$/;"	v
g:asynctasks_extra_config	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_extra_config = get(g:, 'asynctasks_extra_config', [])$/;"	v
g:asynctasks_extra_config	plug-config/asynctask.vim	/^let g:asynctasks_extra_config = ['~\/.config\/nvim\/utils\/tasks.ini']$/;"	v
g:asynctasks_feature	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_feature = get(g:, 'asynctasks_feature', {})$/;"	v
g:asynctasks_history	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_history = get(g:, 'asynctasks_history', {})$/;"	v
g:asynctasks_notify	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_notify = get(g:, 'asynctasks_notify', '')$/;"	v
g:asynctasks_profile	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_profile = get(g:, 'asynctasks_profile', 'debug')$/;"	v
g:asynctasks_remember	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_remember = get(g:, 'asynctasks_remember', 0)$/;"	v
g:asynctasks_rtp_config	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_rtp_config = get(g:, 'asynctasks_rtp_config', 'tasks.ini')$/;"	v
g:asynctasks_strict	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_strict = get(g:, 'asynctasks_strict', 1)$/;"	v
g:asynctasks_system	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^	let g:asynctasks_system = (s:windows == 0)? 'linux' : 'win32'$/;"	v
g:asynctasks_tasks	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_tasks = get(g:, 'asynctasks_tasks', {})$/;"	v
g:asynctasks_template	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_template = get(g:, 'asynctasks_template', 1)$/;"	v
g:asynctasks_term_cols	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_cols = get(g:, 'asynctasks_term_cols', '')$/;"	v
g:asynctasks_term_focus	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_focus = get(g:, 'asynctasks_term_focus', 1)$/;"	v
g:asynctasks_term_hidden	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_hidden = get(g:, 'asynctasks_term_hidden', 0)$/;"	v
g:asynctasks_term_listed	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_listed = get(g:, 'asynctasks_term_listed', 1)$/;"	v
g:asynctasks_term_pos	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_pos = get(g:, 'asynctasks_term_pos', 'quickfix')$/;"	v
g:asynctasks_term_pos	plug-config/asynctask.vim	/^let g:asynctasks_term_pos = 'bottom'$/;"	v
g:asynctasks_term_reuse	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_reuse = get(g:, 'asynctasks_term_reuse', 0)$/;"	v
g:asynctasks_term_rows	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_rows = get(g:, 'asynctasks_term_rows', '')$/;"	v
g:asynctasks_term_safe	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let g:asynctasks_term_safe = get(g:, 'asynctasks_term_safe', 0)$/;"	v
g:autoformat_autoindent	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:autoformat_autoindent = 1$/;"	v
g:autoformat_remove_trailing_spaces	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:autoformat_remove_trailing_spaces = 1$/;"	v
g:autoformat_retab	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:autoformat_retab = 1$/;"	v
g:autoformat_verbosemode	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:autoformat_verbosemode = 0$/;"	v
g:autoloaded_fugitive	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:autoloaded_rhubarb	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^let g:autoloaded_rhubarb = 1$/;"	v
g:autoloaded_startify	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:autoloaded_startify = 1$/;"	v
g:autoloaded_undotree	autoload/plugged/undotree/autoload/undotree.vim	/^let g:autoloaded_undotree = 0$/;"	v
g:better_whitespace_enabled	plug-config/better-whitespace.vim	/^let g:better_whitespace_enabled=0$/;"	v
g:bracey_auto_start_browser	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_auto_start_browser = 1$/;"	v
g:bracey_auto_start_server	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_auto_start_server = 1$/;"	v
g:bracey_browser_command	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_browser_command = 0$/;"	v
g:bracey_eval_on_save	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_eval_on_save = 1$/;"	v
g:bracey_refresh_on_save	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_refresh_on_save = 0$/;"	v
g:bracey_server_allow_remote_connections	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_server_allow_remote_connections = 0$/;"	v
g:bracey_server_log	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_server_log = "\/tmp\/bracey_server_logfile"$/;"	v
g:bracey_server_path	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_server_path = "http:\/\/127.0.0.1"$/;"	v
g:bracey_server_port	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let g:bracey_server_port = offset + (getpid() % (port_max-offset))$/;"	v
g:clap#provider#floaterm#	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^let g:clap#provider#floaterm# = s:floaterm$/;"	v
g:closetag_filenames	plug-config/closetags.vim	/^let g:closetag_filenames = '*.html,*.xhtml,*.phtml'$/;"	v
g:closetag_filetypes	plug-config/closetags.vim	/^let g:closetag_filetypes = 'html,xhtml,phtml,javascript'$/;"	v
g:closetag_xhtml_filenames	plug-config/closetags.vim	/^let g:closetag_xhtml_filenames = '*.xhtml,*.jsx,*.js'$/;"	v
g:coc#_context	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc_cygqwin_path_prefixes	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_cygqwin_path_prefixes = get(g:, 'coc_cygqwin_path_prefixes', {})$/;"	v
g:coc_explorer_global_presets	plug-config/coc.vim	/^let g:coc_explorer_global_presets = {$/;"	v
g:coc_global_extensions	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_global_extensions	plug-config/coc.vim	/^let g:coc_global_extensions = ['coc-python',$/;"	v
g:coc_selected_text	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	autoload/plugged/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_snippet_next	plug-config/coc.vim	/^let g:coc_snippet_next = '<c-j>'$/;"	v
g:coc_snippet_prev	plug-config/coc.vim	/^let g:coc_snippet_prev = '<c-k>'$/;"	v
g:coc_user_config	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:coc_vim_commands	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_vim_commands = []$/;"	v
g:coc_workspace_initialized	autoload/plugged/coc.nvim/plugin/coc.vim	/^let g:coc_workspace_initialized = 0$/;"	v
g:codi#aliases	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#aliases = {}$/;"	v
g:codi#aliases	plug-config/codi.vim	/^let g:codi#aliases = {$/;"	v
g:codi#autoclose	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#autoclose = 1$/;"	v
g:codi#autocmd	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#autocmd = ''$/;"	v
g:codi#command_prefix	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#command_prefix = ['env' , 'INPUTRC=\/dev\/null']$/;"	v
g:codi#interpreters	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#interpreters = {}$/;"	v
g:codi#log	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#log = ''$/;"	v
g:codi#raw	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#raw = 0$/;"	v
g:codi#rightalign	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#rightalign = 1$/;"	v
g:codi#rightsplit	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#rightsplit = 1$/;"	v
g:codi#sync	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#sync = 0$/;"	v
g:codi#use_buffer_dir	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#use_buffer_dir = 1$/;"	v
g:codi#virtual_text	autoload/plugged/codi.vim/plugin/codi.vim	/^    let g:codi#virtual_text = 0$/;"	v
g:codi#virtual_text	autoload/plugged/codi.vim/plugin/codi.vim	/^    let g:codi#virtual_text = 1$/;"	v
g:codi#virtual_text_prefix	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#virtual_text_prefix = "❯ "$/;"	v
g:codi#virtual_text_prefix	plug-config/codi.vim	/^let g:codi#virtual_text_prefix = "❯ "$/;"	v
g:codi#width	autoload/plugged/codi.vim/plugin/codi.vim	/^  let g:codi#width = 40$/;"	v
g:colors_name	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table = {}$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table.html = {$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table.vim = {$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table.vue = {$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table.xhtml = g:context#commentstring#table.html$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table['javascript.jsx'] = {$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table['typescript.jsx'] = {$/;"	v
g:context#commentstring#table	autoload/plugged/vim-context-commentstring/autoload/context/commentstring.vim	/^let g:context#commentstring#table['typescript.tsx'] = {$/;"	v
g:count	autoload/plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:cursormode_exit_mode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:did_coc_loaded	autoload/plugged/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:dispatch_compilers	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:dispatch_compilers = {}$/;"	v
g:dispatch_compilers	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:dispatch_compilers['hub'] = 'git'$/;"	v
g:emmet_curl_command	autoload/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	autoload/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	autoload/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	autoload/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:far#enable_undo	plug-config/far.vim	/^let g:far#enable_undo=1$/;"	v
g:far#executors#nvim#context_idx	autoload/plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#context_idx = 0$/;"	v
g:far#executors#nvim#contexts	autoload/plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#contexts = {}$/;"	v
g:far#file_mask_favorites	plug-config/far.vim	/^let g:far#file_mask_favorites=['%:p', '**\/*.*', '**\/*.js', '**\/*.py', '**\/*.java', '**\/*.css', '**\/*.html', '**\/*.vim', '**\/*.cpp', '**\/*.c', '**\/*.h', ]$/;"	v
g:far#file_mask_history	autoload/plugged/far.vim/autoload/far.vim	/^let g:far#file_mask_history = []$/;"	v
g:far#mapping	autoload/plugged/far.vim/autoload/far.vim	/^        let g:far#mapping[key] = get(g:far#mapping, key,$/;"	v
g:far#mapping	autoload/plugged/far.vim/autoload/far.vim	/^    let g:far#mapping = s:default_mapping$/;"	v
g:far#prompt_mapping	autoload/plugged/far.vim/autoload/far.vim	/^        let g:far#prompt_mapping[key] = get(g:far#prompt_mapping, key,$/;"	v
g:far#prompt_mapping	autoload/plugged/far.vim/autoload/far.vim	/^    let g:far#prompt_mapping = s:default_prompt_mapping$/;"	v
g:far#repl_history	autoload/plugged/far.vim/autoload/far.vim	/^let g:far#repl_history = []$/;"	v
g:far#search_history	autoload/plugged/far.vim/autoload/far.vim	/^let g:far#search_history = []$/;"	v
g:far#show_prompt_key	autoload/plugged/far.vim/autoload/far.vim	/^    let g:far#show_prompt_key=1$/;"	v
g:far#source	plug-config/far.vim	/^let g:far#source='rgnvim'$/;"	v
g:far#window_min_content_width	plug-config/far.vim	/^let g:far#window_min_content_width=30$/;"	v
g:far#window_width	plug-config/far.vim	/^let g:far#window_width=50$/;"	v
g:floaterm_autoclose	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_autoclose     = get(g:, 'floaterm_autoclose', 0)$/;"	v
g:floaterm_autoclose	plug-config/floaterm.vim	/^let g:floaterm_autoclose=1$/;"	v
g:floaterm_autohide	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_autohide      = get(g:, 'floaterm_autohide', v:true)$/;"	v
g:floaterm_autoinsert	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_autoinsert    = get(g:, 'floaterm_autoinsert', v:true)$/;"	v
g:floaterm_autoinsert	plug-config/floaterm.vim	/^let g:floaterm_autoinsert=1$/;"	v
g:floaterm_borderchars	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_borderchars   = get(g:, 'floaterm_borderchars', ['─', '│', '─', '│', '┌', '┐', '┘', '└'])$/;"	v
g:floaterm_gitcommit	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_gitcommit     = get(g:, 'floaterm_gitcommit', '')$/;"	v
g:floaterm_gitcommit	plug-config/floaterm.vim	/^let g:floaterm_gitcommit='floaterm'$/;"	v
g:floaterm_height	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_height        = get(g:, 'floaterm_height', 0.6)$/;"	v
g:floaterm_height	plug-config/floaterm.vim	/^let g:floaterm_height=0.8$/;"	v
g:floaterm_keymap_first	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_first  = get(g:, 'floaterm_keymap_first', '')$/;"	v
g:floaterm_keymap_hide	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_hide   = get(g:, 'floaterm_keymap_hide', '')$/;"	v
g:floaterm_keymap_kill	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_kill   = get(g:, 'floaterm_keymap_kill', '')$/;"	v
g:floaterm_keymap_last	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_last   = get(g:, 'floaterm_keymap_last', '')$/;"	v
g:floaterm_keymap_new	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_new    = get(g:, 'floaterm_keymap_new', '')$/;"	v
g:floaterm_keymap_new	plug-config/floaterm.vim	/^let g:floaterm_keymap_new    = '<F4>'$/;"	v
g:floaterm_keymap_next	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_next   = get(g:, 'floaterm_keymap_next', '')$/;"	v
g:floaterm_keymap_next	plug-config/floaterm.vim	/^let g:floaterm_keymap_next   = '<F2>'$/;"	v
g:floaterm_keymap_prev	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_prev   = get(g:, 'floaterm_keymap_prev', '')$/;"	v
g:floaterm_keymap_prev	plug-config/floaterm.vim	/^let g:floaterm_keymap_prev   = '<F3>'$/;"	v
g:floaterm_keymap_show	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_show   = get(g:, 'floaterm_keymap_show', '')$/;"	v
g:floaterm_keymap_toggle	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_keymap_toggle = get(g:, 'floaterm_keymap_toggle', '')$/;"	v
g:floaterm_keymap_toggle	plug-config/floaterm.vim	/^let g:floaterm_keymap_toggle = '<F1>'$/;"	v
g:floaterm_open_command	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_open_command  = get(g:, 'floaterm_open_command', 'edit')$/;"	v
g:floaterm_position	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_position      = get(g:, 'floaterm_position', 'center')$/;"	v
g:floaterm_rootmarkers	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_rootmarkers   = get(g:, 'floaterm_rootmarkers', [])$/;"	v
g:floaterm_shell	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_shell         = get(g:, 'floaterm_shell', &shell)$/;"	v
g:floaterm_title	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_title         = get(g:, 'floaterm_title', 'floaterm($1\/$2)')$/;"	v
g:floaterm_width	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_width         = get(g:, 'floaterm_width', 0.6)$/;"	v
g:floaterm_width	plug-config/floaterm.vim	/^let g:floaterm_width=0.8$/;"	v
g:floaterm_winblend	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_winblend      = get(g:, 'floaterm_winblend', 0)$/;"	v
g:floaterm_wintitle	plug-config/floaterm.vim	/^let g:floaterm_wintitle=0$/;"	v
g:floaterm_wintype	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^let g:floaterm_wintype       = get(g:, 'floaterm_wintype', '')$/;"	v
g:formatdef_asm_format	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_asm_format = '"asmfmt"'$/;"	v
g:formatdef_astyle_c	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_c = '"astyle --mode=c --options=.astylerc"'$/;"	v
g:formatdef_astyle_c	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_c = '"astyle --mode=c --style=ansi -pcH".(&expandtab ? "s".shiftwidth() : "t")'$/;"	v
g:formatdef_astyle_c	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_c = '"astyle --mode=c"'$/;"	v
g:formatdef_astyle_cpp	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_cpp = '"astyle --mode=c --options=.astylerc"'$/;"	v
g:formatdef_astyle_cpp	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_cpp = '"astyle --mode=c --style=ansi -pcH".(&expandtab ? "s".shiftwidth() : "t")'$/;"	v
g:formatdef_astyle_cpp	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_cpp = '"astyle --mode=c"'$/;"	v
g:formatdef_astyle_cs	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_cs = '"astyle --mode=cs --options=.astylerc"'$/;"	v
g:formatdef_astyle_cs	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_cs = '"astyle --mode=cs --style=ansi --indent-namespaces -pcH".(&expandtab ? "s".shiftwidth() : "t")'$/;"	v
g:formatdef_astyle_cs	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_cs = '"astyle --mode=cs"'$/;"	v
g:formatdef_astyle_java	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_java = '"astyle --mode=java --options=.astylerc"'$/;"	v
g:formatdef_astyle_java	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_java = '"astyle --mode=java --style=java -pcH".(&expandtab ? "s".shiftwidth() : "t")'$/;"	v
g:formatdef_astyle_java	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_astyle_java = '"astyle --mode=java"'$/;"	v
g:formatdef_autopep8	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_autopep8 = '"autopep8 -".(g:DoesRangeEqualBuffer(a:firstline, a:lastline) ? " --range ".a:firstline." ".a:lastline : "")." ".(&textwidth ? "--max-line-length=".&textwidth : "")'$/;"	v
g:formatdef_black	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_black = '"black -q ".(&textwidth ? "-l".&textwidth : "")." -"'$/;"	v
g:formatdef_clangformat	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_clangformat = "g:ClangFormatConfigFileExists() ? (" . s:configfile_def . ") : (" . s:noconfigfile_def . ")"$/;"	v
g:formatdef_cmake_format	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_cmake_format = '"cmake-format - --tab-size ".shiftwidth()." ".(&textwidth ? "--line-width=".&textwidth : "")'$/;"	v
g:formatdef_cssbeautify	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_cssbeautify = '"css-beautify -f - -s ".shiftwidth()'$/;"	v
g:formatdef_dartfmt	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_dartfmt = '"dartfmt"'$/;"	v
g:formatdef_dfmt	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_dfmt = 'g:EditorconfigFileExists() ? (' . s:configfile_def . ') : (' . s:noconfigfile_def . ')'$/;"	v
g:formatdef_eslint_local	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_eslint_local = "g:BuildESLintLocalCmd()"$/;"	v
g:formatdef_fixjson	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_fixjson =  '"fixjson"'$/;"	v
g:formatdef_fprettify	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_fprettify = '"fprettify --no-report-errors --indent=".shiftwidth()'$/;"	v
g:formatdef_gofmt_1	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_gofmt_1 = '"gofmt -tabs=".(&expandtab ? "false" : "true")." -tabwidth=".shiftwidth()'$/;"	v
g:formatdef_gofmt_2	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_gofmt_2 = '"gofmt"'$/;"	v
g:formatdef_goimports	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_goimports = '"goimports"'$/;"	v
g:formatdef_haxe_formatter	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_haxe_formatter = "'haxelib run formatter --stdin --source " . fnamemodify("%", ":p:h") . "'"$/;"	v
g:formatdef_htmlbeautify	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_htmlbeautify = '"html-beautify - -".(&expandtab ? "s ".shiftwidth() : "t").(&textwidth ? " -w ".&textwidth : "")'$/;"	v
g:formatdef_jsbeautify_javascript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_jsbeautify_javascript = '"js-beautify -X -".(&expandtab ? "s ".shiftwidth() : "t").(&textwidth ? " -w ".&textwidth : "")'$/;"	v
g:formatdef_jsbeautify_javascript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_jsbeautify_javascript = '"js-beautify"'$/;"	v
g:formatdef_jsbeautify_json	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_jsbeautify_json = '"js-beautify -".(&expandtab ? "s ".shiftwidth() : "t")'$/;"	v
g:formatdef_jsbeautify_json	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_jsbeautify_json = '"js-beautify"'$/;"	v
g:formatdef_jscs	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_jscs = '"jscs -x"'$/;"	v
g:formatdef_latexindent	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_latexindent = '"latexindent.pl -"'$/;"	v
g:formatdef_mix_format	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_mix_format = '"mix format -"'$/;"	v
g:formatdef_ocamlformat	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_ocamlformat = '"ocamlformat --enable-outside-detected-project --name " . expand("%:p") . " -"'$/;"	v
g:formatdef_ocamlformat	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_ocamlformat = '"ocamlformat --profile=ocamlformat --enable-outside-detected-project --name " . expand("%:p") . " -"'$/;"	v
g:formatdef_ocp_indent	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_ocp_indent = '"ocp-indent"'$/;"	v
g:formatdef_perltidy	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_perltidy = '"perltidy --perl-best-practices --format-skipping -q "'$/;"	v
g:formatdef_perltidy	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let g:formatdef_perltidy = '"perltidy -q -st"'$/;"	v
g:formatdef_prettier	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_prettier = '"prettier --stdin-filepath ".expand("%:p").(&textwidth ? " --print-width ".&textwidth : "")." --tab-width=".shiftwidth()'$/;"	v
g:formatdef_purty	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_purty = '"purty -"'$/;"	v
g:formatdef_rbeautify	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_rbeautify = '"rbeautify ".(&expandtab ? "-s -c ".shiftwidth() : "-t")'$/;"	v
g:formatdef_remark_markdown	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_remark_markdown = '"remark --silent --no-color"'$/;"	v
g:formatdef_rubocop	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_rubocop = "'rubocop --auto-correct -o \/dev\/null -s '.bufname('%').' \\| sed -n 2,\\\\$p'"$/;"	v
g:formatdef_rustfmt	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_rustfmt = '"rustfmt --edition 2018"'$/;"	v
g:formatdef_sassconvert	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_sassconvert = '"sass-convert -F scss -T scss --indent " . (&expandtab ? shiftwidth() : "t")'$/;"	v
g:formatdef_shfmt	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_shfmt = '"shfmt -i ".(&expandtab ? shiftwidth() : "0")'$/;"	v
g:formatdef_sqlformat	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_sqlformat = '"sqlformat --reindent --indent_width ".shiftwidth()." --keywords upper --identifiers lower -"'$/;"	v
g:formatdef_standard_javascript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_standard_javascript = '"standard --fix --stdin"'$/;"	v
g:formatdef_stylelint	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_stylelint = "g:BuildStyleLintCmd()"$/;"	v
g:formatdef_stylish_haskell	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_stylish_haskell = '"stylish-haskell"'$/;"	v
g:formatdef_tidy_html	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_tidy_html = '"tidy -q --show-errors 0 --show-warnings 0 --force-output --indent auto --indent-spaces ".shiftwidth()." --vertical-space yes --tidy-mark no -wrap ".&textwidth'$/;"	v
g:formatdef_tidy_xhtml	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_tidy_xhtml = '"tidy -q --show-errors 0 --show-warnings 0 --force-output --indent auto --indent-spaces ".shiftwidth()." --vertical-space yes --tidy-mark no -asxhtml -wrap ".&textwidth'$/;"	v
g:formatdef_tidy_xml	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_tidy_xml = '"tidy -q -xml --show-errors 0 --show-warnings 0 --force-output --indent auto --indent-spaces ".shiftwidth()." --vertical-space yes --tidy-mark no -wrap ".&textwidth'$/;"	v
g:formatdef_tsfmt	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_tsfmt = "'tsfmt --stdin '.bufname('%')"$/;"	v
g:formatdef_xo_javascript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_xo_javascript = "g:BuildXOLocalCmd()"$/;"	v
g:formatdef_yapf	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatdef_yapf   = "g:YAPFFormatConfigFileExists() ? (" . s:configfile_def . ") : (" . s:noconfigfile_def . ")"$/;"	v
g:formatter_yapf_style	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatter_yapf_style = 'pep8'$/;"	v
g:formatters_asm	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_asm = ['asm_format']$/;"	v
g:formatters_c	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_c = ['clangformat', 'astyle_c']$/;"	v
g:formatters_cmake	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_cmake = ['cmake_format']$/;"	v
g:formatters_cpp	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_cpp = ['clangformat', 'astyle_cpp']$/;"	v
g:formatters_cs	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_cs = ['astyle_cs']$/;"	v
g:formatters_css	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_css = ['cssbeautify', 'prettier', 'stylelint']$/;"	v
g:formatters_d	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_d = ['dfmt']$/;"	v
g:formatters_dart	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_dart = ['dartfmt']$/;"	v
g:formatters_elixir	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_elixir = ['mix_format']$/;"	v
g:formatters_fortran	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_fortran = ['fprettify']$/;"	v
g:formatters_go	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_go = ['gofmt_1', 'goimports', 'gofmt_2']$/;"	v
g:formatters_graphql	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_graphql = ['prettier']$/;"	v
g:formatters_haskell	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_haskell = ['stylish_haskell']$/;"	v
g:formatters_haxe	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_haxe = ["haxe_formatter"]$/;"	v
g:formatters_html	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_html = ['htmlbeautify', 'tidy_html', 'stylelint']$/;"	v
g:formatters_java	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_java = ['astyle_java']$/;"	v
g:formatters_javascript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_javascript = [$/;"	v
g:formatters_json	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_json = [$/;"	v
g:formatters_less	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_less = ['prettier', 'stylelint']$/;"	v
g:formatters_markdown	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_markdown = ['remark_markdown', 'prettier', 'stylelint']$/;"	v
g:formatters_objc	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_objc = ['clangformat']$/;"	v
g:formatters_ocaml	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_ocaml = ['ocamlformat', 'ocp_indent']$/;"	v
g:formatters_perl	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_perl = ['perltidy']$/;"	v
g:formatters_proto	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_proto = ['clangformat']$/;"	v
g:formatters_purescript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_purescript = ['purty']$/;"	v
g:formatters_python	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_python = ['autopep8','yapf', 'black']$/;"	v
g:formatters_ruby	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_ruby = ['rbeautify', 'rubocop']$/;"	v
g:formatters_rust	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_rust = ['rustfmt']$/;"	v
g:formatters_scss	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_scss = ['sassconvert', 'prettier', 'stylelint']$/;"	v
g:formatters_sh	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_sh = ['shfmt']$/;"	v
g:formatters_sql	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_sql = ['sqlformat']$/;"	v
g:formatters_svg	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_svg = ['tidy_xml']$/;"	v
g:formatters_tex	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_tex = ['latexindent']$/;"	v
g:formatters_typescript	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_typescript = ['tsfmt', 'prettier']$/;"	v
g:formatters_vue	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_vue = [$/;"	v
g:formatters_xhtml	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_xhtml = ['tidy_xhtml']$/;"	v
g:formatters_xml	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let g:formatters_xml = ['tidy_xml']$/;"	v
g:fugitive_browse_handlers	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_command	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:fugitive_git_command = 'hub'$/;"	v
g:fugitive_git_executable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'env ' . g:fugitive_git_executable$/;"	v
g:fugitive_git_executable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fzf#vim#buffers	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:fzf_action	plug-config/fzf.vim	/^let g:fzf_action = {$/;"	v
g:fzf_buffers_jump	plug-config/fzf.vim	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_colors	plug-config/fzf.vim	/^let g:fzf_colors =$/;"	v
g:fzf_history_dir	plug-config/fzf.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	plug-config/fzf.vim	/^let g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,'yoffset':0.5,'xoffset': 0.5, 'highlight': 'Todo', 'border': 'sharp' } }$/;"	v
g:fzf_tags_command	plug-config/fzf.vim	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:gist_api_url	autoload/plugged/vim-gist/autoload/gist.vim	/^    let g:gist_api_url = 'https:\/\/api.github.com\/'$/;"	v
g:gist_api_url	autoload/plugged/vim-gist/autoload/gist.vim	/^  let g:gist_api_url .= '\/'$/;"	v
g:gist_api_url	autoload/plugged/vim-gist/autoload/gist.vim	/^  let g:gist_api_url = substitute(s:system('git config --get github.apiurl'), "\\n", '', '')$/;"	v
g:gist_disabled	autoload/plugged/vim-gist/autoload/gist.vim	/^        let g:gist_disabled = 1$/;"	v
g:gist_list_recursively_cache	autoload/plugged/vim-gist/autoload/gist.vim	/^  let g:gist_list_recursively_cache = get(g:, 'gist_list_recursively_cache', {})$/;"	v
g:gist_list_recursively_cache	autoload/plugged/vim-gist/autoload/gist.vim	/^  let g:gist_list_recursively_cache[a:user] = webapi#json#encode(gists)$/;"	v
g:gist_update_on_write	autoload/plugged/vim-gist/autoload/gist.vim	/^  let g:gist_update_on_write = 1$/;"	v
g:git_messenger_always_into_popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_always_into_popup = get(g:, 'git_messenger_always_into_popup', v:false)$/;"	v
g:git_messenger_close_on_cursor_moved	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_close_on_cursor_moved = get(g:, 'git_messenger_close_on_cursor_moved', v:true)$/;"	v
g:git_messenger_date_format	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_date_format = get(g:, 'git_messenger_date_format', '%c')$/;"	v
g:git_messenger_extra_blame_args	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_extra_blame_args = get(g:, 'git_messenger_extra_blame_args', '')$/;"	v
g:git_messenger_git_command	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_git_command = get(g:, 'git_messenger_git_command', 'git')$/;"	v
g:git_messenger_include_diff	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_include_diff = get(g:, 'git_messenger_include_diff', 'none')$/;"	v
g:git_messenger_into_popup_after_show	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_into_popup_after_show = get(g:, 'git_messenger_into_popup_after_show', v:true)$/;"	v
g:git_messenger_max_popup_height	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_max_popup_height = get(g:, 'git_messenger_max_popup_height', v:null)$/;"	v
g:git_messenger_max_popup_width	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_max_popup_width = get(g:, 'git_messenger_max_popup_width', v:null)$/;"	v
g:git_messenger_no_default_mappings	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^let g:git_messenger_no_default_mappings = get(g:, 'git_messenger_no_default_mappings', v:false)$/;"	v
g:git_messenger_no_default_mappings	plug-config/git-messenger.vim	/^let g:git_messenger_no_default_mappings=1$/;"	v
g:git_messenger_preview_mods	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let g:git_messenger_preview_mods = get(g:, 'git_messenger_preview_mods', '')$/;"	v
g:gitgutter_grep	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_map_keys	plug-config/gitgutter.vim	/^let g:gitgutter_map_keys = 0$/;"	v
g:gitgutter_override_sign_column_highlight	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	plug-config/gitgutter.vim	/^let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_preview_win_floating	plug-config/gitgutter.vim	/^let g:gitgutter_preview_win_floating = 1$/;"	v
g:gitgutter_sign_allow_clobber	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_allow_clobber = 1$/;"	v
g:github_user	autoload/plugged/vim-gist/autoload/gist.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:github_user	autoload/plugged/vim-gist/autoload/gist.vim	/^  let g:github_user = substitute(s:system('git config --get github.user'), "\\n", '', '')$/;"	v
g:gruvbox_bold	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast_dark	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_italic	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_termcolors	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:highlightedyank_highlight_duration	plug-config/highlightyank.vim	/^let g:highlightedyank_highlight_duration = 500$/;"	v
g:indentLine_color_gui	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:io_fugitive	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:leetcode_browser	plug-config/leetcode.vim	/^let g:leetcode_browser='chrome'$/;"	v
g:leetcode_china	plug-config/leetcode.vim	/^let g:leetcode_china=0$/;"	v
g:leetcode_hide_paid_only	plug-config/leetcode.vim	/^let g:leetcode_hide_paid_only=1$/;"	v
g:leetcode_solution_filetype	plug-config/leetcode.vim	/^let g:leetcode_solution_filetype='python3'$/;"	v
g:lightline#colorscheme#gruvbox#palette	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let g:lightline#colorscheme#gruvbox#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_airline	autoload/plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_bbye	autoload/plugged/vim-bbye/plugin/bbye.vim	/^let g:loaded_bbye = 1$/;"	v
g:loaded_better_whitespace_plugin	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let g:loaded_better_whitespace_plugin = 1$/;"	v
g:loaded_colorizer	autoload/plugged/nvim-colorizer.lua/plugin/colorizer.vim	/^let g:loaded_colorizer = 1$/;"	v
g:loaded_commentary	autoload/plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_context_commentstring	autoload/plugged/vim-context-commentstring/plugin/context-commentstring.vim	/^let g:loaded_context_commentstring = 1$/;"	v
g:loaded_cursormode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
g:loaded_emmet_vim	autoload/plugged/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_eunuch	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_far	autoload/plugged/far.vim/plugin/far.vim	/^let g:loaded_far = 0$/;"	v
g:loaded_fugitive	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fzf	autoload/plugged/fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_gist_vim	autoload/plugged/vim-gist/plugin/gist.vim	/^let g:loaded_gist_vim = 1$/;"	v
g:loaded_git_messenger	autoload/plugged/git-messenger.vim/plugin/gitmessenger.vim	/^let g:loaded_git_messenger = 1$/;"	v
g:loaded_gitgutter	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_nerdtree_autoload	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	autoload/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_git_status_autoload	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^let g:loaded_nerdtree_git_status_autoload = 1$/;"	v
g:loaded_nerdtree_git_status_job	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let g:loaded_nerdtree_git_status_job = 1$/;"	v
g:loaded_nerdtree_git_status_listener	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let g:loaded_nerdtree_git_status_listener = 1$/;"	v
g:loaded_nerdtree_git_status_log	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let g:loaded_nerdtree_git_status_log = 1$/;"	v
g:loaded_nerdtree_git_status_util	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let g:loaded_nerdtree_git_status_util = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_quick_scope	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^let g:loaded_quick_scope = 1$/;"	v
g:loaded_radical	autoload/plugged/vim-radical/plugin/radical.vim	/^let g:loaded_radical = 1$/;"	v
g:loaded_repeat	autoload/plugged/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_rhubarb	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:loaded_rhubarb = 1$/;"	v
g:loaded_rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^let g:loaded_rooter = 1$/;"	v
g:loaded_sleuth	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^let g:loaded_sleuth = 1$/;"	v
g:loaded_sneak_plugin	autoload/plugged/vim-sneak/plugin/sneak.vim	/^let g:loaded_sneak_plugin = 1$/;"	v
g:loaded_speeddating	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^let g:loaded_speeddating = 1$/;"	v
g:loaded_startify	autoload/plugged/vim-startify/plugin/startify.vim	/^let g:loaded_startify = 1$/;"	v
g:loaded_surround	autoload/plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_tagalong	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^let g:loaded_tagalong = '0.2.1' " version number$/;"	v
g:loaded_undotree	autoload/plugged/undotree/autoload/undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_undotree	autoload/plugged/undotree/plugin/undotree.vim	/^let g:loaded_undotree = 0$/;"	v
g:loaded_undotree	autoload/plugged/undotree/plugin/undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_vim_airline_zoomwintab	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
g:loaded_vim_which_key	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:loaded_vim_which_key = 1$/;"	v
g:loaded_vista	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:loaded_vista = 1$/;"	v
g:loaded_windowswap	autoload/plugged/vim-windowswap/plugin/WindowSwap.vim	/^let g:loaded_windowswap = 1$/;"	v
g:lsp_cxx_hl_ft_whitelist	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_ft_whitelist = get(g:, 'lsp_cxx_hl_ft_whitelist',$/;"	v
g:lsp_cxx_hl_inactive_region_priority	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_inactive_region_priority = get(g:,$/;"	v
g:lsp_cxx_hl_loaded	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_loaded = 1$/;"	v
g:lsp_cxx_hl_log_file	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_log_file = get(g:, 'lsp_cxx_hl_log_file', '')$/;"	v
g:lsp_cxx_hl_syntax_priority	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_syntax_priority = get(g:, 'lsp_cxx_hl_syntax_priority', -100)$/;"	v
g:lsp_cxx_hl_text_prop_refresh_count	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_text_prop_refresh_count = get(g:,$/;"	v
g:lsp_cxx_hl_use_nvim_text_props	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_use_nvim_text_props = get(g:,$/;"	v
g:lsp_cxx_hl_use_text_props	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_use_text_props = get(g:, 'lsp_cxx_hl_use_text_props',$/;"	v
g:lsp_cxx_hl_verbose_log	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^let g:lsp_cxx_hl_verbose_log = get(g:, 'lsp_cxx_hl_verbose_log', 0)$/;"	v
g:material_terminal_italics	themes/material.vim	/^let g:material_terminal_italics = 1$/;"	v
g:material_theme_style	themes/material.vim	/^let g:material_theme_style = 'darker'$/;"	v
g:mkdp_auto_close	plug-config/markdown-preview.vim	/^let g:mkdp_auto_close = 0$/;"	v
g:mkdp_auto_start	plug-config/markdown-preview.vim	/^let g:mkdp_auto_start = 0$/;"	v
g:mkdp_browser	default_configs/_machine_specific_default.vim	/^let g:mkdp_browser = 'chromium'$/;"	v
g:mkdp_browser	plug-config/markdown-preview.vim	/^let g:mkdp_browser = ''$/;"	v
g:mkdp_browserfunc	plug-config/markdown-preview.vim	/^let g:mkdp_browserfunc = ''$/;"	v
g:mkdp_command_for_global	plug-config/markdown-preview.vim	/^let g:mkdp_command_for_global = 0$/;"	v
g:mkdp_echo_preview_url	plug-config/markdown-preview.vim	/^let g:mkdp_echo_preview_url = 0$/;"	v
g:mkdp_highlight_css	plug-config/markdown-preview.vim	/^let g:mkdp_highlight_css = ''$/;"	v
g:mkdp_markdown_css	plug-config/markdown-preview.vim	/^let g:mkdp_markdown_css = ''$/;"	v
g:mkdp_open_ip	plug-config/markdown-preview.vim	/^let g:mkdp_open_ip = ''$/;"	v
g:mkdp_open_to_the_world	plug-config/markdown-preview.vim	/^let g:mkdp_open_to_the_world = 1$/;"	v
g:mkdp_page_title	plug-config/markdown-preview.vim	/^let g:mkdp_page_title = '「${name}」'$/;"	v
g:mkdp_port	plug-config/markdown-preview.vim	/^let g:mkdp_port = ''$/;"	v
g:mkdp_preview_options	plug-config/markdown-preview.vim	/^let g:mkdp_preview_options = {$/;"	v
g:mkdp_refresh_slow	plug-config/markdown-preview.vim	/^let g:mkdp_refresh_slow = 0$/;"	v
g:niji_dark_colours	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:nvcode_termcolors	themes/nvcode.vim	/^let g:nvcode_termcolors=256$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:python3_host_prog	default_configs/_machine_specific_default.vim	/^let g:python3_host_prog='\/usr\/bin\/python3'$/;"	v
g:python_highlight_all	themes/syntax.vim	/^let g:python_highlight_all=1$/;"	v
g:python_host_prog	default_configs/_machine_specific_default.vim	/^let g:python_host_prog='\/usr\/bin\/python2'$/;"	v
g:qs_accepted_chars	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']$/;"	v
g:qs_buftype_blacklist	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_buftype_blacklist = []$/;"	v
g:qs_enable	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_enable = 1$/;"	v
g:qs_highlight_on_keys	plug-config/quickscope.vim	/^let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']$/;"	v
g:qs_ignorecase	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_ignorecase = 0$/;"	v
g:qs_lazy_highlight	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_lazy_highlight = 0$/;"	v
g:qs_max_chars	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_max_chars = 1000$/;"	v
g:qs_max_chars	plug-config/quickscope.vim	/^let g:qs_max_chars=150$/;"	v
g:qs_second_highlight	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  let g:qs_second_highlight = 1$/;"	v
g:rainbow#pairs	plug-config/rainbow.vim	/^let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]$/;"	v
g:rainbow_active	plug-config/rainbow.vim	/^let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle$/;"	v
g:rainbow_conf	autoload/plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	autoload/plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	autoload/plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	plug-config/rainbow.vim	/^let g:rainbow_conf = {$/;"	v
g:rainbow_conf	plug-config/rainbow.vim	/^let g:rainbow_conf = {'guis': ['bold']}$/;"	v
g:rainbow_ctermfgs	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:ranger_map_keys	plug-config/ranger.vim	/^let g:ranger_map_keys = 0$/;"	v
g:ranger_replace_netrw	plug-config/ranger.vim	/^let g:ranger_replace_netrw = 1 "\/\/ open ranger when vim open a directory$/;"	v
g:rbpt_colorpairs	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:repeat_reg	autoload/plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	autoload/plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:rnvimr_bw_enable	plug-config/rnvimr.vim	/^let g:rnvimr_bw_enable = 1$/;"	v
g:rnvimr_draw_border	plug-config/rnvimr.vim	/^let g:rnvimr_draw_border = 1$/;"	v
g:rnvimr_ex_enable	plug-config/rnvimr.vim	/^let g:rnvimr_ex_enable = 1$/;"	v
g:rnvimr_pick_enable	plug-config/rnvimr.vim	/^let g:rnvimr_pick_enable = 1$/;"	v
g:rnvimr_presets	plug-config/rnvimr.vim	/^let g:rnvimr_presets = [$/;"	v
g:rnvimr_ranger_cmd	plug-config/rnvimr.vim	/^let g:rnvimr_ranger_cmd = 'ranger --cmd="set column_ratios 1,1"'$/;"	v
g:rooter_cd_cmd	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_cd_cmd	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'lcd'$/;"	v
g:rooter_change_directory_for_non_project_files	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_manual_only	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = 0$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_patterns = ['.git', '_darcs', '.hg', '.bzr', '.svn', 'Makefile']$/;"	v
g:rooter_resolve_links	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_silent_chdir	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_silent_chdir	plug-config/vim-rooter.vim	/^let g:rooter_silent_chdir = 1$/;"	v
g:rooter_targets	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_targets = '\/,*'$/;"	v
g:smoothie_base_speed	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_base_speed = 10$/;"	v
g:smoothie_break_on_reverse	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_break_on_reverse = 0$/;"	v
g:smoothie_update_interval	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_update_interval = 20$/;"	v
g:sneak#label	plug-config/sneak.vim	/^let g:sneak#label = 1$/;"	v
g:sneak#prompt	plug-config/sneak.vim	/^let g:sneak#prompt = '🔎 '$/;"	v
g:sneak#s_next	plug-config/sneak.vim	/^let g:sneak#s_next = 1$/;"	v
g:sneak#search#instance	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^let g:sneak#search#instance = sneak#search#new()$/;"	v
g:sneak#target_labels	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^let g:sneak#target_labels = get(g:, 'sneak#target_labels', ";sftunq\/SFGHLTUNRMQZ?0")$/;"	v
g:sneak#use_ic_scs	plug-config/sneak.vim	/^let g:sneak#use_ic_scs = 1$/;"	v
g:snips_author	autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:spaceline_colorscheme	themes/spaceline.vim	/^let g:spaceline_colorscheme = 'mach2'$/;"	v
g:spaceline_seperate_style	themes/spaceline.vim	/^let g:spaceline_seperate_style= 'none'$/;"	v
g:speeddating_formats	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^let g:speeddating_formats = []$/;"	v
g:speeddating_handlers	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let g:speeddating_handlers += [{'regexp': '-\\=\\<\\d\\+\\%(st\\|nd\\|rd\\|th\\)\\>', 'increment': s:function("s:ordinalincrement")}]$/;"	v
g:speeddating_handlers	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^let g:speeddating_handlers = []$/;"	v
g:speeddating_zone	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^    let g:speeddating_zone = get({-8:'PST',-7:'MST',-6:'CST',-5:'EST',0:'WET',1:'CET',2:'EET'},s:offset\/60,"XST")$/;"	v
g:speeddating_zone	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^  let g:speeddating_zone = strftime("%Z",30*365*86400)$/;"	v
g:speeddating_zone_dst	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^      let g:speeddating_zone_dst = g:speeddating_zone$/;"	v
g:speeddating_zone_dst	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^      let g:speeddating_zone_dst = get({-7:'PDT',-6:'MDT',-5:'CDT',-4:'EDT',1:'WEST',2:'CEST',3:'EEST'},s:offset_dst\/60,"XDT")$/;"	v
g:speeddating_zone_dst	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^  let g:speeddating_zone_dst = strftime("%Z",(180+30*365)*86400)$/;"	v
g:startify_custom_header_quotes	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let g:startify_custom_header_quotes = exists('g:startify_custom_header_quotes')$/;"	v
g:startify_enable_special	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:startify_enable_special = get(g:, 'startify_enable_special', 1)$/;"	v
g:startify_files_number	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:startify_files_number = get(g:, 'startify_files_number', 10)$/;"	v
g:startify_fortune_use_unicode	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let g:startify_fortune_use_unicode = &encoding == 'utf-8' && get(g:, 'startify_fortune_use_unicode')$/;"	v
g:startify_lists	plug-config/start-screen.vim	/^let g:startify_lists = [$/;"	v
g:startify_lists	plug-config/startfy.vim	/^let g:startify_lists = [$/;"	v
g:startify_locked	autoload/plugged/vim-startify/plugin/startify.vim	/^let g:startify_locked = 0$/;"	v
g:startify_padding_left	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:startify_padding_left = get(g:, 'startify_padding_left', 3)$/;"	v
g:startify_relative_path	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:startify_relative_path = get(g:, 'startify_relative_path') ? ':~:.' : ':p:~'$/;"	v
g:startify_skiplist	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:startify_skiplist = extend(get(g:, 'startify_skiplist', []), [$/;"	v
g:startify_transformations	autoload/plugged/vim-startify/autoload/startify.vim	/^let g:startify_transformations = get(g:, 'startify_transformations', [])$/;"	v
g:taboo_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagalong_additional_filetypes	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^  let g:tagalong_additional_filetypes = []$/;"	v
g:tagalong_excluded_filetype_combinations	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^  let g:tagalong_excluded_filetype_combinations = ['eruby.yaml']$/;"	v
g:tagalong_filetypes	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^  let g:tagalong_filetypes = ['html', 'xml', 'jsx', 'eruby', 'ejs', 'eco', 'php', 'htmldjango', 'javascriptreact', 'typescriptreact']$/;"	v
g:tagalong_filetypes	plug-config/tagalong.vim	/^let g:tagalong_filetypes = ['html', 'xml', 'jsx', 'eruby', 'ejs', 'eco', 'php', 'htmldjango', 'javascriptreact', 'typescriptreact', 'javascript']$/;"	v
g:tagalong_mappings	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^  let g:tagalong_mappings = ['c', 'C', 'v', 'i', 'a']$/;"	v
g:tagalong_timeout	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^  let g:tagalong_timeout = 500$/;"	v
g:tagalong_verbose	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^  let g:tagalong_verbose = 0$/;"	v
g:tagalong_verbose	plug-config/tagalong.vim	/^let g:tagalong_verbose = 1$/;"	v
g:tagbar_type_snippets	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:terminal_color_0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_1	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_10	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_11	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_12	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_13	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_14	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_15	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_2	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_3	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_4	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_5	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_6	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_7	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_8	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_9	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:testname	autoload/plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:testname	autoload/plugged/vim-rooter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:undotree_DiffAutoOpen	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffCommand	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffCommand = "diff"$/;"	v
g:undotree_DiffpanelHeight	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffpanelHeight = 10$/;"	v
g:undotree_HelpLine	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HelpLine = 1$/;"	v
g:undotree_HighlightChangedText	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightChangedText = 1$/;"	v
g:undotree_HighlightChangedWithSign	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightChangedWithSign = 1$/;"	v
g:undotree_HighlightSyntaxAdd	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxAdd = "DiffAdd"$/;"	v
g:undotree_HighlightSyntaxChange	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxChange = "DiffChange"$/;"	v
g:undotree_HighlightSyntaxDel	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxDel = "DiffDelete"$/;"	v
g:undotree_RelativeTimestamp	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_RelativeTimestamp = 1$/;"	v
g:undotree_SetFocusWhenToggle	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_SetFocusWhenToggle = 0$/;"	v
g:undotree_ShortIndicators	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_ShortIndicators = 0$/;"	v
g:undotree_SplitWidth	autoload/plugged/undotree/plugin/undotree.vim	/^        let g:undotree_SplitWidth = 24$/;"	v
g:undotree_SplitWidth	autoload/plugged/undotree/plugin/undotree.vim	/^        let g:undotree_SplitWidth = 30$/;"	v
g:undotree_TreeNodeShape	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_TreeNodeShape = '*'$/;"	v
g:undotree_WindowLayout	autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_WindowLayout = 1$/;"	v
g:user_emmet_leader_key	autoload/plugged/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:vimshell_escape_colors	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimspector_base_dir	plug-config/vimspector.vim	/^let g:vimspector_base_dir=expand( '$HOME\/.config\/nvim\/vimspector-config' )$/;"	v
g:vimspector_enable_mappings	plug-config/vimspector.vim	/^let g:vimspector_enable_mappings='HUMAN'$/;"	v
g:vimwiki_diary_months	plug-config/vim-wiki.vim	/^let g:vimwiki_diary_months = {$/;"	v
g:vimwiki_filetypes	plug-config/vim-wiki.vim	/^let g:vimwiki_filetypes = ['markdown']$/;"	v
g:vimwiki_key_mappings	plug-config/vim-wiki.vim	/^  let g:vimwiki_key_mappings =$/;"	v
g:vimwiki_list	plug-config/vim-wiki.vim	/^let g:vimwiki_list = [{'path': '~\/.config\/nvim\/wiki',$/;"	v
g:vista	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  let g:vista.source = source_handle$/;"	v
g:vista#executive#ctags#support_json_format	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let g:vista#executive#ctags#support_json_format = s:support_json_format$/;"	v
g:vista#executives	autoload/plugged/vista.vim/autoload/vista.vim	/^let g:vista#executives = vista#FindItemsUnderDirectory(s:cur_dir.'\/vista\/executive')$/;"	v
g:vista#extensions	autoload/plugged/vista.vim/autoload/vista.vim	/^let g:vista#extensions = vista#FindItemsUnderDirectory(s:cur_dir.'\/vista\/extension')$/;"	v
g:vista#finders	autoload/plugged/vista.vim/autoload/vista.vim	/^let g:vista#finders = vista#FindItemsUnderDirectory(s:cur_dir.'\/vista\/finder')$/;"	v
g:vista#renderer#ctags	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#ctags = get(g:, 'vista#renderer#ctags', 'default')$/;"	v
g:vista#renderer#default#vlnum_offset	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let g:vista#renderer#default#vlnum_offset = 3$/;"	v
g:vista#renderer#enable_icon	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#enable_icon = get(g:, 'vista#renderer#enable_icon',$/;"	v
g:vista#renderer#enable_icon	plug-config/vista.vim	/^let g:vista#renderer#enable_icon = 1$/;"	v
g:vista#renderer#icons	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#icons = map(extend(s:icons, get(g:, 'vista#renderer#icons', {})), 'tolower(v:val)')$/;"	v
g:vista#renderer#icons	plug-config/vista.vim	/^let g:vista#renderer#icons = {$/;"	v
g:vista#types#uctags#	autoload/plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let g:vista#types#uctags# = s:types$/;"	v
g:vista#types#uctags#ada#	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let g:vista#types#uctags#ada# = s:types$/;"	v
g:vista#types#uctags#ant#	autoload/plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let g:vista#types#uctags#ant# = s:types$/;"	v
g:vista#types#uctags#asm#	autoload/plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let g:vista#types#uctags#asm# = s:types$/;"	v
g:vista#types#uctags#aspvbs#	autoload/plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let g:vista#types#uctags#aspvbs# = s:types$/;"	v
g:vista#types#uctags#asy#	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let g:vista#types#uctags#asy# = s:types$/;"	v
g:vista#types#uctags#automake#	autoload/plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let g:vista#types#uctags#automake# = s:types$/;"	v
g:vista#types#uctags#awk#	autoload/plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let g:vista#types#uctags#awk# = s:types$/;"	v
g:vista#types#uctags#basic#	autoload/plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let g:vista#types#uctags#basic# = s:types$/;"	v
g:vista#types#uctags#beta#	autoload/plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let g:vista#types#uctags#beta# = s:types$/;"	v
g:vista#types#uctags#c#	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let g:vista#types#uctags#c# = s:types$/;"	v
g:vista#types#uctags#clojure#	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let g:vista#types#uctags#clojure# = s:types$/;"	v
g:vista#types#uctags#cobol#	autoload/plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let g:vista#types#uctags#cobol# = s:types$/;"	v
g:vista#types#uctags#config#	autoload/plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let g:vista#types#uctags#config# = s:types$/;"	v
g:vista#types#uctags#cpp#	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let g:vista#types#uctags#cpp# = s:types$/;"	v
g:vista#types#uctags#cs#	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let g:vista#types#uctags#cs# = s:types$/;"	v
g:vista#types#uctags#css#	autoload/plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let g:vista#types#uctags#css# = s:types$/;"	v
g:vista#types#uctags#ctags#	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let g:vista#types#uctags#ctags# = s:types$/;"	v
g:vista#types#uctags#d#	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let g:vista#types#uctags#d# = s:types$/;"	v
g:vista#types#uctags#dosbatch#	autoload/plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let g:vista#types#uctags#dosbatch# = s:types$/;"	v
g:vista#types#uctags#eiffel#	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let g:vista#types#uctags#eiffel# = s:types$/;"	v
g:vista#types#uctags#elm#	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let g:vista#types#uctags#elm# = s:types$/;"	v
g:vista#types#uctags#erlang#	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let g:vista#types#uctags#erlang# = s:types$/;"	v
g:vista#types#uctags#fortran#	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let g:vista#types#uctags#fortran# = s:types$/;"	v
g:vista#types#uctags#go#	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let g:vista#types#uctags#go# = type_go$/;"	v
g:vista#types#uctags#html#	autoload/plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let g:vista#types#uctags#html# = s:types$/;"	v
g:vista#types#uctags#java#	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let g:vista#types#uctags#java# = s:types$/;"	v
g:vista#types#uctags#javascript#	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let g:vista#types#uctags#javascript# = s:types$/;"	v
g:vista#types#uctags#lisp#	autoload/plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let g:vista#types#uctags#lisp# = s:types$/;"	v
g:vista#types#uctags#make#	autoload/plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let g:vista#types#uctags#make# = s:types$/;"	v
g:vista#types#uctags#matlab#	autoload/plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let g:vista#types#uctags#matlab# = s:types$/;"	v
g:vista#types#uctags#mxml#	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let g:vista#types#uctags#mxml# = s:types$/;"	v
g:vista#types#uctags#objc#	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let g:vista#types#uctags#objc# = s:types$/;"	v
g:vista#types#uctags#ocaml#	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let g:vista#types#uctags#ocaml# = s:types$/;"	v
g:vista#types#uctags#pascal#	autoload/plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let g:vista#types#uctags#pascal# = s:types$/;"	v
g:vista#types#uctags#perl#	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let g:vista#types#uctags#perl# = s:types$/;"	v
g:vista#types#uctags#perl6#	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let g:vista#types#uctags#perl6# = s:types6$/;"	v
g:vista#types#uctags#php#	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let g:vista#types#uctags#php# = s:types$/;"	v
g:vista#types#uctags#proto#	autoload/plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let g:vista#types#uctags#proto# = s:types$/;"	v
g:vista#types#uctags#python#	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let g:vista#types#uctags#python# = s:types$/;"	v
g:vista#types#uctags#r#	autoload/plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let g:vista#types#uctags#r# = s:types$/;"	v
g:vista#types#uctags#rexx#	autoload/plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let g:vista#types#uctags#rexx# = s:types$/;"	v
g:vista#types#uctags#ruby#	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let g:vista#types#uctags#ruby# = s:types$/;"	v
g:vista#types#uctags#rust#	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let g:vista#types#uctags#rust# = s:types$/;"	v
g:vista#types#uctags#scheme#	autoload/plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let g:vista#types#uctags#scheme# = s:types$/;"	v
g:vista#types#uctags#sh#	autoload/plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let g:vista#types#uctags#sh# = s:types$/;"	v
g:vista#types#uctags#slang#	autoload/plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let g:vista#types#uctags#slang# = s:types$/;"	v
g:vista#types#uctags#sml#	autoload/plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let g:vista#types#uctags#sml# = s:types$/;"	v
g:vista#types#uctags#sql#	autoload/plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let g:vista#types#uctags#sql# = s:types$/;"	v
g:vista#types#uctags#tcl#	autoload/plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let g:vista#types#uctags#tcl# = s:types$/;"	v
g:vista#types#uctags#tex#	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let g:vista#types#uctags#tex# = s:types$/;"	v
g:vista#types#uctags#vala#	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^  let g:vista#types#uctags#vala#.ctagsbin = 'anjuta-tags'$/;"	v
g:vista#types#uctags#vala#	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let g:vista#types#uctags#vala# = s:types$/;"	v
g:vista#types#uctags#vera#	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let g:vista#types#uctags#vera# = s:types$/;"	v
g:vista#types#uctags#verilog#	autoload/plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let g:vista#types#uctags#verilog# = s:types$/;"	v
g:vista#types#uctags#vhdl#	autoload/plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let g:vista#types#uctags#vhdl# = s:types$/;"	v
g:vista#types#uctags#vim#	autoload/plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let g:vista#types#uctags#vim# = s:types$/;"	v
g:vista#types#uctags#yacc#	autoload/plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let g:vista#types#uctags#yacc# = s:types$/;"	v
g:vista_blink	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_blink = get(g:, 'vista_blink', [2, 100])$/;"	v
g:vista_close_on_jump	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_close_on_jump =  get(g:, 'vista_close_on_jump', 0)$/;"	v
g:vista_cursor_delay	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_cursor_delay = get(g:, 'vista_cursor_delay', 400)$/;"	v
g:vista_default_executive	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_default_executive = get(g:, 'vista_default_executive', 'ctags')$/;"	v
g:vista_disable_statusline	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_disable_statusline = get(g:, 'vista_disable_statusline', exists('g:loaded_airline') || exists('g:loaded_lightline'))$/;"	v
g:vista_echo_cursor	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_echo_cursor = get(g:, 'vista_echo_cursor', 1)$/;"	v
g:vista_executive_for	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_executive_for = get(g:, 'vista_executive_for', {})$/;"	v
g:vista_executive_nvim_lsp_fetching	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let g:vista_executive_nvim_lsp_fetching = v:true$/;"	v
g:vista_executive_nvim_lsp_reload_only	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let g:vista_executive_nvim_lsp_reload_only = v:false$/;"	v
g:vista_executive_nvim_lsp_should_display	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let g:vista_executive_nvim_lsp_should_display = v:false$/;"	v
g:vista_find_absolute_nearest_method_or_function	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_find_absolute_nearest_method_or_function = get(g:, 'vista_find_absolute_nearest_method_or_function', 0)$/;"	v
g:vista_find_nearest_method_or_function_delay	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_find_nearest_method_or_function_delay = get(g:, 'vista_find_nearest_method_or_function_delay', 300)$/;"	v
g:vista_fold_toggle_icons	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_fold_toggle_icons = get(g:, 'vista_fold_toggle_icons', ['▼', '▶'])$/;"	v
g:vista_fzf_preview	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_fzf_preview = get(g:, 'vista_fzf_preview', [])$/;"	v
g:vista_fzf_preview	plug-config/vista.vim	/^let g:vista_fzf_preview = ['right:50%']$/;"	v
g:vista_icon_indent	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_icon_indent = get(g:, 'vista_icon_indent', ['└ ', '│ '])$/;"	v
g:vista_ignore_kinds	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_ignore_kinds = get(g:, 'vista_ignore_kinds', [])$/;"	v
g:vista_no_mappings	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_no_mappings = get(g:, 'vista_no_mappings', 0)$/;"	v
g:vista_sidebar_position	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_sidebar_position = get(g:, 'vista_sidebar_position', 'vertical botright')$/;"	v
g:vista_sidebar_width	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_sidebar_width = get(g:, 'vista_sidebar_width', 30)$/;"	v
g:vista_stay_on_open	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_stay_on_open = get(g:, 'vista_stay_on_open', 1)$/;"	v
g:vista_top_level_blink	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_top_level_blink = get(g:, 'vista_top_level_blink', [2, 100])$/;"	v
g:vista_update_on_text_changed	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_update_on_text_changed = get(g:, 'vista_update_on_text_changed', 0)$/;"	v
g:vista_update_on_text_changed_delay	autoload/plugged/vista.vim/plugin/vista.vim	/^let g:vista_update_on_text_changed_delay = get(g:, 'vista_update_on_text_changed_delay', 500)$/;"	v
g:which_key#TYPE	autoload/plugged/vim-which-key/autoload/which_key.vim	/^let g:which_key#TYPE = s:TYPE$/;"	v
g:which_key_align_by_seperator	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_align_by_seperator = get(g:, 'which_key_align_by_seperator', 1)$/;"	v
g:which_key_default_group_name	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_default_group_name = get(g:, 'which_key_default_group_name', '+prefix')$/;"	v
g:which_key_disable_default_offset	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_disable_default_offset = get(g:, 'which_key_disable_default_offset', 0)$/;"	v
g:which_key_fallback_to_native_key	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_fallback_to_native_key = get(g:, 'which_key_fallback_to_native_key', 0)$/;"	v
g:which_key_flatten	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_flatten = get(g:, 'which_key_flatten', 1)$/;"	v
g:which_key_floating_relative_win	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_floating_relative_win = get(g:, 'which_key_floating_relative_win', 0)$/;"	v
g:which_key_hspace	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_hspace = get(g:, 'which_key_hspace', 5)$/;"	v
g:which_key_ignore_invalid_key	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_ignore_invalid_key = get(g:, 'which_key_ignore_invalid_key', 1)$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map =  {}$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.G = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.S = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.T = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.a = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.b = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.f = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.g = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.k = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.l = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.s = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.t = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map.w = {$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['.'] = [ ':e $MYVIMRC'                        , 'open init' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map[';'] = [ ':Commands'                          , 'commands' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['='] = [ '<C-W>='                             , 'balance windows' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['?'] = 'search word'$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['W'] = [ 'w'                                  , 'write' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['\/'] = [ ':call Comment()'                    , 'comment' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['d'] = [ ':Bdelete'                           , 'delete buffer']$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['e'] = [ ':CocCommand explorer'               , 'explorer' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['h'] = [ '<C-W>s'                             , 'split below']$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['m'] = [ ':call WindowSwap#EasyWindowSwap()'  , 'move window' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['n'] = [ ':let @\/ = ""'                       , 'no highlight' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['p'] = [ ':Files'                             , 'search files' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['q'] = [ 'q'                                  , 'quit' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['r'] = [ ':RnvimrToggle'                      , 'ranger' ]$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['u'] = [ ':UndotreeToggle'                    , 'undo tree']$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['v'] = [ '<C-W>v'                             , 'split right']$/;"	v
g:which_key_map	keys/which-key.vim	/^let g:which_key_map['z'] = [ 'Goyo'                               , 'zen' ]$/;"	v
g:which_key_max_size	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_max_size = get(g:, 'which_key_max_size', 0)$/;"	v
g:which_key_position	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_position = get(g:, 'which_key_position', 'botright')$/;"	v
g:which_key_run_map_on_popup	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_run_map_on_popup = get(g:, 'which_key_run_map_on_popup', 1)$/;"	v
g:which_key_sep	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_sep = get(g:, 'which_key_sep', '→')$/;"	v
g:which_key_sep	keys/which-key.vim	/^let g:which_key_sep = '→'$/;"	v
g:which_key_sort_horizontal	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_sort_horizontal = get(g:, 'which_key_sort_horizontal', 0)$/;"	v
g:which_key_timeout	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_timeout = get(g:, 'which_key_timeout', &timeoutlen)$/;"	v
g:which_key_use_floating_win	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_use_floating_win = (exists('*nvim_open_win') || exists('*popup_create')) && get(g:, 'which_key_use_floating_win', 1)$/;"	v
g:which_key_use_floating_win	keys/which-key.vim	/^let g:which_key_use_floating_win = 0$/;"	v
g:which_key_vertical	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_vertical = get(g:, 'which_key_vertical', 0)$/;"	v
g:windowswap_map_keys	autoload/plugged/vim-windowswap/plugin/WindowSwap.vim	/^   let g:windowswap_map_keys = 1$/;"	v
g:windowswap_map_keys	plug-config/window-swap.vim	/^let g:windowswap_map_keys = 0 "prevent default bindings$/;"	v
g:windowswap_mapping_deprecation_notice	autoload/plugged/vim-windowswap/plugin/WindowSwap.vim	/^   let g:windowswap_mapping_deprecation_notice = 1$/;"	v
g:xtabline_lazy	plug-config/xtabline.vim	/^let g:xtabline_lazy = 1$/;"	v
g:xtabline_settings	plug-config/xtabline.vim	/^let g:xtabline_settings = {}$/;"	v
g:xtabline_settings	plug-config/xtabline.vim	/^let g:xtabline_settings.enable_mappings = 0$/;"	v
g:xtabline_settings	plug-config/xtabline.vim	/^let g:xtabline_settings.enable_persistance = 0$/;"	v
g:xtabline_settings	plug-config/xtabline.vim	/^let g:xtabline_settings.indicators = {$/;"	v
g:xtabline_settings	plug-config/xtabline.vim	/^let g:xtabline_settings.show_right_corner = 0$/;"	v
g:xtabline_settings	plug-config/xtabline.vim	/^let g:xtabline_settings.tabline_modes = ['buffers', 'tabs']$/;"	v
gA	autoload/plugged/vim-radical/plugin/radical.vim	/^  nmap gA <Plug>RadicalView$/;"	m
gS	plug-config/sneak.vim	/^map gS <Plug>Sneak_,$/;"	m
gather_candidates	autoload/plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Source
gbrowse	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gbrowse()$/;"	f
gc	autoload/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	autoload/plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	vscode/settings.vim	/^nmap gc  <Plug>VSCodeCommentary$/;"	m
gc	vscode/settings.vim	/^omap gc  <Plug>VSCodeCommentary$/;"	m
gcc	autoload/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcc	vscode/settings.vim	/^nmap gcc <Plug>VSCodeCommentaryLine$/;"	m
gcu	autoload/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	plug-config/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
getById	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.getById = function(id){$/;"	m	class:FileManager
getByPath	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.getByPath = function(path){$/;"	m	class:FileManager
getByWebPath	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.getByWebPath = function(path){$/;"	m	class:FileManager
getBytes	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytes() []byte {$/;"	f
getBytesInternal	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytesInternal(buffer []byte, nonblock bool) []byte {$/;"	f
getCurrentFile	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.getCurrentFile = function(){$/;"	m	class:FileManager
getCurrentHtmlFile	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.getCurrentHtmlFile = function(){$/;"	m	class:FileManager
getEditorRoot	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.getEditorRoot = function(){$/;"	m	class:FileManager
getEnv	autoload/plugged/fzf/src/tui/light.go	/^func getEnv(name string, defaultValue int) int {$/;"	f
getGitWorkdir	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:getGitWorkdir(ntRoot) abort$/;"	f
getGruvColor	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^function! s:getGruvColor(group)$/;"	f
getIndicator	autoload/plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:getIndicator(status) abort$/;"	f
getStatusKey	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! s:getStatusKey(x, y) abort$/;"	f
getUniqueID	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:getUniqueID() abort$/;"	f
get_accented_line	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
get_airline_themes	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_array	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_background_colors	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
get_browser_command	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:get_browser_command() abort$/;"	f
get_buf_far_ctx	autoload/plugged/far.vim/autoload/far.vim	/^function! s:get_buf_far_ctx(bufnr) abort "{{{$/;"	f
get_buffer_data	autoload/plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_buffer_options	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function get_buffer_options(buf)$/;"	f
get_clear_priority	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_codi	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:get_codi(key, ...)$/;"	f
get_codi_dict	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:get_codi_dict(...)$/;"	f
get_color	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
get_color	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
get_color	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:get_color(group, attr)$/;"	f
get_color_map	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
get_comment_format	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_contexts_under_cursor	autoload/plugged/far.vim/autoload/far.vim	/^function! s:get_contexts_under_cursor() abort "{{{$/;"	f
get_counts	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
get_current_filename	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:get_current_filename(no) abort$/;"	f
get_cursor_pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_cursor_pos():$/;"	f
get_deep_extends	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_diagnostics	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
get_dot_vim	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_dot_vim():$/;"	f
get_foreground_colors	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_colors(group) abort$/;"	f
get_foreground_fallback_colors	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_fallback_colors(type)$/;"	f
get_git_root	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
get_git_status_output	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_status_output(workdir) abort$/;"	f
get_git_version	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_version() abort$/;"	f
get_highlight_patterns	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:get_highlight_patterns(line, cursor, end, targets) abort$/;"	f
get_hl	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_hl(group, what, mode) abort$/;"	f
get_hunks_changes	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
get_hunks_coc	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
get_hunks_empty	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
get_hunks_gitgutter	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
get_hunks_signify	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
get_index_as_string	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:get_index_as_string() abort$/;"	f
get_lists	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:get_lists() abort$/;"	f
get_mark_pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_mark_pos(name):$/;"	f
get_matching_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def get_matching_snippets($/;"	m	class:SnippetDictionary
get_mode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
get_number	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
get_opt	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:get_opt(option, ...)$/;"	f
get_option	autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_random_offset	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:get_random_offset(max) abort$/;"	f
get_raw_map_info	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:get_raw_map_info(key) abort$/;"	f
get_register	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:get_register() abort$/;"	f
get_section	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_separator_change	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
get_separator_change_with_end	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, sep_size, alt_sep_size)$/;"	f
get_seperator	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_snippets($/;"	m	class:SnippetSource
get_syn	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_tabstops	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_term_size	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def get_term_size (self):$/;"	m	class:PrettyText
get_transitioned_seperator	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_wintype	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:get_wintype() abort$/;"	f
get_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
get_wrappers	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^function! s:get_wrappers() abort$/;"	f
getch	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f
getch	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f
getchar	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:getchar() abort$/;"	f
getline	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
getnchars	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! s:getnchars(n, mode) abort$/;"	f
getopt	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^def getopt (argv):$/;"	f
getpage	autoload/plugged/vim-autoformat/samples/python.py	/^    def getpage(self,url):     $/;"	m	class:SuckerThread
getpos	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
gettime	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:gettime(time) abort$/;"	f
gg	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  normal gg$/;"	m
gi	plug-config/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __gid_t gid_t;$/;"	t
gist#Gist	autoload/plugged/vim-gist/autoload/gist.vim	/^  function! gist#Gist(...) abort$/;"	f
gist#Gist	autoload/plugged/vim-gist/autoload/gist.vim	/^function! gist#Gist(count, bang, line1, line2, ...) abort$/;"	f
gist#list	autoload/plugged/vim-gist/autoload/gist.vim	/^function! gist#list(user, ...) abort$/;"	f
gist#list_recursively	autoload/plugged/vim-gist/autoload/gist.vim	/^function! gist#list_recursively(user, ...) abort$/;"	f
gists	autoload/plugged/vim-gist/autoload/gist.vim	/^    let gists = gists + webapi#json#decode(res.content)$/;"	v
git__finalize_vim	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:git__finalize_vim(ch) dict abort$/;"	f
git__spawn	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! s:git__spawn(args, on_exit) dict abort$/;"	f
git_cmd_failure	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! s:git_cmd_failure(git) abort$/;"	f
git_diff	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff(...)$/;"	f
git_diff_staged	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged(...)$/;"	f
git_dir	autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
git_local_branch	autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
git_origin_branch	autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
git_origin_url	autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
git_revision	autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
git_supports_command_line_config_override	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
gitgutter	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#buffer_disable	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_disable() abort$/;"	f
gitgutter#buffer_enable	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_enable() abort$/;"	f
gitgutter#buffer_toggle	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_toggle() abort$/;"	f
gitgutter#debug#debug	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#diff_highlight#common_prefix	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_prefix(a, b)$/;"	f
gitgutter#diff_highlight#common_suffix	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_suffix(a, b, start)$/;"	f
gitgutter#diff_highlight#lcs	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#lcs(s1, s2)$/;"	f
gitgutter#diff_highlight#process	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! gitgutter#diff_highlight#process(hunk_body)$/;"	f
gitgutter#diff_highlight#split	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#split(str, delimiter)$/;"	f
gitgutter#disable	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#fold#disable	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#disable()$/;"	f
gitgutter#fold#enable	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#enable()$/;"	f
gitgutter#fold#foldtext	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#foldtext()$/;"	f
gitgutter#fold#is_changed	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#is_changed()$/;"	f
gitgutter#fold#level	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#level(lnum)$/;"	f
gitgutter#fold#toggle	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#toggle()$/;"	f
gitgutter#highlight#define_highlights	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#highlight#linenr_disable	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_disable() abort$/;"	f
gitgutter#highlight#linenr_enable	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_enable() abort$/;"	f
gitgutter#highlight#linenr_toggle	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_toggle() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#in_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#in_hunk(lnum)$/;"	f
gitgutter#hunk#increment_lines_added	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#next_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage(...) abort$/;"	f
gitgutter#hunk#summary	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#process_buffer	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#quickfix	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#quickfix()$/;"	f
gitgutter#setup_maps	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#setup_maps()$/;"	f
gitgutter#sign#clear_signs	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#reset	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#get_diff_base	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#get_diff_base(bufnr)$/;"	f
gitgutter#utility#getbufvar	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#has_repo_path	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_repo_path(bufnr)$/;"	f
gitgutter#utility#is_active	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr, continuation) abort$/;"	f
gitgutter#utility#setbufvar	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
gitmessenger#blame#new	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^function! gitmessenger#blame#new(file, line, opts) abort$/;"	f
gitmessenger#close_popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#close_popup(bufnr) abort$/;"	f
gitmessenger#git#new	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! gitmessenger#git#new(cmd, dir) abort$/;"	f
gitmessenger#git#root_dir	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^function! gitmessenger#git#root_dir(from) abort$/;"	f
gitmessenger#history#new	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! gitmessenger#history#new(filepath) abort$/;"	f
gitmessenger#into_popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#into_popup(bufnr) abort$/;"	f
gitmessenger#new	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#new(file, line, bufnr, ...) abort$/;"	f
gitmessenger#popup#close_current_popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! gitmessenger#popup#close_current_popup() abort$/;"	f
gitmessenger#popup#new	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! gitmessenger#popup#new(contents, opts) abort$/;"	f
gitmessenger#scroll	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! gitmessenger#scroll(bufnr, map) abort$/;"	f
gitstatus#doctor#Say	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! gitstatus#doctor#Say() abort$/;"	f
gitstatus#getIndicator	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#getIndicator(status) abort$/;"	f
gitstatus#isWin	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#isWin() abort$/;"	f
gitstatus#job#Spawn	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! gitstatus#job#Spawn(name, cmd, opts) abort$/;"	f
gitstatus#listener#New	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! gitstatus#listener#New(opts) abort$/;"	f
gitstatus#log#NewLogger	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! gitstatus#log#NewLogger(level) abort$/;"	f
gitstatus#shouldConceal	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#shouldConceal() abort$/;"	f
gitstatus#util#BuildGitStatusCommand	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitStatusCommand(root, opts) abort$/;"	f
gitstatus#util#BuildGitWorkdirCommand	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitWorkdirCommand(root, opts) abort$/;"	f
gitstatus#util#FormatPath	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^        function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#FormatPath	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^    function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#ParseGitStatusLine	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLine(statusLine, opts) abort$/;"	f
gitstatus#util#ParseGitStatusLines	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLines(root, statusLines, opts) abort$/;"	f
gitstatus#util#UpdateParentDirsStatus	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#UpdateParentDirsStatus(cache, root, pathStr, statusKey, opts) abort$/;"	f
gl	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gl(buf, visual)$/;"	f
gld	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gld() range$/;"	f
glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
glob_rules	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def glob_rules(root, rules):$/;"	f
go	autoload/plugged/fzf/test/test_go.rb	/^  def go(args)$/;"	f
go	autoload/plugged/vim-autoformat/samples/python.py	/^    def go(self,event=None):     $/;"	m	class:App
go	autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
goto_original_window	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:goto_original_window()$/;"	f
goyo#execute	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! goyo#execute(bang, dim)$/;"	f
goyo_off	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_off()$/;"	f
goyo_on	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_on(dim)$/;"	f
gr	plug-config/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gr	vscode/settings.vim	/^nnoremap gr <Cmd>call VSCodeNotify('editor.action.goToReferences')<CR>$/;"	m
green	syntax/java.vim	/^let green = "#98c379"$/;"	v
gregorian	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:gregorian(jd)$/;"	f
grep_version	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
group	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^      let group = airline#extensions#tabline#group_of_bufnr(buffers, nr) . "_right"$/;"	v
group_not_done	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:group_not_done(list, name)$/;"	f
grouping	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *grouping;$/;"	m	struct:lconv
gruvbox#hls_hide	autoload/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_hide()$/;"	f
gruvbox#hls_show	autoload/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_show()$/;"	f
gruvbox#hls_toggle	autoload/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_toggle()$/;"	f
gruvbox#invert_signs_toggle	autoload/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#invert_signs_toggle()$/;"	f
gs	plug-config/sneak.vim	/^map gs <Plug>Sneak_;$/;"	m
gsub	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guess	autoload/plugged/far.vim/test/guess.py	/^    guess = int(raw_input('Take a guess: '))$/;"	v
guess	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:guess(lines) abort$/;"	f
guess_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
guesses_made	autoload/plugged/far.vim/test/guess.py	/^guesses_made = 0$/;"	v
gui2cui	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
gv	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gv(bang, visual, line1, line2, args) abort$/;"	f
gv#sha	autoload/plugged/gv.vim/plugin/gv.vim	/^function! gv#sha(...)$/;"	f
gv#shellwords	autoload/plugged/gv.vim/plugin/gv.vim	/^function! gv#shellwords(arg)$/;"	f
gvcomplete	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gvcomplete(a, l, p) abort$/;"	f
gy	plug-config/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
h	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:l
handleEditorCommand	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.handleEditorCommand = function(command, data){$/;"	m	class:Server
handleFileRequest	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.handleFileRequest = function(request, response){$/;"	m	class:Server
handleLeftClick	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
handleMiddleMouse	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
handle_action	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_char_on_start_is_ok	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:handle_char_on_start_is_ok(c) abort$/;"	f
handle_context	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_context(tail, line_index):$/;"	f
handle_double_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:handle_double_hunk(modified_lines)$/;"	f
handle_extends	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_extends(tail, line_index):$/;"	f
handle_extra_highlight	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:handle_extra_highlight(state) abort$/;"	f
handle_input	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:handle_input(input) " {{{$/;"	f
handler._addDomElement	autoload/plugged/bracey.vim/server/htmlfile.js	/^	handler._addDomElement = function(elem){$/;"	c
handler._setEnd	autoload/plugged/bracey.vim/server/htmlfile.js	/^	handler._setEnd = function(elem){$/;"	f	function:diffParsedHtml
handler.onprocessinginstruction	autoload/plugged/bracey.vim/server/htmlfile.js	/^	handler.onprocessinginstruction = function(name, data){$/;"	c
has	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:has(dir, identifier)$/;"	f
hasOwnProperty	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };$/;"	m	class:return
hasPrefix	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:hasPrefix(text, prefix) abort$/;"	f
hasPreviewAction	autoload/plugged/fzf/src/terminal.go	/^func hasPreviewAction(opts *Options) bool {$/;"	f
hasPreviewFlags	autoload/plugged/fzf/src/terminal.go	/^func hasPreviewFlags(template string) (slot bool, plus bool, query bool) {$/;"	f
hasPreviewWindow	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f
hasPreviewer	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewer() bool {$/;"	f
has_any	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
has_children	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:has_children(input) abort$/;"	f
has_cjk	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def has_cjk(s):$/;"	f
has_fresh_changes	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
has_option	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_version	autoload/plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
head_tail	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
health#coc#check	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
health#floaterm#check	autoload/plugged/vim-floaterm/autoload/health/floaterm.vim	/^function! health#floaterm#check() abort$/;"	f
health#gitmessenger#check	autoload/plugged/git-messenger.vim/autoload/health/gitmessenger.vim	/^function! health#gitmessenger#check() abort$/;"	f
help	autoload/plugged/fzf/bin/fzf-tmux	/^help() {$/;"	f
help	autoload/plugged/fzf/install	/^help() {$/;"	f
help	autoload/plugged/fzf/src/options.go	/^func help(code int) {$/;"	f
help	autoload/plugged/fzf/uninstall	/^help() {$/;"	f
help	autoload/plugged/vim-floaterm/bin/floaterm.cmd	/^:help$/;"	l
helptag_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
hide_cursor	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:hide_cursor() abort$/;"	f
hide_linenr	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_linenr()$/;"	f
hide_statusline	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_statusline()$/;"	f
highlight	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^    def highlight(self) -> None:$/;"	m	class:Source
highlightFromGroup	autoload/plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:highlightFromGroup(group) abort$/;"	f
highlight_buffer	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function highlight_buffer(buf, ns, lines, line_start, options)$/;"	f
highlight_keys	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
highlight_name_for_change	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
history	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
history__back	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__back() dict abort$/;"	f
history__forward	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__forward() dict abort$/;"	f
history__history_no	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__history_no() dict abort$/;"	f
history__load	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__load(index) dict abort$/;"	f
history__push	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__push() dict abort$/;"	f
history__save	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^function! s:history__save() dict abort$/;"	f
history_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
history_source	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
hl	autoload/plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	autoload/plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	autoload/plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hl_group_exists	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group)$/;"	f
hl_skipped	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^function! s:hl_skipped(force, bufnr, timer) abort$/;"	f
hl_skipped	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/skipped.vim	/^function! s:hl_skipped(bufnr, timer) abort$/;"	f
hl_skipped	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/skipped.vim	/^function! s:hl_skipped(bufnr, timer) abort$/;"	f
hl_skipped_wrap	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^function! s:hl_skipped_wrap(force, bufnr, timer) abort$/;"	f
hl_skipped_wrap	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/skipped.vim	/^function! s:hl_skipped_wrap(bufnr, timer) abort$/;"	f
hl_skipped_wrap	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/skipped.vim	/^function! s:hl_skipped_wrap(bufnr, timer) abort$/;"	f
hl_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! s:hl_symbols(force, bufnr, timer) abort$/;"	f
hl_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/symbols.vim	/^function! s:hl_symbols(bufnr, timer) abort$/;"	f
hl_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/symbols.vim	/^function! s:hl_symbols(bufnr, timer) abort$/;"	f
hl_symbols_to_positions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! s:hl_symbols_to_positions(symbols) abort$/;"	f
hl_symbols_wrap	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! s:hl_symbols_wrap(force, bufnr, timer) abort$/;"	f
hl_symbols_wrap	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/symbols.vim	/^function! s:hl_symbols_wrap(bufnr, timer) abort$/;"	f
hl_symbols_wrap	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/symbols.vim	/^function! s:hl_symbols_wrap(bufnr, timer) abort$/;"	f
hostname	autoload/plugged/bracey.vim/server/test/server.js	/^			hostname: 'localhost',$/;"	p	class:send.options
hsl_fn   	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	hsl_fn   = false;        -- CSS hsl() and hsla() functions$/;"	f
hsl_fn   	lua/plug-colorizer.lua	/^	  hsl_fn   = true;         -- CSS hsl() and hsla() functions$/;"	f
hsl_function_parser 	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	hsl_function_parser = function(line, i)$/;"	f
hsl_to_rgb	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function hsl_to_rgb(h, s, l)$/;"	f
htmlfile	autoload/plugged/bracey.vim/server/filemanager.js	/^var htmlfile = require(".\/htmlfile.js");$/;"	v
htmlparser	autoload/plugged/bracey.vim/server/htmlfile.js	/^		htmlparser.DomHandler.prototype.onprocessinginstruction.call(this, name, data);$/;"	c
htmlparser	autoload/plugged/bracey.vim/server/htmlfile.js	/^var htmlparser = require("htmlparser2");$/;"	v
htmlparser.DomHandler	autoload/plugged/bracey.vim/server/htmlfile.js	/^		htmlparser.DomHandler.prototype._addDomElement.call(this, elem);$/;"	c
htobe16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	39;"	d
htobe16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	55;"	d
htobe32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	44;"	d
htobe32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	60;"	d
htobe64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	49;"	d
htobe64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	65;"	d
htole16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	40;"	d
htole16	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	56;"	d
htole32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	45;"	d
htole32	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	61;"	d
htole64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	50;"	d
htole64	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	66;"	d
http	autoload/plugged/bracey.vim/server/server.js	/^var http = require("http");$/;"	v
http	autoload/plugged/bracey.vim/server/test/server.js	/^var http = require('http');$/;"	v
httpRequest	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.httpRequest = function(request, response){$/;"	m	class:Server
hue_to_rgb	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function hue_to_rgb(p, q, t)$/;"	f
hunk_op	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op, ...)$/;"	f
hypot	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1916;"	d
hypotf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1921;"	d
hypotl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1926;"	d
i	autoload/plugged/vim-autoformat/samples/fortran.f90	/^      in/;"	k	type:test_type
i	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  in/;"	v	program:example_prog
i	autoload/plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	autoload/plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i3config_ft_detection	themes/syntax.vim	/^aug i3config_ft_detection$/;"	a
iS	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
icons	autoload/plugged/vista.vim/syntax/vista.vim	/^let icons = join(values(g:vista#renderer#icons), '\\|')$/;"	v
icons	autoload/plugged/vista.vim/syntax/vista_kind.vim	/^let icons = join(values(g:vista#renderer#icons), '\\|')$/;"	v
id_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __id_t id_t;$/;"	t
idtype_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@waitflags.h	/^} idtype_t;$/;"	t	typeref:enum:__anon11
if	plug-config/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
ignores	autoload/plugged/ultisnips/test/test_Selection.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	autoload/plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	autoload/plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	autoload/plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
in_hunk_preview_window	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:in_hunk_preview_window()$/;"	f
incrementstring	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:incrementstring(string,offset,count)$/;"	f
indent_to_spaces	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
indent_to_spaces	autoload/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
index	autoload/plugged/bracey.vim/server/sorting_test.js	/^		'index': index,$/;"	p	class:newAction
index	autoload/plugged/vim-startify/autoload/startify.vim	/^    let index = s:get_index_as_string()$/;"	v
indexAt	autoload/plugged/fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f
index_to_char	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function index_to_char(index)$/;"	f
infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
infoDefault	autoload/plugged/fzf/src/options.go	/^	infoDefault infoStyle = iota$/;"	c
infoHidden	autoload/plugged/fzf/src/options.go	/^	infoHidden$/;"	c
infoInline	autoload/plugged/fzf/src/options.go	/^	infoInline$/;"	c
infoStyle	autoload/plugged/fzf/src/options.go	/^type infoStyle int$/;"	t
init	autoload/plugged/fzf/src/ansi.go	/^func init() {$/;"	f
init	autoload/plugged/fzf/src/constants.go	/^func init() {$/;"	f
init	autoload/plugged/fzf/src/options.go	/^func init() {$/;"	f
init	autoload/plugged/fzf/src/pattern.go	/^func init() {$/;"	f
init	autoload/plugged/fzf/src/pattern_test.go	/^func init() {$/;"	f
init	autoload/plugged/fzf/src/terminal.go	/^func init() {$/;"	f
init	autoload/plugged/fzf/src/tui/tui.go	/^func init() {$/;"	f
init	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
initCustomOpenArgs	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
initPalette	autoload/plugged/fzf/src/tui/tui.go	/^func initPalette(theme *ColorTheme) {$/;"	f
initPlatform	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f
initPlatform	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f
initScreen	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) initScreen() {$/;"	f
initTheme	autoload/plugged/fzf/src/tui/tui.go	/^func initTheme(theme *ColorTheme, baseTheme *ColorTheme, forceBlack bool) {$/;"	f
initVariable	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:initVariable(var, value) abort$/;"	f
initVariable	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
init_env	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:init_env()$/;"	f
init_hl	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! s:init_hl() abort$/;"	f
init_pad	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:init_pad(command)$/;"	f
initialDelay	autoload/plugged/fzf/src/constants.go	/^	initialDelay      = 20 * time.Millisecond$/;"	c
initialDelayTac	autoload/plugged/fzf/src/constants.go	/^	initialDelayTac   = 100 * time.Millisecond$/;"	c
initial_line	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	autoload/plugged/fzf/test/test_go.rb	/^  def initialize(shell = :bash)$/;"	f	class:Tmux
initialize	autoload/plugged/vim-autoformat/samples/ruby.rb	/^  def initialize(path)$/;"	f	class:Settings
initialize	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^function s:initialize() abort$/;"	f
initialize_exit_code	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:initialize_exit_code() abort$/;"	f
initialize_trie	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function initialize_trie()$/;"	f
initializetime	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:initializetime(time)$/;"	f
inject_snippet	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
ino64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __ino64_t ino64_t;$/;"	t
ino_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __ino64_t ino_t;$/;"	t
ino_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __ino_t ino_t;$/;"	t
inputPrompt	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
inputreplacement	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
install_keymap	autoload/plugged/vim-floaterm/plugin/floaterm.vim	/^function! s:install_keymap()$/;"	f
install_plugin	autoload/plugged/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
installcocextensions	utils/install-docker.sh	/^installcocextensions() { \\$/;"	f
installcocextensions	utils/install.sh	/^installcocextensions() { \\$/;"	f
installextrapackages	utils/install-docker.sh	/^installextrapackages() { \\$/;"	f
installextrapackages	utils/install.sh	/^installextrapackages() { \\$/;"	f
installnode	utils/install-docker.sh	/^installnode() { \\$/;"	f
installnode	utils/install.sh	/^installnode() { \\$/;"	f
installnodearch	utils/install-docker.sh	/^installnodearch() { \\$/;"	f
installnodearch	utils/install.sh	/^installnodearch() { \\$/;"	f
installnodemac	utils/install-docker.sh	/^installnodemac() { \\$/;"	f
installnodemac	utils/install.sh	/^installnodemac() { \\$/;"	f
installnodeubuntu	utils/install-docker.sh	/^installnodeubuntu() { \\$/;"	f
installnodeubuntu	utils/install.sh	/^installnodeubuntu() { \\$/;"	f
installonarch	utils/install-docker.sh	/^installonarch() { \\$/;"	f
installonarch	utils/install.sh	/^installonarch() { \\$/;"	f
installonmac	utils/install-docker.sh	/^installonmac() { \\$/;"	f
installonmac	utils/install.sh	/^installonmac() { \\$/;"	f
installonubuntu	utils/install-docker.sh	/^installonubuntu() { \\$/;"	f
installonubuntu	utils/install.sh	/^installonubuntu() { \\$/;"	f
installpip	utils/install-docker.sh	/^installpip() { \\$/;"	f
installpip	utils/install.sh	/^installpip() { \\$/;"	f
installpiponarch	utils/install-docker.sh	/^installpiponarch() { \\$/;"	f
installpiponarch	utils/install.sh	/^installpiponarch() { \\$/;"	f
installpiponmac	utils/install-docker.sh	/^installpiponmac() { \\$/;"	f
installpiponmac	utils/install.sh	/^installpiponmac() { \\$/;"	f
installpiponubuntu	utils/install-docker.sh	/^installpiponubuntu() { \\$/;"	f
installpiponubuntu	utils/install.sh	/^installpiponubuntu() { \\$/;"	f
installplugins	utils/install-docker.sh	/^installplugins() { \\$/;"	f
installplugins	utils/install.sh	/^installplugins() { \\$/;"	f
installpynvim	utils/install-docker.sh	/^installpynvim() { \\$/;"	f
installpynvim	utils/install.sh	/^installpynvim() { \\$/;"	f
instantiate	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
int16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-intn.h	/^typedef __int16_t int16_t;$/;"	t
int16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT16_TYPE__ int16_t;$/;"	t
int24_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT24_TYPE__ int24_t;$/;"	t
int32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-intn.h	/^typedef __int32_t int32_t;$/;"	t
int32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT32_TYPE__ int32_t;$/;"	t
int40_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT40_TYPE__ int40_t;$/;"	t
int48_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT48_TYPE__ int48_t;$/;"	t
int56_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT56_TYPE__ int56_t;$/;"	t
int64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-intn.h	/^typedef __int64_t int64_t;$/;"	t
int64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT64_TYPE__ int64_t;$/;"	t
int8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-intn.h	/^typedef __int8_t int8_t;$/;"	t
int8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INT8_TYPE__ int8_t;$/;"	t
int_curr_symbol	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *int_curr_symbol;$/;"	m	struct:lconv
int_fast16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef int			int_fast16_t;$/;"	t
int_fast16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef long int		int_fast16_t;$/;"	t
int_fast16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least16_t int_fast16_t;$/;"	t
int_fast24_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int24_t int_fast24_t;$/;"	t
int_fast32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef int			int_fast32_t;$/;"	t
int_fast32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef long int		int_fast32_t;$/;"	t
int_fast32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least32_t int_fast32_t;$/;"	t
int_fast40_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int40_t int_fast40_t;$/;"	t
int_fast48_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int48_t int_fast48_t;$/;"	t
int_fast56_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int56_t int_fast56_t;$/;"	t
int_fast64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef long int		int_fast64_t;$/;"	t
int_fast64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef long long int		int_fast64_t;$/;"	t
int_fast64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least64_t int_fast64_t;$/;"	t
int_fast8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef signed char		int_fast8_t;$/;"	t
int_fast8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least8_t int_fast8_t;$/;"	t
int_frac_digits	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_frac_digits;		\/* Int'l fractional digits.  *\/$/;"	m	struct:lconv
int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __int_least16_t int_least16_t;$/;"	t
int_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least16_t int_least16_t;$/;"	t
int_least24_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int24_t int_least24_t;$/;"	t
int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __int_least32_t int_least32_t;$/;"	t
int_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least32_t int_least32_t;$/;"	t
int_least40_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int40_t int_least40_t;$/;"	t
int_least48_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int48_t int_least48_t;$/;"	t
int_least56_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef int56_t int_least56_t;$/;"	t
int_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __int_least64_t int_least64_t;$/;"	t
int_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least64_t int_least64_t;$/;"	t
int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __int_least8_t int_least8_t;$/;"	t
int_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __int_least8_t int_least8_t;$/;"	t
int_n_cs_precedes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_n_cs_precedes;$/;"	m	struct:lconv
int_n_sep_by_space	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_n_sep_by_space;$/;"	m	struct:lconv
int_n_sign_posn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_n_sign_posn;$/;"	m	struct:lconv
int_p_cs_precedes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_p_cs_precedes;$/;"	m	struct:lconv
int_p_sep_by_space	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_p_sep_by_space;$/;"	m	struct:lconv
int_p_sign_posn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char int_p_sign_posn;$/;"	m	struct:lconv
interactive	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def interactive (self, way):$/;"	m	class:TaskManager
interpretCode	autoload/plugged/fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) *ansiState {$/;"	f
intmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __intmax_t		intmax_t;$/;"	t
intmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INTMAX_TYPE__  intmax_t;$/;"	t
intptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef int			intptr_t;$/;"	t
intptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef long int		intptr_t;$/;"	t
intptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __INTPTR_TYPE__ intptr_t;$/;"	t
invoke_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
is	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:is(dir, identifier)$/;"	f
is24	autoload/plugged/fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f
isAlphabet	autoload/plugged/fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f
isAscii	autoload/plugged/fzf/src/algo/algo.go	/^func isAscii(runes []rune) bool {$/;"	f
isEOF	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:isEOF(data) abort$/;"	f
isExecuteAction	autoload/plugged/fzf/src/options.go	/^func isExecuteAction(str string) actionType {$/;"	f
isNumeric	autoload/plugged/fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f
isPreviewEnabled	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f
is_added	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
is_branch_empty	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty() abort$/;"	f
is_buffer_attached	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function is_buffer_attached(buf)$/;"	f
is_buffer_changed_outside	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	autoload/plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_excluded_window	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_file_buffer	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
is_focused	autoload/plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_in_skiplist	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:is_in_skiplist(arg) abort$/;"	f
is_killed	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_modified	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
is_modified_and_added	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
is_modified_and_removed	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_process_running	autoload/plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_removed	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
is_set	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_set	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_special_key	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:is_special_key(key) abort$/;"	f
is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
is_virtual_text_enabled	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:is_virtual_text_enabled()$/;"	f
isabsolute	autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
isalnum	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isalnum);$/;"	v
isalnum_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isalnum_l);$/;"	v
isalnum_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	304;"	d
isalpha	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isalpha);$/;"	v
isalpha_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isalpha_l);$/;"	v
isalpha_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	305;"	d
isascii	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	225;"	d
isascii_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	319;"	d
isblank	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isblank);$/;"	v
isblank_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isblank_l);$/;"	v
isblank_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	316;"	d
iscntrl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (iscntrl);$/;"	v
iscntrl_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (iscntrl_l);$/;"	v
iscntrl_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	306;"	d
isdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isdigit);$/;"	v
isdigit_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isdigit_l);$/;"	v
isdigit_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	307;"	d
isgraph	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isgraph);$/;"	v
isgraph_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isgraph_l);$/;"	v
isgraph_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	309;"	d
isinf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1931;"	d
isinff	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1936;"	d
isinfl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1941;"	d
islower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (islower);$/;"	v
islower_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (islower_l);$/;"	v
islower_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	308;"	d
isnan	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1946;"	d
isnanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1951;"	d
isnanl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1956;"	d
isprint	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isprint);$/;"	v
isprint_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isprint_l);$/;"	v
isprint_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	310;"	d
ispunct	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (ispunct);$/;"	v
ispunct_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (ispunct_l);$/;"	v
ispunct_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	311;"	d
isspace	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isspace);$/;"	v
isspace_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isspace_l);$/;"	v
isspace_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	312;"	d
isupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isupper);$/;"	v
isupper_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isupper_l);$/;"	v
isupper_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	313;"	d
isxdigit	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype (isxdigit);$/;"	v
isxdigit_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__exctype_l (isxdigit_l);$/;"	v
isxdigit_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	314;"	d
it_interval	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_itimerspec.h	/^    struct timespec it_interval;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec
it_value	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_itimerspec.h	/^    struct timespec it_value;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec
itemLine	autoload/plugged/fzf/src/terminal.go	/^type itemLine struct {$/;"	t
item_count	autoload/plugged/fzf/test/test_go.rb	/^          def item_count$/;"	f	class:Tmux.until
itemno	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
iter	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, normalize bool, forward bool, pattern []rune, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f
iter_primes	autoload/plugged/far.vim/test/prime.py	/^def iter_primes():$/;"	f
itimerspec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_itimerspec.h	/^struct itimerspec$/;"	s
j	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer :: r,i,j,/;"	v	program:example_prog
jd	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:jd(year,mon,day)$/;"	f
jitcnt	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t jitcnt;	\/* jitter limit exceeded (ro) *\/$/;"	m	struct:timex
jitter	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t jitter;	\/* pps jitter (us) (ro) *\/$/;"	m	struct:timex
jk	keys/mappings.vim	/^  inoremap jk <Esc>$/;"	m
job	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let job = term_getjob(bufnr)$/;"	v
job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
job_id	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let job_id = termopen(a:cmd, {$/;"	v
job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
join	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:join(...) abort$/;"	f
joinTokens	autoload/plugged/fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) string {$/;"	f
jump	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
jumpAcceptEnabled	autoload/plugged/fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c
jumpDisabled	autoload/plugged/fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c
jumpEnabled	autoload/plugged/fzf/src/terminal.go	/^	jumpEnabled$/;"	c
jumpMode	autoload/plugged/fzf/src/terminal.go	/^type jumpMode int$/;"	t
jumpToChild	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
jumpToFirstChild	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
jumpToLastChild	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
jumpToNextHunk	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
jumpToNextSibling	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
jumpToParent	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
jumpToPrevHunk	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
jumpToPrevSibling	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
jumpToRoot	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
jumpToSibling	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
jump_backwards	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jump_to_tab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
k	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer :: r,i,j,k,/;"	v	program:example_prog
keyMatch	autoload/plugged/fzf/src/terminal.go	/^func keyMatch(key int, event tui.Event) bool {$/;"	f
key_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
key_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __key_t key_t;$/;"	t
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	autoload/plugged/ultisnips/test/test_Autocommands.py	/^    keys = ($/;"	v	class:Autocommands
keys	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a\\na"$/;"	v	class:Autotrigger_CanMatchContext
keys	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "oouu trig b" + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "teüst" + EX$/;"	v	class:Snippet_With_Umlauts
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = "ööuu trig b" + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	autoload/plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_With_Mirror
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + "1"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + JF + "input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_CanTakeNonAsciiCharacters
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillBeExpandedToInlineSelection
keys	autoload/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
keys	autoload/plugged/ultisnips/test/test_Completion.py	/^    keys = ($/;"	v	class:Completion_SimpleExample_ECR
keys	autoload/plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	autoload/plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "foo" + JF + "com" + COMPL_KW + JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_UseContext
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportError
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "i" + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_SnippetPriority
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "first line\\n\\n\\n\\n\\n\\nthird line" + ESC + "3k0itest" + EX + ESC + "u6j"$/;"	v	class:Undo_RemoveWholeSnippet
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + "feh" + ESC + "uuuu"$/;"	v	class:Undo_CompletelyUndoSnippet
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + ESC + "u"$/;"	v	class:Undo_ChangesInPlaceholder
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "u"$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "uu"$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + "test" + EX + ESC + "u" + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + BS + JF + "Int" + JF + "body"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "aaaaa" + JF + BS + JF + "3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:DeleteSnippetInsertion1
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	autoload/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nhallo" + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + BS + ESC + "o" + ESC + "P"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	autoload/plugged/ultisnips/test/test_Fixes.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
keys	autoload/plugged/ultisnips/test/test_Fixes.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
keys	autoload/plugged/ultisnips/test/test_Fixes.py	/^    keys = "test" + EX + "foo"$/;"	v	class:ShiftWidthZero
keys	autoload/plugged/ultisnips/test/test_Fixes.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
keys	autoload/plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	autoload/plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	autoload/plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + "Ball"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "\\n" + "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "foo"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX + "m1" + EX + "\\nHallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longersnippet that should wrap properly"$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "blah" + ", bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + ESC$/;"	v
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:Python_SnipRvCanBeNonText
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 3 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 4 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 7 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "text" + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this" + 2 * ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	autoload/plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	autoload/plugged/ultisnips/test/test_Plugin.py	/^    keys = ($/;"	v	class:Plugin_SuperTab_SimpleTest
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "again" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "a" + 4 * ARR_L + JF + "hallo" + JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "m" + EX + "a" + 6 * ARR_L + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	autoload/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	autoload/plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v
keys	autoload/plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	autoload/plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	autoload/plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "def" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "2\\n"$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + JF + "hi"$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "[]" + ARR_L + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\n3" + ARR_U + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x" + JF + "y" + JF + JF + "z"$/;"	v	class:SnippetActions_CanModifyParentBody
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x"$/;"	v	class:SnippetActions_EnsureIndent
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "x" + JF + "y"$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "blah" + JF + "n" + EX + JF + "pass"$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "p" + EX + JF + "z"$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_MoveVisual
keys	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test " + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ($/;"	v	class:SnippetPriorities_ClearedByChild
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "haselnut" + 2 * ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World" + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "blub" + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "\\n" + JF + "t"$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End" + JB + "yes" + JF + "Begin" + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB + JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	autoload/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "ab"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test\\ntest\\ntest" + ESC + "V2k" + EX + "test" + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	autoload/plugged/ultisnips/test/test_Transformation.py	/^    keys = ($/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v
keys	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v
keys	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:AddNewSnippetSource
keys	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict1
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_LineSelect_DedentLine
keys	autoload/plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	autoload/plugged/ultisnips/test/vim_test_case.py	/^    keys = ""$/;"	v	class:VimTestCase
keyword_spacing	autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
kf	plug-config/coc.vim	/^omap kf <Plug>(coc-funcobj-i)$/;"	m
kill	autoload/plugged/fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
killPreview	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) killPreview(code int) {$/;"	f
kj	keys/mappings.vim	/^  inoremap kj <Esc>$/;"	m
l	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer :: r,i,j,k,l,/;"	v	program:example_prog
l:winnr	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let l:winnr = winnr()$/;"	v
languageclient_refresh	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
lastChunk	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f
lastGoto	autoload/plugged/bracey.vim/server/server.js	/^var lastGoto = '';$/;"	v
lastSelection	autoload/plugged/bracey.vim/server/frontend.js	/^	var lastSelection = '';$/;"	v
lastSelector	autoload/plugged/bracey.vim/server/server.js	/^var lastSelector = undefined;$/;"	v
last_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let last_buffer = len(b.buffers) - 1$/;"	v
last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
launch	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	autoload/plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	autoload/plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
layoutDefault	autoload/plugged/fzf/src/options.go	/^	layoutDefault layoutType = iota$/;"	c
layoutReverse	autoload/plugged/fzf/src/options.go	/^	layoutReverse$/;"	c
layoutReverseList	autoload/plugged/fzf/src/options.go	/^	layoutReverseList$/;"	c
layoutType	autoload/plugged/fzf/src/options.go	/^type layoutType int$/;"	t
lazy	autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
lconv	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^struct lconv$/;"	s
lcs	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:lcs(s1, s2)$/;"	f
ldexpf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1961;"	d
ldexpl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1966;"	d
ldiv_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^  } ldiv_t;$/;"	t	typeref:struct:__anon44
le16toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	42;"	d
le16toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	58;"	d
le32toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	47;"	d
le32toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	63;"	d
le64toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	52;"	d
le64toh	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@endian.h	68;"	d
leave_with_wait	autoload/plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
left	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
legacy_airline_ale_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
let_codi	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:let_codi(key, val, ...)$/;"	f
letterincrement	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:letterincrement(string,offset,increment)$/;"	f
lf_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/lf.vim	/^function! s:lf_callback(...) abort$/;"	f
limit	autoload/plugged/vim-gist/autoload/gist.vim	/^      let limit = s:get_lastpage(res)$/;"	v
line_adjustment_for_current_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
line_handler	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
line_index	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
linechars	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
link_fzf_in_path	autoload/plugged/fzf/install	/^link_fzf_in_path() {$/;"	f
list	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:list(fugitive_repo, log_opts)$/;"	f
list_snippets	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
literals	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  inline namespace literals {$/;"	n	namespace:std
lldiv_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^  } lldiv_t;$/;"	t	typeref:struct:__anon45
load_ignore_rules	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def load_ignore_rules(file_path):$/;"	f
load_ini_file	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^def load_ini_file (ininame, codec = None):$/;"	f
load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
load_tasks	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def load_tasks (self):$/;"	m	class:configure
loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loaded_nerd_tree	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_vim_devicons	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_devicons() abort$/;"	f
loaded_vim_nerdtree_syntax_highlight	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_syntax_highlight() abort$/;"	f
loaded_vim_nerdtree_tabs	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_tabs() abort$/;"	f
local f 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^			local f = function(...) return vim.api.nvim_call_function(k, {...}) end$/;"	f
local f 	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^			local f = function(...)$/;"	f
locale_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@locale_t.h	/^typedef __locale_t locale_t;$/;"	t
localtime	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:localtime(...)$/;"	f
localvar	autoload/plugged/emmet-vim/autoload/emmet.vim	/^function! s:localvar(current, key) abort$/;"	f
location	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
loff_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __loff_t loff_t;$/;"	t
log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:log(message)$/;"	f
log	autoload/plugged/emmet-vim/unittest.vim	/^function! s:log(msg)$/;"	f
log	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:log(msg) abort$/;"	f
log10f	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1971;"	d
log10l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1976;"	d
log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
log_opts	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:log_opts(fugitive_repo, bang, visual, line1, line2)$/;"	f
logf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1981;"	d
logger	autoload/plugged/far.vim/rplugin/python3/far/__init__.py	/^    logger = logging.getLogger('far')$/;"	v
logger	autoload/plugged/far.vim/rplugin/python3/far/sources/shell.py	/^logger = logging.getLogger("far")$/;"	v
logging,	autoload/plugged/far.vim/autoload/far/rpc.vim	/^import logging, vim$/;"	m
logl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1986;"	d
logn	autoload/plugged/emmet-vim/unittest.vim	/^function! s:logn(msg)$/;"	f
logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
long	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    long = int$/;"	v
lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
lsp_cxx_highlight	autoload/plugged/vim-lsp-cxx-highlight/plugin/vim-lsp-cxx-highlight.vim	/^augroup lsp_cxx_highlight$/;"	a
lsp_cxx_hl#client#LanguageClient#ccls_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/LanguageClient.vim	/^function! lsp_cxx_hl#client#LanguageClient#ccls_hl(params) abort$/;"	f
lsp_cxx_hl#client#LanguageClient#ccls_regions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/LanguageClient.vim	/^function! lsp_cxx_hl#client#LanguageClient#ccls_regions(params) abort$/;"	f
lsp_cxx_hl#client#LanguageClient#cquery_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/LanguageClient.vim	/^function! lsp_cxx_hl#client#LanguageClient#cquery_hl(params) abort$/;"	f
lsp_cxx_hl#client#LanguageClient#cquery_regions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/LanguageClient.vim	/^function! lsp_cxx_hl#client#LanguageClient#cquery_regions(params) abort$/;"	f
lsp_cxx_hl#client#LanguageClient#init	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/LanguageClient.vim	/^function! lsp_cxx_hl#client#LanguageClient#init() abort$/;"	f
lsp_cxx_hl#client#coc#init	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/coc.vim	/^function! lsp_cxx_hl#client#coc#init() abort$/;"	f
lsp_cxx_hl#client#nvim_lsp#ccls_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/nvim_lsp.vim	/^function! lsp_cxx_hl#client#nvim_lsp#ccls_hl(params) abort$/;"	f
lsp_cxx_hl#client#nvim_lsp#ccls_regions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/nvim_lsp.vim	/^function! lsp_cxx_hl#client#nvim_lsp#ccls_regions(params) abort$/;"	f
lsp_cxx_hl#client#nvim_lsp#cquery_hl	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/nvim_lsp.vim	/^function! lsp_cxx_hl#client#nvim_lsp#cquery_hl(params) abort$/;"	f
lsp_cxx_hl#client#nvim_lsp#cquery_regions	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/nvim_lsp.vim	/^function! lsp_cxx_hl#client#nvim_lsp#cquery_regions(params) abort$/;"	f
lsp_cxx_hl#client#nvim_lsp#init	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/nvim_lsp.vim	/^function! lsp_cxx_hl#client#nvim_lsp#init() abort$/;"	f
lsp_cxx_hl#client#vim_lsp#init	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^function! lsp_cxx_hl#client#vim_lsp#init() abort$/;"	f
lsp_cxx_hl#debug#cursor_symbol	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/debug.vim	/^function! lsp_cxx_hl#debug#cursor_symbol()$/;"	f
lsp_cxx_hl#debug#dump_ids	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/debug.vim	/^function! lsp_cxx_hl#debug#dump_ids()$/;"	f
lsp_cxx_hl#debug#dump_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/debug.vim	/^function! lsp_cxx_hl#debug#dump_symbols()$/;"	f
lsp_cxx_hl#debug#ignored_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/debug.vim	/^function! lsp_cxx_hl#debug#ignored_symbols()$/;"	f
lsp_cxx_hl#hl#check	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl.vim	/^function! lsp_cxx_hl#hl#check(...) abort$/;"	f
lsp_cxx_hl#hl#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl.vim	/^function! lsp_cxx_hl#hl#clear() abort$/;"	f
lsp_cxx_hl#hl#disable	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl.vim	/^function! lsp_cxx_hl#hl#disable() abort$/;"	f
lsp_cxx_hl#hl#enable	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl.vim	/^function! lsp_cxx_hl#hl#enable() abort$/;"	f
lsp_cxx_hl#hl#notify_skipped	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl.vim	/^function! lsp_cxx_hl#hl#notify_skipped(bufnr, skipped) abort$/;"	f
lsp_cxx_hl#hl#notify_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl.vim	/^function! lsp_cxx_hl#hl#notify_symbols(bufnr, symbols) abort$/;"	f
lsp_cxx_hl#hl_helpers#resolve_hl_group	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/hl_helpers.vim	/^function! lsp_cxx_hl#hl_helpers#resolve_hl_group(pkind, kind, storage) abort$/;"	f
lsp_cxx_hl#log	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#log(...) abort$/;"	f
lsp_cxx_hl#match#clear_matches	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match.vim	/^function! lsp_cxx_hl#match#clear_matches(matches) abort$/;"	f
lsp_cxx_hl#match#lsrange2match	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match.vim	/^function! lsp_cxx_hl#match#lsrange2match(range) abort$/;"	f
lsp_cxx_hl#match#matchaddpos_long	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match.vim	/^function! lsp_cxx_hl#match#matchaddpos_long(group, pos, priority) abort$/;"	f
lsp_cxx_hl#match#offsets2match	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match.vim	/^function! lsp_cxx_hl#match#offsets2match(offsets) abort$/;"	f
lsp_cxx_hl#match#skipped#check	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^function lsp_cxx_hl#match#skipped#check(force) abort$/;"	f
lsp_cxx_hl#match#skipped#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^function! lsp_cxx_hl#match#skipped#clear() abort$/;"	f
lsp_cxx_hl#match#skipped#notify	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^function! lsp_cxx_hl#match#skipped#notify(bufnr, skipped) abort$/;"	f
lsp_cxx_hl#match#symbols#check	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! lsp_cxx_hl#match#symbols#check(force) abort$/;"	f
lsp_cxx_hl#match#symbols#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! lsp_cxx_hl#match#symbols#clear() abort$/;"	f
lsp_cxx_hl#match#symbols#notify	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^function! lsp_cxx_hl#match#symbols#notify(bufnr, symbols) abort$/;"	f
lsp_cxx_hl#notify_json_rpc	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#notify_json_rpc(json) abort$/;"	f
lsp_cxx_hl#notify_skipped	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#notify_skipped(server, buffer, skipped) abort$/;"	f
lsp_cxx_hl#notify_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#notify_symbols(server, buffer, symbols) abort$/;"	f
lsp_cxx_hl#parse#normalize_symbols	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^function! lsp_cxx_hl#parse#normalize_symbols(symbols, is_ccls) abort$/;"	f
lsp_cxx_hl#profile_begin	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#profile_begin() abort$/;"	f
lsp_cxx_hl#profile_end	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#profile_end(begin, ...) abort$/;"	f
lsp_cxx_hl#textprop#gen_prop_id	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop.vim	/^function! lsp_cxx_hl#textprop#gen_prop_id() abort$/;"	f
lsp_cxx_hl#textprop#lsrange2prop	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop.vim	/^function! lsp_cxx_hl#textprop#lsrange2prop(buf, range) abort$/;"	f
lsp_cxx_hl#textprop#skipped#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/skipped.vim	/^function! lsp_cxx_hl#textprop#skipped#clear(bufnr, ...) abort$/;"	f
lsp_cxx_hl#textprop#skipped#highlight	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/skipped.vim	/^function! lsp_cxx_hl#textprop#skipped#highlight(bufnr) abort$/;"	f
lsp_cxx_hl#textprop#skipped#notify	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/skipped.vim	/^function! lsp_cxx_hl#textprop#skipped#notify(bufnr, skipped) abort$/;"	f
lsp_cxx_hl#textprop#symbols#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/symbols.vim	/^function! lsp_cxx_hl#textprop#symbols#clear(bufnr, ...) abort$/;"	f
lsp_cxx_hl#textprop#symbols#highlight	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/symbols.vim	/^function! lsp_cxx_hl#textprop#symbols#highlight(bufnr) abort$/;"	f
lsp_cxx_hl#textprop#symbols#notify	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/symbols.vim	/^function! lsp_cxx_hl#textprop#symbols#notify(bufnr, symbols) abort$/;"	f
lsp_cxx_hl#textprop#syn_prop_type_add	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop.vim	/^function! lsp_cxx_hl#textprop#syn_prop_type_add(name, resolved_hl_group) abort$/;"	f
lsp_cxx_hl#textprop_nvim#buf_add_hl_lsrange	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim.vim	/^function! lsp_cxx_hl#textprop_nvim#buf_add_hl_lsrange(buf, ns_id, hl_group,$/;"	f
lsp_cxx_hl#textprop_nvim#buf_add_hl_skipped_range	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim.vim	/^function! lsp_cxx_hl#textprop_nvim#buf_add_hl_skipped_range(buf, ns_id, hl_group,$/;"	f
lsp_cxx_hl#textprop_nvim#skipped#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/skipped.vim	/^function! lsp_cxx_hl#textprop_nvim#skipped#clear(bufnr) abort$/;"	f
lsp_cxx_hl#textprop_nvim#skipped#highlight	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/skipped.vim	/^function! lsp_cxx_hl#textprop_nvim#skipped#highlight(bufnr) abort$/;"	f
lsp_cxx_hl#textprop_nvim#skipped#notify	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/skipped.vim	/^function! lsp_cxx_hl#textprop_nvim#skipped#notify(bufnr, skipped) abort$/;"	f
lsp_cxx_hl#textprop_nvim#symbols#clear	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/symbols.vim	/^function! lsp_cxx_hl#textprop_nvim#symbols#clear(bufnr) abort$/;"	f
lsp_cxx_hl#textprop_nvim#symbols#highlight	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/symbols.vim	/^function! lsp_cxx_hl#textprop_nvim#symbols#highlight(bufnr) abort$/;"	f
lsp_cxx_hl#textprop_nvim#symbols#notify	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/symbols.vim	/^function! lsp_cxx_hl#textprop_nvim#symbols#notify(bufnr, symbols) abort$/;"	f
lsp_cxx_hl#verbose_log	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! lsp_cxx_hl#verbose_log(...) abort$/;"	f
m	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer :: r,i,j,k,l,my/;"	v	program:example_prog
m_char	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:m_char(char)$/;"	f
macros_expand	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def macros_expand (self):$/;"	m	class:configure
macros_replace	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def macros_replace (self, text, macros):$/;"	m	class:configure
main	.ccls-cache/@home@tablinux@.config@nvim/test.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^def main(args = None):$/;"	f
main	autoload/plugged/fzf/main.go	/^func main() {$/;"	f
main	autoload/plugged/fzf/main.go	/^package main$/;"	p
main	autoload/plugged/ultisnips/test_all.py	/^    def main():$/;"	f	function:setup_other_plugins
main	autoload/plugged/vim-autoformat/samples/java.java	/^public class Blastoff{ public static void main(String[] args) { public static void countdown(int n, int m) { if (n == 0) { System.out.println("Blastoff!"); } else { System.out.println(n); countdown(n - 1); } } }}$/;"	m	class:Blastoff
main	autoload/plugged/vim-autoformat/samples/python.py	/^def main():     $/;"	f
main	autoload/plugged/vista.vim/test/data/123.cpp	/^int main(void)$/;"	f
main	autoload/plugged/vista.vim/test/data/175.cpp	/^main(void)$/;"	f
main	test.cpp	/^int main(int argc, char *argv[]) {$/;"	f
mainloop	autoload/plugged/vim-autoformat/samples/python.py	/^    def mainloop(self):     $/;"	m	class:AppArray
makeChange	autoload/plugged/bracey.vim/server/frontend.js	/^	var makeChange = function(element, change){$/;"	f
makeSpace	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) makeSpace() {$/;"	f
make_box	autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
make_highlight_name	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function make_highlight_name(rgb, mode)$/;"	f
make_matcher	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function make_matcher(options)$/;"	f
manageEditorSize	vscode/settings.vim	/^function! s:manageEditorSize(...)$/;"	f
map	autoload/plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_keys	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
map_netrw_key	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  func! s:map_netrw_key(key) abort$/;"	f
map_reset_key	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! s:map_reset_key(key, mode) abort$/;"	f
mapleader	keys/mappings.vim	/^let mapleader=" "$/;"	v
maps	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:maps()$/;"	f
maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	autoload/plugged/ultisnips/test/test_Selection.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
maps_nop	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_nop()$/;"	f
maps_resize	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_resize()$/;"	f
mark_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
match	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function s:match(dir, pattern)$/;"	f
match	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:match(...)$/;"	f
matchChunk	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []Result, slab *util.Slab) []Result {$/;"	f
match_count	autoload/plugged/fzf/test/test_go.rb	/^          def match_count$/;"	f	class:Tmux.until
match_ft	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def match_ft (self, name):$/;"	m	class:configure
matchbegin	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
matched	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matchend	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
matches	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
max	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	588;"	d
maxDiff	autoload/plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
maxDisplayWidthCalc	autoload/plugged/fzf/src/terminal.go	/^	maxDisplayWidthCalc = 1024$/;"	c
maxInputBuffer	autoload/plugged/fzf/src/tui/light.go	/^	maxInputBuffer  = 10 * 1024$/;"	c
maxItems	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f
maxMulti	autoload/plugged/fzf/src/constants.go	/^	maxMulti          = math.MaxInt32$/;"	c
maxPartitions	autoload/plugged/fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c
maxPatternLength	autoload/plugged/fzf/src/constants.go	/^	maxPatternLength  = 300$/;"	c
max_align_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@__stddef_max_align_t.h	/^typedef double max_align_t;$/;"	t
max_align_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@__stddef_max_align_t.h	/^typedef long double max_align_t;$/;"	t
max_align_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@__stddef_max_align_t.h	/^} max_align_t;$/;"	t	typeref:struct:__anon23
maxerror	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t maxerror;	\/* maximum error (usec) *\/$/;"	m	struct:timex
mbrlen	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^__NTH (mbrlen (const char *__restrict __s, size_t __n,$/;"	f
mbstate_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@mbstate_t.h	/^typedef __mbstate_t mbstate_t;$/;"	t
merge	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function merge(...)$/;"	f
merge	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:merge(target, native) " {{{$/;"	f
merge_opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
mergedGet	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) Result {$/;"	f
mergerCacheMax	autoload/plugged/fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c
message	autoload/plugged/vim-autoformat/samples/python.py	/^    def message(self,format,*args):     $/;"	m	class:SuckerThread
message	autoload/plugged/vim-autoformat/samples/python.py	/^    def message(self,text,*args):     $/;"	m	class:App
metargs_complete	autoload/plugged/far.vim/autoload/far.vim	/^function! s:metargs_complete(arglead, cmdline, cursorpos, params_meta) abort$/;"	f
method	autoload/plugged/bracey.vim/server/test/server.js	/^			method: 'POST',$/;"	p	class:send.options
migrateVariable	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:migrateVariable(oldv, newv) abort$/;"	f
mime	autoload/plugged/bracey.vim/server/server.js	/^var mime = require("mime");$/;"	v
min	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	587;"	d
minHeight	autoload/plugged/fzf/src/terminal.go	/^	minHeight = 4$/;"	c
minItem	autoload/plugged/fzf/src/item.go	/^var minItem = Item{text: util.Chars{Index: -1}}$/;"	v
minRank	autoload/plugged/fzf/src/result.go	/^func minRank() Result {$/;"	f
minWidth	autoload/plugged/fzf/src/terminal.go	/^	minWidth  = 16$/;"	c
missing	autoload/plugged/vim-floaterm/bin/floaterm.cmd	/^:missing$/;"	l
mkdir_p	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:mkdir_p(path) abort$/;"	f
mkline	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def mkline(self, line="", indent=""):$/;"	m	class:SnippetUtil
mkline	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mkostemp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	748;"	d
mkostemps	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	770;"	d
mkstemp	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	694;"	d
mkstemps	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	716;"	d
mod	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:mod(a,b)$/;"	f
mode	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
mode_prompt_update	autoload/plugged/far.vim/autoload/far.vim	/^function! s:mode_prompt_update()  abort "{{{$/;"	f
mode_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __mode_t mode_t;$/;"	t
modes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  unsigned int modes;		\/* mode selector *\/$/;"	m	struct:timex
modf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1991;"	d
modff	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	1996;"	d
modfl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2001;"	d
modyear	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:modyear(y)$/;"	f
mon_decimal_point	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *mon_decimal_point;	\/* Decimal point character.  *\/$/;"	m	struct:lconv
mon_grouping	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *mon_grouping;		\/* Like `grouping' element (above).  *\/$/;"	m	struct:lconv
mon_thousands_sep	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *mon_thousands_sep;	\/* Thousands separator.  *\/$/;"	m	struct:lconv
mouseSequence	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) mouseSequence(sz *int) Event {$/;"	f
move	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f
move	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) move(y int, x int) {$/;"	f
move	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:move(flag)$/;"	f
move	autoload/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
movement_tick	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:movement_tick(_)$/;"	f
moveoldcoc	utils/install.sh	/^moveoldcoc() { \\$/;"	f
moveoldnvim	utils/install-docker.sh	/^moveoldnvim() { \\$/;"	f
moveoldnvim	utils/install.sh	/^moveoldnvim() { \\$/;"	f
msgq	autoload/plugged/vim-autoformat/samples/python.py	/^    msgq=None     $/;"	v	class:App
my_integer	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer :: r,i,j,k,l,my_integer,/;"	v	program:example_prog
mygroup	plug-config/coc.vim	/^augroup mygroup$/;"	a
n	autoload/plugged/vim-autoformat/samples/js2.js	/^(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=\/^\\+\/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(\/\\s+\/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=\/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)\/,j=\/\\S\/,k=\/^\\s+\/,l=\/\\s+$\/,m=\/^<(\\w+)\\s*\\\/?>(?:<\\\/\\1>)?$\/,n=\/^[\\],:{}\\s]*$\/,o=\/\\\\(?:["\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})\/g,p=\/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?\/g,q=\/(?:^|:|,)(?:\\s*\\[)+\/g,r=\/(webkit)[ \\\/]([\\w.]+)\/,s=\/(opera)(?:.*version)?[ \\\/]([\\w.]+)\/,t=\/(msie) ([\\w.]+)\/,u=\/(mozilla)(?:.*? rv:([\\w.]+))?\/,v=\/-([a-z]|[0-9])\/ig,w=\/^-ms-\/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text\/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=\/^[\\s\\xA0]+\/,l=\/[\\s\\xA0]+$\/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link\/><table><\/table><a href='\/a' style='top:1px;float:left;opacity:.55;'>a<\/a><input type='checkbox'\/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:\/top\/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="\/a",opacity:\/^0.55\/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav><\/:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'><\/div><\/div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td><\/td><\/tr><\/table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'><\/td><td>t<\/td><\/tr><\/table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'><\/div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=\/^(?:\\{.*\\}|\\[.*\\])$\/,k=\/([A-Z])\/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(\/\\D\/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=\/[\\n\\t\\r]\/g,p=\/\\s+\/,q=\/\\r\/g,r=\/^(?:button|input)$\/i,s=\/^(?:button|input|object|select|textarea)$\/i,t=\/^a(?:rea)?$\/i,u=\/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$\/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=\/^(?:textarea|input|select)$\/i,A=\/^([^\\.]*)?(?:\\.(.+))?$\/,B=\/(?:^|\\s)hover(\\.\\S+)?\\b\/,C=\/^key\/,D=\/^(?:mouse|contextmenu)|click\/,E=\/^(?:focusinfocus|focusoutblur)$\/,F=\/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$\/,G=function($/;"	f	function:S
n_cs_precedes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char n_cs_precedes;$/;"	m	struct:lconv
n_sep_by_space	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char n_sep_by_space;$/;"	m	struct:lconv
n_sign_posn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char n_sign_posn;$/;"	m	struct:lconv
name	autoload/plugged/far.vim/test/guess.py	/^name = raw_input('Hello! What is your name?\\n')$/;"	v
name_temp	autoload/plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
names	autoload/plug.vim	/^function! s:names(...)$/;"	f
negative_sign	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *negative_sign;		\/* Sign for negative values.  *\/$/;"	m	struct:lconv
neocomplete#sources#ultisnips#define	autoload/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define() abort$/;"	f
neoterm_id	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
neovim	autoload/plugged/vim-floaterm/bin/floaterm.cmd	/^:neovim$/;"	l
nerdtree#and	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#and(x,y) abort$/;"	f
nerdtree#checkForBrowse	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#compareNodePaths	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
nerdtreegitplugin	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
nested_exception	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^  class nested_exception$/;"	c	namespace:std
new	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:new(obj) abort$/;"	f
new	autoload/plugged/vim-bbye/plugin/bbye.vim	/^function! s:new(bang)$/;"	f
newElemIndex	autoload/plugged/bracey.vim/server/htmlfile.js	/^function newElemIndex(){$/;"	f
newFile	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.newFile = function(id, name, path, type, source){$/;"	m	class:FileManager
newItem	autoload/plugged/fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f
newJob	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:newJob(name, opts) abort$/;"	f
newRange	autoload/plugged/fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f
new_airline_ale_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
new_buffer_options	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function new_buffer_options(buf)$/;"	f
new_scratch_buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def new_scratch_buffer(text):$/;"	f
new_shell	autoload/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	autoload/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	autoload/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
next	autoload/plugged/fzf/src/history.go	/^func (h *History) next() string {$/;"	f
nextInt	autoload/plugged/fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f
nextString	autoload/plugged/fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f
next_sign_id	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
nlink_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __nlink_t nlink_t;$/;"	t
nnn_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/nnn.vim	/^function! s:nnn_callback(...) abort$/;"	f
noInfoLine	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) noInfoLine() bool {$/;"	f
no_unidecode_available	autoload/plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
node.Init	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:node.Init() abort$/;"	f
node.is_valid	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:node.is_valid() dict abort$/;"	f
node.new	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:node.new(bufnr) dict abort$/;"	f
node.to_string	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^function! s:node.to_string() dict abort$/;"	f
noexcept	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    nested_exception& operator=(const nested_exception&) noexcept = default;$/;"	m	class:std::nested_exception
noexcept	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    nested_exception(const nested_exception&) noexcept = default;$/;"	m	class:std::nested_exception
noexcept	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    virtual ~nested_exception() noexcept;$/;"	m	class:std::nested_exception
nonvr	autoload/plugged/vim-floaterm/bin/floaterm.cmd	/^:nonvr$/;"	l
normalizeRune	autoload/plugged/fzf/src/algo/algo.go	/^func normalizeRune(r rune) rune {$/;"	f
normalize_file_path	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def normalize_file_path(path: str) -> str:$/;"	f
normalized	autoload/plugged/fzf/src/algo/normalize.go	/^var normalized map[rune]rune = map[rune]rune{$/;"	v
normalizetime	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:normalizetime(time)$/;"	f
not_git_dir	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
notification_cb	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^function! s:notification_cb(server, data) abort$/;"	f
notify	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
notifyOnCont	autoload/plugged/fzf/src/terminal_unix.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f
notifyOnCont	autoload/plugged/fzf/src/terminal_windows.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f
notifyOnResize	autoload/plugged/fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
notifyOnResize	autoload/plugged/fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
notifyStop	autoload/plugged/fzf/src/terminal_unix.go	/^func notifyStop(p *os.Process) {$/;"	f
notifyStop	autoload/plugged/fzf/src/terminal_windows.go	/^func notifyStop(p *os.Process) {$/;"	f
notify_json_rpc	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! s:notify_json_rpc(json) abort$/;"	f
nr_bufnr	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:nr_bufnr(...)$/;"	f
ntabs_to_proper_indent	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
ntabs_to_proper_indent	autoload/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
nullptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  typedef decltype(nullptr)	nullptr_t;$/;"	t	namespace:std
nullptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	/^namespace std { typedef decltype(nullptr) nullptr_t; }$/;"	t	namespace:std
num	autoload/plugged/far.vim/test/odd.py	/^num = int(input("Enter a number: "))$/;"	v
numPartitionsMultiplier	autoload/plugged/fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c
number	autoload/plugged/far.vim/test/guess.py	/^number = random.randint(1, 20)$/;"	v
number	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
numberincrement	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:numberincrement(string,offset,increment)$/;"	f
numericPrefix	autoload/plugged/fzf/src/terminal.go	/^var numericPrefix *regexp.Regexp$/;"	v
nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
nvim_codi_clear_virtual_text	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:nvim_codi_clear_virtual_text()$/;"	f
nvim_codi_output_to_virtual_text	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:nvim_codi_output_to_virtual_text(bufnr, lines)$/;"	f
nvim_echo	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^local function nvim_echo(...)$/;"	f
nvim_mq_job_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
nvim_output_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
nvim_po_job_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
nvim_print	autoload/plugged/nvim-colorizer.lua/lua/colorizer/nvim.lua	/^local function nvim_print(...)$/;"	f
nvim_untracked_job_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
obj	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
obsolete	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:obsolete(var)$/;"	f
obsolete_gitgutter_signs_to_remove	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
off64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __off64_t off64_t;$/;"	t
off64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __off64_t off64_t;$/;"	t
off_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __off64_t off_t;$/;"	t
off_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __off_t off_t;$/;"	t
off_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __off64_t off_t;$/;"	t
off_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __off_t off_t;$/;"	t
offset	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t offset;	\/* time offset (usec) *\/$/;"	m	struct:timex
offset	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let offset = 13378$/;"	v
offsetPollTries	autoload/plugged/fzf/src/tui/light.go	/^	offsetPollTries = 10$/;"	c
offsetRegexp	autoload/plugged/fzf/src/tui/light.go	/^var offsetRegexp *regexp.Regexp = regexp.MustCompile("(.*)\\x1b\\\\[([0-9]+);([0-9]+)R")$/;"	v
offsetRegexpBegin	autoload/plugged/fzf/src/tui/light.go	/^var offsetRegexpBegin *regexp.Regexp = regexp.MustCompile("^\\x1b\\\\[[0-9]+;[0-9]+R")$/;"	v
offsetof	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	104;"	d
onCursorHold	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onCursorHold(fname)$/;"	f
onFileUpdate	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onFileUpdate(fname)$/;"	f
onGitStatusFailedCB	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusFailedCB(job) abort$/;"	f
onGitStatusSuccessCB	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusSuccessCB(job) abort$/;"	f
onGitWorkdirFailedCB	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirFailedCB(job) abort$/;"	f
onGitWorkdirSuccessCB	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirSuccessCB(job) abort$/;"	f
onNERDTreeDirChanged	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeDirChanged(path) abort$/;"	f
onNERDTreeInit	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeInit(path) abort$/;"	f
on_async_response	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
on_buf_enter	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_buf_enter(bufnr) abort$/;"	f
on_bufenter	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
on_close	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_close(popup) dict abort$/;"	f
on_colorscheme_changed	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_cursor_moved	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_cursor_moved() abort$/;"	f
on_cursor_moved	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
on_detach 	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^		on_detach = function()$/;"	f
on_error	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_error(errmsg) abort$/;"	f
on_exit	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
on_exit	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
on_exit	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  function! s:on_exit(_job, _data, _event) abort dict$/;"	f
on_exit_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
on_exit_mq	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
on_exit_nvim	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_exit_nvim(job, code, event) dict abort$/;"	f
on_exit_nvim	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
on_exit_po	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
on_exit_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
on_exit_vim	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_exit_vim(ch, code) dict abort$/;"	f
on_exit_vim	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
on_floaterm_close	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^function! s:on_floaterm_close(callback, job, data, ...) abort$/;"	f
on_floaterm_open	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:on_floaterm_open(bufnr, winid, opts) abort$/;"	f
on_focus_gained	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
on_init	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^    def on_init(self, context: UserContext) -> None:$/;"	m	class:Source
on_lines 	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^		on_lines = function(event_type, buf, changed_tick, firstline, lastline, new_lastline)$/;"	f
on_open	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:on_open(blame) dict abort$/;"	f
on_output_nvim	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_output_nvim(job, data, event) dict abort$/;"	f
on_output_vim	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    function! s:on_output_vim(event, ch, msg) dict abort$/;"	f
on_stderr	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
on_stderr	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
on_stderr_nvim	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, data, _event) dict abort$/;"	f
on_stderr_vim	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
on_stdout	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
on_stdout	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
on_stdout_nvim	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
on_stdout_vim	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
on_vimenter	autoload/plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimenter()$/;"	f
on_vimleavepre	autoload/plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimleavepre()$/;"	f
on_window_changed	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
onprocessinginstruction	autoload/plugged/bracey.vim/server/htmlfile.js	/^		htmlparser.DomHandler.prototype.onprocessinginstruction.call(this, name, data);$/;"	m	class:htmlparser.htmlparser
open	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
open	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
open	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:open(visual, ...)$/;"	f
openExplorer	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
openHSplit	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
openHSplitBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
openInNewTab	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
openInNewTabSilent	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
openNodeRecursively	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
openTtyIn	autoload/plugged/fzf/src/tui/light_unix.go	/^func openTtyIn() *os.File {$/;"	f
openTtyIn	autoload/plugged/fzf/src/tui/light_windows.go	/^func openTtyIn() *os.File {$/;"	f
openVSCodeCommandsInVisualMode	vscode/settings.vim	/^function! s:openVSCodeCommandsInVisualMode()$/;"	f
openVSplit	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
openVSplitBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
openWhichKeyInVisualMode	vscode/settings.vim	/^function! s:openWhichKeyInVisualMode()$/;"	f
open_browser	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:open_browser(url) abort$/;"	f
open_buffer	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:open_buffer(entry)$/;"	f
open_far_buff	autoload/plugged/far.vim/autoload/far.vim	/^function! s:open_far_buff(far_ctx, win_params) abort "{{{$/;"	f
open_hunk_preview_window	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:open_hunk_preview_window()$/;"	f
open_split_win	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:open_split_win() abort$/;"	f
opener	autoload/plugged/bracey.vim/script/bracey.py	/^opener = requests.build_opener(requests.ProxyHandler({}))$/;"	v
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_val
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_val
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_negate
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_pred
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator __it, _Value& __val)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_iter
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^	operator()(_Value& __val, _Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^        operator()(_Iterator1 __it1, _Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_iter
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      operator()(_Iterator __it, _Value& __val) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_equal_to_val
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      operator()(_Iterator __it, _Value& __val) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_val
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      operator()(_Iterator1 __it1, _Iterator2 __it2) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_equal_to_iter
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      operator()(_Iterator1 __it1, _Iterator2 __it2) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_iter
operator ()	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@predefined_ops.h	/^      operator()(_Value& __val, _Iterator __it) const$/;"	f	struct:__gnu_cxx::__ops::_Val_less_iter
operator bool	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^      explicit operator bool() const$/;"	f	class:std::__exception_ptr::exception_ptr
opfunc	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
opfunc2	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
opt	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
opt	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
optString	autoload/plugged/fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f
opt_async	autoload/plugged/codi.vim/autoload/codi.vim	/^  let opt_async = s:get_opt('async')$/;"	v
opt_autocmd	autoload/plugged/codi.vim/autoload/codi.vim	/^  let opt_autocmd = s:get_opt('autocmd')$/;"	v
option	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def option (self, section, key, default):$/;"	m	class:configure
option	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
option_set_to	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def option_set_to(name, new_value):$/;"	f
optionalNextString	autoload/plugged/fzf/src/options.go	/^func optionalNextString(args []string, i *int) (bool, string) {$/;"	f
optionalNumeric	autoload/plugged/fzf/src/options.go	/^func optionalNumeric(args []string, i *int, defaultValue int) int {$/;"	f
optionalRunes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) optionalRunes() []rune {$/;"	f
opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  let opts['sink*'] = remove(opts, 'sink')$/;"	v
opts	autoload/plugged/fzf/plugin/fzf.vim	/^    let opts['sink*'] = remove(opts, 'sink')$/;"	v
optsFor	autoload/plugged/fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f
orange	syntax/java.vim	/^let orange = "#d19a66" "special color for numbers$/;"	v
ordinalincrement	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:ordinalincrement(string,offset,increment)$/;"	f
ordinalize	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:ordinalize(number)$/;"	f
origin	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) origin() {$/;"	f
osascript	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:osascript(...) abort$/;"	f
output	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f
output	autoload/plugged/ultisnips/test/vim_test_case.py	/^    output = ""$/;"	v	class:VimTestCase
output	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
overflow	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) overflow(runes []rune, max int) bool {$/;"	f
overflow32	autoload/plugged/fzf/src/util/chars.go	/^	overflow32 uint32 = 0x80808080$/;"	c
overflow64	autoload/plugged/fzf/src/util/chars.go	/^	overflow64 uint64 = 0x8080808080808080$/;"	c
override	autoload/plugged/fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f
overwrite	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def p(self):$/;"	m	class:SnippetUtil
p	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:p(bang, ...)$/;"	f
p	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
p_cs_precedes	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char p_cs_precedes;$/;"	m	struct:lconv
p_sep_by_space	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char p_sep_by_space;$/;"	m	struct:lconv
p_sign_posn	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char p_sign_posn;$/;"	m	struct:lconv
page	autoload/plugged/vim-gist/autoload/gist.vim	/^    let page = page + 1$/;"	v
pane_width	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:pane_width()$/;"	f
panel.Hide	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.Hide() abort$/;"	f
panel.Init	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.Init() abort$/;"	f
panel.IsVisible	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.IsVisible() abort$/;"	f
panel.SetFocus	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.SetFocus() abort$/;"	f
param_proc	autoload/plugged/far.vim/autoload/far.vim	/^function! s:param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
parent	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:parent(dir)$/;"	f
parse	autoload/plugged/bracey.vim/server/htmlfile.js	/^function parse(inputSrc, include_index){$/;"	f	function:diffParsedHtml
parse	autoload/plugged/vim-autoformat/samples/ruby.rb	/^  def parse(settings)$/;"	f	class:Settings
parseAlgo	autoload/plugged/fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f
parseBorder	autoload/plugged/fzf/src/options.go	/^func parseBorder(str string, optional bool) tui.BorderShape {$/;"	f
parseEditorRequest	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.parseEditorRequest = function(data){$/;"	m	class:Server
parseHeight	autoload/plugged/fzf/src/options.go	/^func parseHeight(str string) sizeSpec {$/;"	f
parseInfoStyle	autoload/plugged/fzf/src/options.go	/^func parseInfoStyle(str string) infoStyle {$/;"	f
parseKeyChords	autoload/plugged/fzf/src/options.go	/^func parseKeyChords(str string, message string) map[int]string {$/;"	f
parseKeymap	autoload/plugged/fzf/src/options.go	/^func parseKeymap(keymap map[int][]action, str string) {$/;"	f
parseLayout	autoload/plugged/fzf/src/options.go	/^func parseLayout(str string) layoutType {$/;"	f
parseMargin	autoload/plugged/fzf/src/options.go	/^func parseMargin(margin string) [4]sizeSpec {$/;"	f
parseOptions	autoload/plugged/fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f
parsePlaceholder	autoload/plugged/fzf/src/terminal.go	/^func parsePlaceholder(match string) (bool, string, placeholderFlags) {$/;"	f
parsePreviewWindow	autoload/plugged/fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f
parsePrompt	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) parsePrompt(prompt string) (func(), int) {$/;"	f
parseSize	autoload/plugged/fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f
parseTerms	autoload/plugged/fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, normalize bool, str string) []termSet {$/;"	f
parseTheme	autoload/plugged/fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f
parseTiebreak	autoload/plugged/fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f
parseToggleSort	autoload/plugged/fzf/src/options.go	/^func parseToggleSort(keymap map[int][]action, str string) {$/;"	f
parse_and_instantiate	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_arg	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:parse_arg(arg)$/;"	f
parse_args	autoload/plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f	function:setup_other_plugins
parse_fn 	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^		parse_fn = function(line, i)$/;"	f
parse_hex	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function parse_hex(b)$/;"	f
parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_opts	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:parse_opts(opts) abort$/;"	f
part_of_diff	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:part_of_diff(hunk_diff, first, last)$/;"	f
partialResult	autoload/plugged/fzf/src/matcher.go	/^type partialResult struct {$/;"	t
partition	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:partition(text, sep)$/;"	f
paste	autoload/plugged/fzf/test/test_go.rb	/^  def paste(str)$/;"	f	class:Tmux
path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
path	autoload/plugged/bracey.vim/server/test/server.js	/^			path: '\/',$/;"	p	class:send.options
path2str	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:path2str(path) abort$/;"	f
path_join	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:path_join(home, name)$/;"	f
path_join	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^function! s:path_join(home, name) abort$/;"	f
path_win2unix	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def path_win2unix (self, path, prefix = '\/mnt'):$/;"	m	class:configure
pathcase	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:pathcase(path)$/;"	f
patterns_for	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^function! s:patterns_for(type) abort$/;"	f
peek	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
percent_or_hex	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function percent_or_hex(v)$/;"	f
perror	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def perror (self, color, text):$/;"	m	class:PrettyText
pid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@time.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __pid_t pid_t;$/;"	t
pipinstallueberzug	utils/install-docker.sh	/^pipinstallueberzug() { \\$/;"	f
pipinstallueberzug	utils/install.sh	/^pipinstallueberzug() { \\$/;"	f
placeCursor	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f
placeholder	autoload/plugged/fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v
placeholder	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
placeholderFlags	autoload/plugged/fzf/src/terminal.go	/^type placeholderFlags struct {$/;"	t
placematch	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:placematch(c, pos) abort$/;"	f
pluck	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plug_call	autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
plug_expand	autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
plug_fnamemodify	autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
plug_getcwd	autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
plug_tempname	autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin_cache_dir	autoload/plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	autoload/plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugins	autoload/plugged/ultisnips/test/test_Plugin.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	autoload/plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
po_output	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
point	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer, pointe/;"	v	program:example_prog
populate_hunk_preview_window	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:populate_hunk_preview_window(header, body)$/;"	f
popup	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:popup(opts) abort$/;"	f
popup__close	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__close() dict abort$/;"	f
popup__echo_help	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__echo_help() dict abort$/;"	f
popup__floating_win_opts	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__floating_win_opts(width, height) dict abort$/;"	f
popup__get_opener_winnr	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__get_opener_winnr() dict abort$/;"	f
popup__get_winnr	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__get_winnr() dict abort$/;"	f
popup__into	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__into() dict abort$/;"	f
popup__open	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__open() dict abort$/;"	f
popup__scroll	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__scroll(map) dict abort$/;"	f
popup__update	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__update() dict abort$/;"	f
popup__window_size	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^function! s:popup__window_size() dict abort$/;"	f
popup_cursor	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:popup_cursor(n) abort$/;"	f
popup_for	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^function! s:popup_for(bufnr) abort$/;"	f
popup_position	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:popup_position(config) abort$/;"	f
popup_support	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:popup_support()$/;"	f
port	autoload/plugged/bracey.vim/server/test/server.js	/^			port: port,$/;"	p	class:send.options
port	autoload/plugged/bracey.vim/server/test/server.js	/^	port: port,$/;"	p	class:serverSettings
port	autoload/plugged/bracey.vim/server/test/server.js	/^var port = 13378;$/;"	v
port_max	autoload/plugged/bracey.vim/plugin/bracey.vim	/^	let port_max = 65536$/;"	v
pos	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
pos2str	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/debug.vim	/^function! s:pos2str(pos) abort$/;"	f
posArray	autoload/plugged/fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f
posDown	autoload/plugged/fzf/src/options.go	/^	posDown$/;"	c
posLeft	autoload/plugged/fzf/src/options.go	/^	posLeft$/;"	c
posRight	autoload/plugged/fzf/src/options.go	/^	posRight$/;"	c
posUp	autoload/plugged/fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c
positive_sign	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *positive_sign;		\/* Sign for positive values.  *\/$/;"	m	struct:lconv
postProcessOptions	autoload/plugged/fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f
powf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2006;"	d
powl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2011;"	d
pp_ml	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:pp_ml(line)$/;"	f
pp_purs	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:pp_purs(line)$/;"	f
pp_r	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:pp_r(line)$/;"	f
pp_remove_esc	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:pp_remove_esc(line)$/;"	f
pp_remove_fat_arrow	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:pp_remove_fat_arrow(line)$/;"	f
ppos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
ppsfreq	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t ppsfreq;	\/* pps frequency (scaled ppm) (ro) *\/$/;"	m	struct:timex
precision	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t precision;	\/* clock precision (usec) (ro) *\/$/;"	m	struct:timex
prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
prepare	autoload/plugged/fzf/test/test_go.rb	/^  def prepare$/;"	f
prepend_opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
preprocess	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:preprocess(text, ...)$/;"	f
preprocess_and_parse	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:preprocess_and_parse(output, interpreter, num_lines)$/;"	f
present	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
preserve	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
preserve	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
prettify	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettify(obj) abort$/;"	f
prettifyDict	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyDict(obj, prefix, level, indent) abort$/;"	f
prettifyList	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyList(obj, prefix, level, indent) abort$/;"	f
prettify_selftest	autoload/plugged/vim-autoformat/samples/fortran.f90	/^module prettify_selftest$/;"	m
pretty	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^pretty = PrettyText()$/;"	v
prev_default_command	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let prev_default_command = $FZF_DEFAULT_COMMAND$/;"	v
preview	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
previewBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
previewCancelWait	autoload/plugged/fzf/src/constants.go	/^	previewCancelWait = 500 * time.Millisecond$/;"	c
previewNodeCurrent	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
previewNodeHSplit	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
previewNodeHSplitBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
previewNodeVSplit	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
previewNodeVSplitBookmark	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
previewOpts	autoload/plugged/fzf/src/options.go	/^type previewOpts struct {$/;"	t
previewRequest	autoload/plugged/fzf/src/terminal.go	/^type previewRequest struct {$/;"	t
previewResult	autoload/plugged/fzf/src/terminal.go	/^type previewResult struct {$/;"	t
preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
previewer	autoload/plugged/fzf/src/terminal.go	/^type previewer struct {$/;"	t
previous	autoload/plugged/fzf/src/history.go	/^func (h *History) previous() string {$/;"	f
print	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def print (self, color, text):$/;"	m	class:PrettyText
printAll	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f
printHeader	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f
printHighlighted	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result Result, attr tui.Attr, col1 tui.ColorPair, col2 tui.ColorPair, current bool, match bool) int {$/;"	f
printInfo	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f
printItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printItem(result Result, line int, i int, current bool) {$/;"	f
printList	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f
printPreview	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f
printPrompt	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f
printString	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) printString(text string, pair ColorPair, a Attr) {$/;"	f
print_color_trie	autoload/plugged/nvim-colorizer.lua/test/print-trie.lua	/^local function print_color_trie()$/;"	f
print_num	autoload/plugged/far.vim/test/very long directory name with spaces/very long file name also with spaces.py	/^def print_num(number):$/;"	f
print_section_header	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:print_section_header() abort$/;"	f
print_stack	autoload/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
print_table	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:print_table(rows, highmap)$/;"	f
print_trie_table	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function print_trie_table(s)$/;"	f
print_x	autoload/plugged/vista.vim/test/data/123.cpp	/^void print_x(void)$/;"	f
print_y	autoload/plugged/vista.vim/test/data/123.cpp	/^void print_y(void)$/;"	f
priority	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
proc	autoload/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def proc(rules_origin):$/;"	f
proc_pattern_args	autoload/plugged/far.vim/autoload/far.vim	/^function! s:proc_pattern_args(far_params, cmdargs) abort "{{{$/;"	f
process	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
processTabs	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f
process_added	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_hunk	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
process_modified	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_added	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_removed	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
process_removed	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
program_msys	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:program_msys(opts)$/;"	f
progressMinDuration	autoload/plugged/fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c
progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
project_root	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:project_root(name, strict)$/;"	f
project_sink	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:project_sink(line) abort$/;"	f
promptToDelBuffer	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
protector	autoload/plugged/fzf/src/protector/protector.go	/^package protector$/;"	p
protector	autoload/plugged/fzf/src/protector/protector_openbsd.go	/^package protector$/;"	p
prototype.add_raw	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
prototype.add_section	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
prototype.add_section_spaced	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
prototype.build	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.build	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.get_position	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
prototype.insert_raw	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
prototype.insert_section	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
prototype.insert_titles	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
prototype.split	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
prototype.try_insert_title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
pthread_attr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^typedef union pthread_attr_t pthread_attr_t;$/;"	t	typeref:union:pthread_attr_t
pthread_attr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^union pthread_attr_t$/;"	u
pthread_barrier_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_barrier_t;$/;"	t	typeref:union:__anon21
pthread_barrierattr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_barrierattr_t;$/;"	t	typeref:union:__anon22
pthread_cleanup_pop	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	557;"	d
pthread_cleanup_pop	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	606;"	d
pthread_cleanup_pop	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	661;"	d
pthread_cleanup_pop_restore_np	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	573;"	d
pthread_cleanup_pop_restore_np	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	626;"	d
pthread_cleanup_pop_restore_np	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	697;"	d
pthread_cleanup_push	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	551;"	d
pthread_cleanup_push	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	597;"	d
pthread_cleanup_push	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	640;"	d
pthread_cleanup_push_defer_np	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	565;"	d
pthread_cleanup_push_defer_np	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	614;"	d
pthread_cleanup_push_defer_np	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	675;"	d
pthread_cond_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_cond_t;$/;"	t	typeref:union:__anon18
pthread_condattr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_condattr_t;$/;"	t	typeref:union:__anon16
pthread_equal	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^__NTH (pthread_equal (pthread_t __thread1, pthread_t __thread2))$/;"	f
pthread_key_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^typedef unsigned int pthread_key_t;$/;"	t
pthread_mutex_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_mutex_t;$/;"	t	typeref:union:__anon17
pthread_mutexattr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_mutexattr_t;$/;"	t	typeref:union:__anon15
pthread_once_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^typedef int __ONCE_ALIGNMENT pthread_once_t;$/;"	t
pthread_rwlock_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_rwlock_t;$/;"	t	typeref:union:__anon19
pthread_rwlockattr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^} pthread_rwlockattr_t;$/;"	t	typeref:union:__anon20
pthread_spinlock_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^typedef volatile int pthread_spinlock_t;$/;"	t
pthread_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@pthreadtypes.h	/^typedef unsigned long int pthread_t;$/;"	t
ptrdiff_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  typedef __PTRDIFF_TYPE__	ptrdiff_t;$/;"	t	namespace:std
ptrdiff_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t
purple	syntax/java.vim	/^let purple = "#C678DD"$/;"	v
push	autoload/plugged/fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte) bool {$/;"	f
pushAdd	autoload/plugged/bracey.vim/server/htmlfile.js	/^	function pushAdd(fromRightIndex, toIndex){$/;"	f	function:pushChange
pushChange	autoload/plugged/bracey.vim/server/htmlfile.js	/^	function pushChange(fromIndex, toIndex, key){$/;"	f	function:diffParsedHtml
pushRemove	autoload/plugged/bracey.vim/server/htmlfile.js	/^	function pushRemove(index){$/;"	f	function:pushChange
pushd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
pyglob_param_proc	autoload/plugged/far.vim/autoload/far.vim	/^function! s:pyglob_param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
python_version	autoload/plugged/bracey.vim/script/bracey.py	/^python_version = int(sys.version[0])$/;"	v
qfpclass	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2016;"	d
quad_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __quad_t quad_t;$/;"	t
queryCache	autoload/plugged/fzf/src/cache.go	/^type queryCache map[string][]Result$/;"	t
queryCacheMax	autoload/plugged/fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c
quick_scope	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^  augroup quick_scope$/;"	a
quick_scope	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^augroup quick_scope$/;"	a
quick_scope#Aim	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#Aim(motion) abort$/;"	f
quick_scope#DoubleTap	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#DoubleTap() abort$/;"	f
quick_scope#HighlightLine	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#HighlightLine(direction, targets) abort$/;"	f
quick_scope#Ready	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#Ready() abort$/;"	f
quick_scope#Reload	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#Reload() abort$/;"	f
quick_scope#Toggle	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#Toggle() abort$/;"	f
quick_scope#UnhighlightLine	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! quick_scope#UnhighlightLine() abort$/;"	f
quick_scope#lazy_print#err	autoload/plugged/quick-scope/autoload/quick_scope/lazy_print.vim	/^function! quick_scope#lazy_print#err(message) abort$/;"	f
quick_scope#mapping#Restore	autoload/plugged/quick-scope/autoload/quick_scope/mapping.vim	/^function! quick_scope#mapping#Restore(mapping) abort$/;"	f
quot	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int quot;			\/* Quotient.  *\/$/;"	m	struct:__anon43
quot	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon44
quot	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    long long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon45
quoteEntry	autoload/plugged/fzf/src/terminal.go	/^func quoteEntry(entry string) string {$/;"	f
quoteEntryCmd	autoload/plugged/fzf/src/terminal.go	/^func quoteEntryCmd(entry string) string {$/;"	f
qux	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^    def qux(self):$/;"	m	class:Foo
qux1	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^    def qux1(self):$/;"	m	class:Foo
r	autoload/plugged/vim-autoformat/samples/fortran.f90	/^      re/;"	k	type:test_type
r	autoload/plugged/vim-autoformat/samples/fortran.f90	/^  integer /;"	v	program:example_prog
r1	autoload/plugged/vim-autoformat/samples/fortran.f90	/^real(kind=dp) :: r1,/;"	v	program:example_prog
r2	autoload/plugged/vim-autoformat/samples/fortran.f90	/^real(kind=dp) :: r1,   r2,/;"	v	program:example_prog
r3	autoload/plugged/vim-autoformat/samples/fortran.f90	/^real(kind=dp) :: r1,   r2,  r3,/;"	v	program:example_prog
r4	autoload/plugged/vim-autoformat/samples/fortran.f90	/^real(kind=dp) :: r1,   r2,  r3, r4,/;"	v	program:example_prog
r5	autoload/plugged/vim-autoformat/samples/fortran.f90	/^real(kind=dp) :: r1,   r2,  r3, r4, r5,/;"	v	program:example_prog
r6	autoload/plugged/vim-autoformat/samples/fortran.f90	/^real(kind=dp) :: r1,   r2,  r3, r4, r5,  r6$/;"	v	program:example_prog
radical#CoerceToBase	autoload/plugged/vim-radical/autoload/radical.vim	/^function! radical#CoerceToBase(to_base, count) abort$/;"	f
radical#NormalView	autoload/plugged/vim-radical/autoload/radical.vim	/^function! radical#NormalView(count) abort$/;"	f
radical#VisualView	autoload/plugged/vim-radical/autoload/radical.vim	/^function! radical#VisualView(count, visualmode) abort$/;"	f
rand	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
randResult	autoload/plugged/fzf/src/merger_test.go	/^func randResult() Result {$/;"	f
rand_deg	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int rand_deg;		\/* Degree of random number generator.  *\/$/;"	m	struct:random_data
rand_sep	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int rand_sep;		\/* Distance between front and rear.  *\/$/;"	m	struct:random_data
rand_type	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int rand_type;		\/* Type of random number generator.  *\/$/;"	m	struct:random_data
random_data	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^struct random_data$/;"	s
random_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
rangeEllipsis	autoload/plugged/fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c
range_to_matches	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match.vim	/^function! s:range_to_matches(s_line, s_char, e_line, e_char) abort$/;"	f
range_to_matches	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop.vim	/^function! s:range_to_matches(buf, s_line, s_char, e_line, e_char) abort$/;"	f
ranger_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/ranger.vim	/^function! s:ranger_callback(...) abort$/;"	f
reHighlight	autoload/plugged/bracey.vim/server/frontend.js	/^	var reHighlight = function(){$/;"	f
read	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^  cookie_read_function_t *read;		\/* Read bytes.  *\/$/;"	m	struct:_IO_cookie_io_functions_t
read	autoload/plugged/vim-autoformat/samples/ruby.rb	/^  def read(path)$/;"	f	class:Settings
readFiles	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) readFiles() bool {$/;"	f
readFromCommand	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) readFromCommand(shell *string, command string) bool {$/;"	f
readFromStdin	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) readFromStdin() bool {$/;"	f
read_ini	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def read_ini (self, ininame, codec = None):$/;"	m	class:configure
readerBufferSize	autoload/plugged/fzf/src/constants.go	/^	readerBufferSize       = 64 * 1024$/;"	c
readerPollIntervalMax	autoload/plugged/fzf/src/constants.go	/^	readerPollIntervalMax  = 50 * time.Millisecond$/;"	c
readerPollIntervalMin	autoload/plugged/fzf/src/constants.go	/^	readerPollIntervalMin  = 10 * time.Millisecond$/;"	c
readerPollIntervalStep	autoload/plugged/fzf/src/constants.go	/^	readerPollIntervalStep = 5 * time.Millisecond$/;"	c
readini	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:readini(source)$/;"	f
readonce	autoload/plugged/fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
reasons	autoload/plugged/bracey.vim/server/htmlfile.js	/^		reasons: [],$/;"	p	class:diff
recieve	autoload/plugged/bracey.vim/server/test/server.js	/^	recieve: function(callback){$/;"	m	class:web
recievers	autoload/plugged/bracey.vim/server/test/server.js	/^	recievers: []$/;"	p	class:web
record_diagnostics	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
red	syntax/java.vim	/^let red = "#E06C75"$/;"	v
redraw	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) redraw() {$/;"	f
redraw	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reduce_line	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
refresh	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f
refresh	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
refreshCurrent	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
refreshGitStatus	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:refreshGitStatus(name, workdir) abort$/;"	f
refreshRoot	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
register	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:register(line, index, type, cmd, path)$/;"	f
register	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:register() abort$/;"	f
register_snippet_source	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
register_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef int register_t __attribute__ ((__mode__ (__word__)));$/;"	t
register_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef int register_t;$/;"	t
regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
rehighlight_buffer	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function rehighlight_buffer(buf, options)$/;"	f
reindent	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relative	autoload/plugged/bracey.vim/server/filemanager.js	/^		relative: relativePath$/;"	p	class:createdFile.path
reload	autoload/plugged/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
reloadCSS	autoload/plugged/bracey.vim/server/frontend.js	/^	var reloadCSS = function(){$/;"	f
reload_all_buffers	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function reload_all_buffers()$/;"	f
reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
relsz	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:relsz(expr, limit)$/;"	f
rem	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int rem;			\/* Remainder.  *\/$/;"	m	struct:__anon43
rem	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon44
rem	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    long long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon45
remember_buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remove	autoload/plugged/fzf/uninstall	/^remove() {$/;"	f
removeHighlights	autoload/plugged/bracey.vim/server/frontend.js	/^	var removeHighlights = function(){$/;"	f
remove_layout	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
remove_line	autoload/plugged/fzf/uninstall	/^remove_line() {$/;"	f
remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_signs	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
renameBuffer	autoload/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
repeat	autoload/plugged/fzf/src/tui/light.go	/^func repeat(r rune, times int) string {$/;"	f
repeat#invalidate	autoload/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	autoload/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	autoload/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	autoload/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	autoload/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	autoload/plugged/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:replace(text, old, new)$/;"	f
replace	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replacePlaceholder	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) replacePlaceholder(template string, forcePlus bool, input string, list []*Item) string {$/;"	f
replacePlaceholder	autoload/plugged/fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, printsep string, forcePlus bool, query string, allItems []*Item) string {$/;"	f
replace_initial_text	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replaceinline	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:replaceinline(start,end,new)$/;"	f
replay_user_edits	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
repo_bare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
repo_dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_find	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
repo_git_chomp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_homepage	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:repo_homepage() abort$/;"	f
repo_prepare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
repo_rev_parse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
repo_tree	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
reqClose	autoload/plugged/fzf/src/terminal.go	/^	reqClose$/;"	c
reqHeader	autoload/plugged/fzf/src/terminal.go	/^	reqHeader$/;"	c
reqInfo	autoload/plugged/fzf/src/terminal.go	/^	reqInfo$/;"	c
reqJump	autoload/plugged/fzf/src/terminal.go	/^	reqJump$/;"	c
reqList	autoload/plugged/fzf/src/terminal.go	/^	reqList$/;"	c
reqPreviewDisplay	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c
reqPreviewEnqueue	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c
reqPreviewRefresh	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c
reqPrintQuery	autoload/plugged/fzf/src/terminal.go	/^	reqPrintQuery$/;"	c
reqPrompt	autoload/plugged/fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c
reqQuit	autoload/plugged/fzf/src/terminal.go	/^	reqQuit$/;"	c
reqRedraw	autoload/plugged/fzf/src/terminal.go	/^	reqRedraw$/;"	c
reqRefresh	autoload/plugged/fzf/src/terminal.go	/^	reqRefresh$/;"	c
reqReinit	autoload/plugged/fzf/src/terminal.go	/^	reqReinit$/;"	c
reqReset	autoload/plugged/fzf/src/matcher.go	/^	reqReset$/;"	c
reqRetry	autoload/plugged/fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c
request	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
request_async	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
require	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:require(predicate, required, ...)$/;"	f
requirement	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:requirement(what)$/;"	f
res	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let res = term_start(cmd, {$/;"	v
res	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^    let res = inputlist([a:title] + a:items)$/;"	v
res	autoload/plugged/vim-gist/autoload/gist.vim	/^    let res = webapi#http#get(url.'?page='.page, '', {'Authorization': auth})$/;"	v
reset	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	autoload/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_indent	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
reset_indent	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
reset_saved_secondary_highlight	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:reset_saved_secondary_highlight() abort$/;"	f
reset_summary	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
reset_tick	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
reset_untracked_cache	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
resizeWindows	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f
resize_pads	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:resize_pads()$/;"	f
resolve_ambiguity	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
restart	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) restart(command string) {$/;"	f
restore	autoload/plugged/codi.vim/autoload/codi.vim	/^      let restore .= ' | call setwinvar('.winnr.', "&'.opt.'", '.val.')'$/;"	v
restore	autoload/plugged/codi.vim/autoload/codi.vim	/^  let restore = 'call s:unlet_codi("restore")'$/;"	v
restoreTerminal	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) restoreTerminal() {$/;"	f
restoreTerminal	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) restoreTerminal() error {$/;"	f
restore_conceal_in_other_windows	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:restore_conceal_in_other_windows() abort$/;"	f
restore_conceal_matches	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:restore_conceal_matches() abort$/;"	f
restore_fold_state	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:restore_fold_state()$/;"	f
restore_shell	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
restore_unnamed_register	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
rethrow_if_nested	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    rethrow_if_nested(const _Ex& __ex)$/;"	f	namespace:std
rethrow_nested	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    rethrow_nested() const$/;"	f	class:std::nested_exception
retry	autoload/plug.vim	/^function! s:retry()$/;"	f
return	autoload/plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };$/;"	c
reuseWin	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
reverseStringArray	autoload/plugged/fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f
reverse_list	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
revert	autoload/plug.vim	/^function! s:revert()$/;"	f
revision	autoload/plugged/fzf/main.go	/^var revision string$/;"	v
rg_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/rg.vim	/^function! s:rg_callback(...) abort$/;"	f
rgb_fn   	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	rgb_fn   = false;        -- CSS rgb() and rgba() functions$/;"	f
rgb_fn   	lua/plug-colorizer.lua	/^	  rgb_fn   = true;         -- CSS rgb() and rgba() functions$/;"	f
rgb_function_parser 	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^	rgb_function_parser = function(line, i)$/;"	f
rgb_hex_parser	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function rgb_hex_parser(line, i, minlen, maxlen)$/;"	f
rhubarb	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^augroup rhubarb$/;"	a
rhubarb#Complete	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Complete(findstart, base) abort$/;"	f
rhubarb#FugitiveUrl	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#FugitiveUrl(...) abort$/;"	f
rhubarb#HomepageForUrl	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#HomepageForUrl(url) abort$/;"	f
rhubarb#JsonDecode	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonDecode(string) abort$/;"	f
rhubarb#JsonEncode	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonEncode(object) abort$/;"	f
rhubarb#RepoRequest	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoRequest(...) abort$/;"	f
rhubarb#RepoSearch	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoSearch(type, q) abort$/;"	f
rhubarb#Request	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Request(path, ...) abort$/;"	f
rhubarb#fugitive_url	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#fugitive_url(...) abort$/;"	f
rhubarb#homepage_for_url	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#homepage_for_url(url) abort$/;"	f
rhubarb#omnifunc	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#omnifunc(findstart, base) abort$/;"	f
rhubarb#repo_request	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_request(...) abort$/;"	f
rhubarb#repo_search	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_search(...) abort$/;"	f
rhubarb#request	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#request(...) abort$/;"	f
right	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
rmcup	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) rmcup() {$/;"	f
roman2arabic	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:roman2arabic(roman)$/;"	f
root	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let root = s:guess_root(a:path, a:markers)$/;"	v
root	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^  let root = s:guess_root(a:path, a:markers)$/;"	v
root	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:root()$/;"	f
rootdir	autoload/plugged/vim-autoformat/samples/python.py	/^    rootdir=None     $/;"	v	class:SuckerThread
rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^augroup rooter$/;"	a
rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rooter()$/;"	f
rootless	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rootless()$/;"	f
rp_hs	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:rp_hs(buf)$/;"	f
rp_php	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:rp_php(buf)$/;"	f
rp_purs	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:rp_purs(buf)$/;"	f
rp_py	autoload/plugged/codi.vim/autoload/codi/load.vim	/^function! s:rp_py(buf)$/;"	f
rpt	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! s:rpt(op, reverse) abort$/;"	f
rptr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int32_t *rptr;		\/* Rear pointer.  *\/$/;"	m	struct:random_data
rsize_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	/^typedef __SIZE_TYPE__ rsize_t;$/;"	t
rtp	autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
rubout	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f
run	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:run(opts)$/;"	f
run1	autoload/plugged/vim-autoformat/samples/python.py	/^    def run1(self,url):     $/;"	m	class:SuckerThread
runTest	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
running_on_windows	autoload/plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
rv	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  nmap s <Plug>Sneak_s$/;"	m
s.dosearch	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^  func! s.dosearch(...) abort " a:1 : extra search options$/;"	f
s.get_onscreen_searchpattern	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^  func! s.get_onscreen_searchpattern(w) abort$/;"	f
s.get_stopline	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^  func! s.get_stopline() abort$/;"	f
s.hasmatches	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^  func! s.hasmatches(n) abort$/;"	f
s.initpattern	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^  func! s.initpattern() abort$/;"	f
s:BASES	autoload/plugged/vim-radical/autoload/radical.vim	/^let s:BASES = {$/;"	v
s:Bookmark	autoload/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Creator	autoload/plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DefaultTagParser	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:DefaultTagParser = function('vista#parser#ctags#FromExtendedRaw')$/;"	v
s:DefaultTagParser	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:DefaultTagParser = function('vista#parser#ctags#FromJSON')$/;"	v
s:Event	autoload/plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FlagSet	autoload/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:Go	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:Job	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:Job = {$/;"	v
s:KeyMap	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:Left	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:Listener	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let s:Listener = {$/;"	v
s:Logger	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:Logger = {}$/;"	v
s:MenuController	autoload/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	autoload/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	autoload/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:Notifier	autoload/plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	autoload/plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	autoload/plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Right	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:SEP	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^let s:SEP = has('win32') ? '\\' : '\/'$/;"	v
s:SourcedFile	autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': type([])}$/;"	v
s:TYPE	autoload/plugged/vim-which-key/autoload/which_key.vim	/^let s:TYPE = {$/;"	v
s:TYPE	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TreeDirNode	autoload/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	autoload/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	autoload/plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:a2r	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:a2r = [[1000, 'm'], [900, 'cm'], [500, 'd'], [400, 'cd'], [100, 'c'],$/;"	v
s:accents	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:act_func_ref	autoload/plugged/far.vim/autoload/far.vim	/^let s:act_func_ref = {$/;"	v
s:activate	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:activate = ""$/;"	v
s:activated	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:activated = 0$/;"	v
s:active_winnr	autoload/plugged/vim-airline/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
s:addr_other	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') ? '-addr=other' : ''$/;"	v
s:addr_tabs	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:airline_a_commandline	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#0000ff' , '#0cff00' , 17  , 40 ]$/;"	v
s:airline_a_inactive	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_b_commandline	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_inactive	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_commandline	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_inactive	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_initialized	autoload/plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:aliases	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:aliases = codi#load#aliases()$/;"	v
s:aliases	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:aliases = {}$/;"	v
s:aligner	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^let s:aligner = {}$/;"	v
s:all_popups	autoload/plugged/git-messenger.vim/autoload/gitmessenger.vim	/^let s:all_popups = {}$/;"	v
s:ansi	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cyan': 36}$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "MacVim"$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "System Events"$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "Terminal"$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "iTerm2"$/;"	v
s:aqua	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:aqua   = s:getGruvColor('GruvboxAqua')$/;"	v
s:aqua	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:assert	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:async_code	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_code = 0$/;"	v
s:async_congest	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = 0$/;"	v
s:async_congest	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = has('patch-8.0.100')? 1 : 0$/;"	v
s:async_congest	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_congest = 0$/;"	v
s:async_data	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:async_data = {} " { id (nvim -> job, vim -> ch): { data } }$/;"	v
s:async_debug	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_debug = 0$/;"	v
s:async_efm	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_efm = &errorformat$/;"	v
s:async_head	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_head = 0$/;"	v
s:async_info	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_info = { 'text':"", 'post':'', 'postsave':'' }$/;"	v
s:async_jobs	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:async_jobs = {} " { bufnr: job }$/;"	v
s:async_nvim	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_nvim = has('nvim')? 1 : 0$/;"	v
s:async_ok	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:async_ok = has('job') && has('channel') || s:nvim$/;"	v
s:async_output	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_output = {}$/;"	v
s:async_quick	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = (v:version >= 800 || has('patch-7.4.1997'))? 1 : 0$/;"	v
s:async_quick	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = has('nvim-0.2.0')? 1 : 0$/;"	v
s:async_quick	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_quick = 0$/;"	v
s:async_scroll	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_scroll = 0$/;"	v
s:async_start	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_start = 0$/;"	v
s:async_state	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_state = 0$/;"	v
s:async_tail	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_tail = 0$/;"	v
s:async_term	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_term = {}$/;"	v
s:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^			let s:asyncrun_gui = 1$/;"	v
s:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_gui = 1$/;"	v
s:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_gui = get(uis, 'ext_termcolors', 0)? 0 : 1$/;"	v
s:asyncrun_gui	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_gui = has('gui_running')$/;"	v
s:asyncrun_support	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_support = 0$/;"	v
s:asyncrun_windows	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_windows = 1$/;"	v
s:asyncrun_windows	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_windows = 0$/;"	v
s:available	autoload/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:bar	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^let s:bar = '[bufnr]    [name]'$/;"	v
s:base_dir	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:base_dir = expand('<sfile>:h:h')$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basic16	autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:batchmode	autoload/plugged/vim-startify/autoload/startify.vim	/^let s:batchmode = ''$/;"	v
s:begin	autoload/plugged/gv.vim/plugin/gv.vim	/^let s:begin = '^[^0-9]*[0-9]\\{4}-[0-9]\\{2}-[0-9]\\{2}\\s\\+'$/;"	v
s:better_whitespace_initialized	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:better_whitespace_initialized = 0$/;"	v
s:bg0	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg0  = s:getGruvColor('GruvboxBg0')$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg1  = s:getGruvColor('GruvboxBg1')$/;"	v
s:bg1	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg2  = s:getGruvColor('GruvboxBg2')$/;"	v
s:bg2	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg4  = s:getGruvColor('GruvboxBg4')$/;"	v
s:bg4	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bin	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame = {}$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.append_lines = funcref('s:blame__append_lines')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.back = funcref('s:blame__back')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.error = funcref('s:blame__error')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.forward = funcref('s:blame__forward')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.open_popup = funcref('s:blame__open_popup')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.render = funcref('s:blame__render')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.reveal_diff = funcref('s:blame__reveal_diff')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.spawn_git = funcref('s:blame__spawn_git')$/;"	v
s:blame	autoload/plugged/git-messenger.vim/autoload/gitmessenger/blame.vim	/^let s:blame.start = funcref('s:blame__start')$/;"	v
s:blobdirs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:blue	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:blue   = s:getGruvColor('GruvboxBlue')$/;"	v
s:blue	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:bold	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:buf_min_count	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_counter	autoload/plugged/far.vim/autoload/far.vim	/^let s:buffer_counter = 1$/;"	v
s:buffer_prototype	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buflist	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:buflist = {}$/;"	v
s:buflist	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:buflist.head = s:node.new(-1)$/;"	v
s:buflist	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:buflist.head.next = s:buflist.head$/;"	v
s:buflist	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:buflist.head.prev = s:buflist.head$/;"	v
s:buflist	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:buflist.index = s:buflist.head$/;"	v
s:buflist	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:buflist.size = 0$/;"	v
s:bufnr	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufnr	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^let s:bufnr = -1$/;"	v
s:bufprefix	autoload/plugged/vim-gist/autoload/gist.vim	/^let s:bufprefix = 'gist' . (has('unix') ? ':' : '_')$/;"	v
s:builder	autoload/plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	autoload/plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	autoload/plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bx	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:bx = '{\\%("[^"]*"\\|''[^'']*''\\|\\$#\\|\\${\\w\\+}\\|\\$\\+\\|{[^{]\\+\\|[^{}]\\)\\{-}}'$/;"	v
s:c_flag	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache	autoload/plugged/vim-which-key/autoload/which_key.vim	/^let s:cache = get(s:, 'cache', {})$/;"	v
s:cache_dir	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir .= s:path_separator$/;"	v
s:cache_dir	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir = $HOME . s:path_separator . '.cache'$/;"	v
s:cache_dir	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir = $XDG_CACHE_HOME$/;"	v
s:cache_dir	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir = stdpath('cache')$/;"	v
s:callbacks	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:callbacks = {}$/;"	v
s:can_async	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:can_async = has('patch-8.0.0027')$/;"	v
s:ccls_command	autoload/plugged/vim-lsp-cxx-highlight/sample-configs/LanguageClient-register.vim	/^let s:ccls_command = ['ccls', '-init=' . json_encode(s:ccls_settings)]$/;"	v
s:ccls_settings	autoload/plugged/vim-lsp-cxx-highlight/sample-configs/LanguageClient-register.vim	/^let s:ccls_settings = {$/;"	v
s:channel_log	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:channel_map	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let s:channel_map[bufnr] = job_getchannel(job)$/;"	v
s:channel_map	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let s:channel_map[bufnr] = job_id$/;"	v
s:channel_map	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:channel_map = {}$/;"	v
s:channel_map	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^let s:channel_map = {}$/;"	v
s:char_bottom_left	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_left  = ['*', '╰'][g:startify_fortune_use_unicode]$/;"	v
s:char_bottom_right	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_right = ['*', '╯'][g:startify_fortune_use_unicode]$/;"	v
s:char_sides	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_sides        = ['|', '│'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_bottom	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_bottom   = ['-', '─'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_left	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_left     = ['*', '╭'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_right	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_right    = ['*', '╮'][g:startify_fortune_use_unicode]$/;"	v
s:chars	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:chars = map(range(32, 126), 'nr2char(v:val)')$/;"	v
s:checked_servers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^let s:checked_servers = 0$/;"	v
s:clean_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
s:clear_match_by_id	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:clear_match_by_id = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:clear_syntax	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^let s:clear_syntax = !has('patch-7.4.792')$/;"	v
s:client	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:closing_regex	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^let s:closing_regex     = '<\\\/\\zs\\k[^>[:space:]]*\\ze>'$/;"	v
s:cntr	autoload/plugged/undotree/autoload/undotree.vim	/^let s:cntr = 0$/;"	v
s:codi_default_aliases	autoload/plugged/codi.vim/autoload/codi/load.vim	/^let s:codi_default_aliases = {$/;"	v
s:codi_default_interpreters	autoload/plugged/codi.vim/autoload/codi/load.vim	/^let s:codi_default_interpreters = {$/;"	v
s:codis	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:codis = {} " { bufnr: { codi_bufnr, codi_width, codi_restore } }$/;"	v
s:color_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_template	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:cols_layout	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^let s:cols_layout = {}$/;"	v
s:column_display	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:column_width	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:column_width = &columns$/;"	v
s:column_width	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:column_width = &columns$/;"	v
s:commit_mode	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
s:common_efm	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:commondirs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:config	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:configfile_def	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let s:configfile_def   = "'yapf -l '.a:firstline.'-'.a:lastline"$/;"	v
s:configfile_def	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let s:configfile_def = "'clang-format -lines='.a:firstline.':'.a:lastline.' --assume-filename=\\"'.expand('%:p').'\\" -style=file'"$/;"	v
s:configfile_def	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let s:configfile_def = '"' . s:dfmt_command . '"'$/;"	v
s:contexts	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:counter	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:cow	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:cow = [$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/goyo.vim/autoload/goyo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-sneak/plugin/sneak.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^let s:cpo_save = &cpo$/;"	v
s:cquery_command	autoload/plugged/vim-lsp-cxx-highlight/sample-configs/LanguageClient-register.vim	/^let s:cquery_command = ['cquery', '-init=' . json_encode(s:cquery_settings)]$/;"	v
s:cquery_settings	autoload/plugged/vim-lsp-cxx-highlight/sample-configs/LanguageClient-register.vim	/^let s:cquery_settings = {$/;"	v
s:ctags	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:ctags = get(g:, 'vista_ctags_executable', 'ctags')$/;"	v
s:ctags_project_opts	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:ctags_project_opts = get(g:, 'vista_ctags_project_opts', '')$/;"	v
s:ctrlspace	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:cur_dir	autoload/plugged/vista.vim/autoload/vista.vim	/^let s:cur_dir = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_bufnr = cur$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_bufnr = curbuf$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_dir	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabnr = curtab$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_visible_buffers = copy(b.buffers)$/;"	v
s:current_visible_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:cursor_timer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cxx_symbol_kind_base	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^let s:cxx_symbol_kind_base = 252$/;"	v
s:cxx_symbol_kinds	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^let s:cxx_symbol_kinds = [$/;"	v
s:days_abbr	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:days_abbr   =map(range(86400*3+43200-s:offset*60,86400*12,86400),'strftime("%a",v:val)')[0:6]$/;"	v
s:days_engl	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:days_engl   =["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]$/;"	v
s:days_full	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:days_full   =map(range(86400*3+43200-s:offset*60,86400*12,86400),'strftime("%A",v:val)')[0:6]$/;"	v
s:debug	autoload/plugged/far.vim/autoload/far/tools.vim	/^let s:debug = exists('g:far#debug')? g:far#debug : 0$/;"	v
s:debug	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:debug   = 0 | :lockvar s:debug$/;"	v
s:debug	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:debug = 1$/;"	v
s:debug	autoload/plugged/undotree/autoload/undotree.vim	/^let s:debug = 0$/;"	v
s:debugfile	autoload/plugged/undotree/autoload/undotree.vim	/^let s:debugfile = $HOME.'\/undotree_debug.log'$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:default_action	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_action	autoload/plugged/fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_checks	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:default_cmd_fmt	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:default_cmd_fmt = '%s %s %s --output-format=json --fields=-PF -f- %s'$/;"	v
s:default_cmd_fmt	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:default_cmd_fmt = '%s %s %s -f- %s'$/;"	v
s:default_displaynames	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^let s:default_displaynames = {$/;"	v
s:default_mapping	autoload/plugged/far.vim/autoload/far.vim	/^let s:default_mapping = {$/;"	v
s:default_prompt_mapping	autoload/plugged/far.vim/autoload/far.vim	/^let s:default_prompt_mapping={$/;"	v
s:default_vals	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:default_vals = {$/;"	v
s:denite_ver	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
s:desc	autoload/plugged/vim-which-key/autoload/which_key.vim	/^let s:desc = get(s:, 'desc', {})$/;"	v
s:dfmt_command	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let s:dfmt_command = 'dfmt'$/;"	v
s:dfmt_command	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^        let s:dfmt_command = 'dub run -q dfmt --'$/;"	v
s:diagnostics	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
s:did_buf_enter	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:did_buf_enter = []$/;"	v
s:did_open	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:did_open = []$/;"	v
s:diff_cmd	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:diff_cmd=g:diff_binary.' -a --unchanged-group-format="" --old-group-format="" --new-group-format="%dF,%dL " --changed-group-format="%dF,%dL " '$/;"	v
s:diffpanel	autoload/plugged/undotree/autoload/undotree.vim	/^let s:diffpanel = s:new(s:panel)$/;"	v
s:dirArrows	autoload/plugged/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dir_for_worktree	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:disable_colors	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:done	autoload/plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	autoload/plugged/vim-rooter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	autoload/plugged/vim-rooter/test/runner.vim	/^let s:done = 0$/;"	v
s:echo_cursor_opts	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^let s:echo_cursor_opts = ['echo', 'floating_win', 'scroll', 'both']$/;"	v
s:echo_strategy	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^let s:echo_strategy = get(g:, 'vista_echo_cursor_strategy', 'echo')$/;"	v
s:edit_jobs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:emmet_settings	autoload/plugged/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:enabled	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:env	autoload/plugged/vim-startify/autoload/startify.vim	/^  let s:env = sort(s:env, 's:compare_by_key_len')$/;"	v
s:env	autoload/plugged/vim-startify/autoload/startify.vim	/^  let s:env = sort(s:env, 's:compare_by_val_len')$/;"	v
s:eol_whitespace_pattern	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern .= '\\|[' . s:whitespace_chars . ']\\+\\ze[\\u0009]'$/;"	v
s:eol_whitespace_pattern	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern = '[^\\u0009' . s:whitespace_chars . ']\\@1<=' . s:eol_whitespace_pattern$/;"	v
s:eol_whitespace_pattern	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:eol_whitespace_pattern = '[\\u0009' . s:whitespace_chars . ']\\+$'$/;"	v
s:errmsg	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:errmsg='please set g:current_line_whitespace_disabled_{soft,hard} and reload better whitespace'$/;"	v
s:error	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:error = ''$/;"	v
s:error	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:error   = 3 | :lockvar s:error$/;"	v
s:error_file	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^let s:error_file = tempname()$/;"	v
s:error_sign	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') ? '❌ ' : 'E')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:errored	autoload/plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errored	autoload/plugged/vim-rooter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	autoload/plugged/vim-rooter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	autoload/plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	autoload/plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:errors	autoload/plugged/vim-rooter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	autoload/plugged/vim-rooter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	autoload/plugged/vim-rooter/test/runner.vim	/^let s:errors = 0$/;"	v
s:exec_paths	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:executables	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:exists	autoload/plugged/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:expand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:ext	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:extmap	autoload/plugged/vim-gist/autoload/gist.vim	/^let s:extmap = extend({$/;"	v
s:fail	autoload/plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	autoload/plugged/vim-rooter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	autoload/plugged/vim-rooter/test/runner.vim	/^let s:fail = 0$/;"	v
s:far_buffer_name	autoload/plugged/far.vim/autoload/far.vim	/^let s:far_buffer_name = 'FAR %d'$/;"	v
s:far_params_meta	autoload/plugged/far.vim/autoload/far.vim	/^let s:far_params_meta = {$/;"	v
s:far_params_meta_vimgrep	autoload/plugged/far.vim/autoload/far.vim	/^let s:far_params_meta_vimgrep = {$/;"	v
s:far_preview_buffer_name	autoload/plugged/far.vim/autoload/far.vim	/^let s:far_preview_buffer_name = 'Preview'$/;"	v
s:far_prompt_escape	autoload/plugged/far.vim/autoload/far.vim	/^let s:far_prompt_escape = "\\<c-o>"$/;"	v
s:farvim_dir	autoload/plugged/far.vim/autoload/far.vim	/^let s:farvim_dir = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:fetching	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:fetching = v:true$/;"	v
s:fetching	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:fetching = v:true$/;"	v
s:fg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg1  = s:getGruvColor('GruvboxFg1')$/;"	v
s:fg1	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg4  = s:getGruvColor('GruvboxFg4')$/;"	v
s:fg4	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:file_commit_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:filetype_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:filtermx	autoload/plugged/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|blade\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:find_timer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^let s:find_timer = -1$/;"	v
s:find_win_params_meta	autoload/plugged/far.vim/autoload/far.vim	/^let s:find_win_params_meta = copy(s:win_params_meta)$/;"	v
s:finder	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^let s:finder = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:finder	autoload/plugged/vista.vim/autoload/vista/finder/skim.vim	/^let s:finder = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fixed_column	autoload/plugged/vim-startify/autoload/startify.vim	/^let s:fixed_column = g:startify_padding_left + 2$/;"	v
s:flag	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:flags	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:floaterm	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^let s:floaterm = {}$/;"	v
s:floating_delay	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^let s:floating_delay = get(g:, 'vista_floating_delay', 100)$/;"	v
s:floating_timer	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^let s:floating_timer = -1$/;"	v
s:floating_window_available	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:floating_window_available = has('nvim') && exists('*nvim_win_set_config')$/;"	v
s:fmt_excmd	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fnamecollapse	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnamecollapse	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnameescape	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:fnametruncate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnametruncate = get(g:, 'airline#extensions#tabline#fnametruncate', 0)$/;"	v
s:focus_was_lost	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let s:focus_was_lost = 0$/;"	v
s:focusgained_ignore_time	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
s:formatter	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
s:formatter	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:funcs	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:funcs = {}$/;"	v
s:fzf_go	autoload/plugged/fzf/plugin/fzf.vim	/^let s:fzf_go = s:base_dir.'\/bin\/fzf'$/;"	v
s:fzf_tmux	autoload/plugged/fzf/plugin/fzf.vim	/^let s:fzf_tmux = s:base_dir.'\/bin\/fzf-tmux'$/;"	v
s:gap_between_regions	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^let s:gap_between_regions = 5$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0      = ['#fbf1c7', 229]     " 253-244-193$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gist_token_file	autoload/plugged/vim-gist/autoload/gist.vim	/^let s:gist_token_file = expand(get(g:, 'gist_token_file', '~\/.gist-vim'))$/;"	v
s:git	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^    let s:git.finalize_vim = funcref('s:git__finalize_vim')$/;"	v
s:git	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^let s:git = {}$/;"	v
s:git	autoload/plugged/git-messenger.vim/autoload/gitmessenger/git.vim	/^let s:git.spawn = funcref('s:git__spawn')$/;"	v
s:git_versions	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globsubs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:gray	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:green	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:green = s:getGruvColor('GruvboxGreen')$/;"	v
s:green	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:gui	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:gui = has('gui_running') || has('nvim')$/;"	v
s:has_byte_offset	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^let s:has_byte_offset = has('byte_offset')$/;"	v
s:has_float	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^let s:has_float = has('nvim') && exists('*nvim_win_set_config')$/;"	v
s:has_floating_win	autoload/plugged/vista.vim/autoload/vista/win.vim	/^let s:has_floating_win = exists('*nvim_open_win')$/;"	v
s:has_popup	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^let s:has_popup = has('textprop') && has('patch-8.2.0286')$/;"	v
s:has_popup	autoload/plugged/vista.vim/autoload/vista/win.vim	/^let s:has_popup = exists('*popup_create')$/;"	v
s:has_reltime	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^let s:has_reltime = has('reltime')$/;"	v
s:has_reltime	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop.vim	/^let s:has_reltime = has('reltime')$/;"	v
s:has_strcharpart	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:has_strchars	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:has_timers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/skipped.vim	/^let s:has_timers = has('timers')$/;"	v
s:has_timers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/match/symbols.vim	/^let s:has_timers = has('timers')$/;"	v
s:has_timers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/skipped.vim	/^let s:has_timers = has('timers')$/;"	v
s:has_timers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop/symbols.vim	/^let s:has_timers = has('timers')$/;"	v
s:has_timers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/skipped.vim	/^let s:has_timers = has('timers')$/;"	v
s:has_timers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/textprop_nvim/symbols.vim	/^let s:has_timers = has('timers')$/;"	v
s:hash_colors	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:head_cache	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:head_format	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:helpless	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:helpless = ['" Press ? for help.']$/;"	v
s:helpless	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:helpless = []$/;"	v
s:helpmore	autoload/plugged/undotree/autoload/undotree.vim	/^let s:helpmore = ['"    ===== Marks ===== ',$/;"	v
s:highlight_groups	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_groups	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_timer	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^let s:highlight_timer = -1$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history = { '_index': 0, '_history': [] }$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history._load = funcref('s:history__load')$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.back = funcref('s:history__back')$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.forward = funcref('s:history__forward')$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.history_no = funcref('s:history__history_no')$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.push = funcref('s:history__push')$/;"	v
s:history	autoload/plugged/git-messenger.vim/autoload/gitmessenger/history.vim	/^let s:history.save = funcref('s:history__save')$/;"	v
s:hl_groups	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hls_cursor	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:home	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^let s:home = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:hunk_re	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunk_symbols	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:iTerm_escape_template	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:icons	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^let s:icons = {$/;"	v
s:ignore_list	autoload/plugged/vista.vim/autoload/vista.vim	/^let s:ignore_list = ['vista', 'vista_kind', 'nerdtree', 'startify', 'tagbar', 'fzf', 'gitcommit', 'coc-explorer']$/;"	v
s:inactive_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indent	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indent_size	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let s:indent_size = g:vista#renderer#enable_icon ? 2 : 4$/;"	v
s:indent_size	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^let s:indent_size = g:vista#renderer#enable_icon ? 2 : 4$/;"	v
s:index	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:index = 0$/;"	v
s:indexes	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:indicatorMap	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^    let s:indicatorMap = {$/;"	v
s:info	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:info    = 1 | :lockvar s:info$/;"	v
s:init	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:install_dir	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:install_dir = expand("<sfile>:p:h:h")$/;"	v
s:interpreters	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:interpreters = codi#load#interpreters()$/;"	v
s:inverse	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:is_AppleTerminal	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_dark	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_good	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_gvim	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:is_gvim = get(v:, 'progname', '') ==# 'gvim'$/;"	v
s:is_iTerm	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_linux	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:is_linux = has('unix') && !has('macunix') && !has('win32unix')$/;"	v
s:is_mac	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:is_mac = has('macunix')$/;"	v
s:is_nvim	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^let s:is_nvim = has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:is_win = gitstatus#isWin()$/;"	v
s:is_win	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/vim-floaterm/autoload/floaterm/terminal.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^  let s:is_windows = 0$/;"	v
s:is_windows	autoload/plugged/vim-floaterm/autoload/floaterm/path.vim	/^  let s:is_windows = 1$/;"	v
s:italic	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:item_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:k_roles	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^let s:k_roles = [$/;"	v
s:keepcpo	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^let s:keepcpo = &cpo$/;"	v
s:keyMaps	autoload/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['ClearHistory','C','Clear undo history (with confirmation)']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Close','q','Close undotree panel']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['DiffToggle','D','Toggle the diff panel']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Enter','<2-LeftMouse>','Move to the current state']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Enter','<cr>','Move to the current state']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['FocusTarget','<tab>','Set Focus back to the editor']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Help','?','Toggle quick help']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['NextSavedState','>','Move to the next saved state']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['NextState','K','Move to the next undo state']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['PreviousSavedState','<','Move to the previous saved state']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['PreviousState','J','Move to the previous undo state']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Redo','<c-r>','Redo']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['TimestampToggle','T','Toggle relative timestamp']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Undo','u','Undo']]$/;"	v
s:keymap	autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap = []$/;"	v
s:language_opt	autoload/plugged/vista.vim/autoload/vista/types/uctags.vim	/^let s:language_opt = map(s:language_opt,$/;"	v
s:language_opt	autoload/plugged/vista.vim/autoload/vista/types/uctags.vim	/^let s:language_opt = {$/;"	v
s:last_event	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:last_event = []$/;"	v
s:last_lnum	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^let s:last_lnum = -1$/;"	v
s:last_lnum	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^let s:last_lnum = -1$/;"	v
s:last_mode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_req_id	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:last_req_id = 0$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_time	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:last_vlnum	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^let s:last_vlnum = v:null$/;"	v
s:launcher	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:launcher = '%s'$/;"	v
s:launcher	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:layout_keys	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:layout_keys	autoload/plugged/fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'tmux', 'up', 'down', 'left', 'right']$/;"	v
s:leftpad	autoload/plugged/vim-startify/autoload/startify.vim	/^let s:leftpad = repeat(' ', g:startify_padding_left)$/;"	v
s:listener	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:listener = gitstatus#listener#New(g:)$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	autoload/plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^  let s:loaded = {}$/;"	v
s:loaded_ext	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:log_diff_context	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, v:key), "module": strpart(v:val, 0, len(a:state.base_module)) . from}'$/;"	v
s:log_file	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logfile	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = resolve($NODE_CLIENT_LOG_FILE)$/;"	v
s:logfile	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = tempname()$/;"	v
s:logfile	autoload/plugged/far.vim/autoload/far/tools.vim	/^let s:logfile = $HOME.'\/far.vim.log'$/;"	v
s:logger	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:logger = gitstatus#log#NewLogger(g:NERDTreeGitStatusLogLevel)$/;"	v
s:logging	autoload/plugged/emmet-vim/unittest.vim	/^let s:logging = 0$/;"	v
s:logging_enabled	autoload/plugged/vista.vim/autoload/vista.vim	/^let s:logging_enabled = exists('g:vista_log_file') && !empty(g:vista_log_file)$/;"	v
s:lsp_symbol_kinds	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^let s:lsp_symbol_kinds = [$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:macros	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:macros = { $/;"	v
s:magic	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:magic = "\\n\\<cr>\\<c-d>\\<c-d>\\<cr>" " to get out of REPL$/;"	v
s:map_next	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:markdown_common	autoload/plugged/vista.vim/autoload/vista/toc.vim	/^let s:markdown_common = ['markdown', 'vimwiki', 'pandoc', 'apiblueprint']$/;"	v
s:markedWinNum	autoload/plugged/vim-windowswap/autoload/WindowSwap.vim	/^let s:markedWinNum = []$/;"	v
s:match_ids	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^let s:match_ids = []$/;"	v
s:matchmap	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^let s:matchmap = {}$/;"	v
s:maxmarks	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^let s:maxmarks = sneak#util#strlen(g:sneak#target_labels)$/;"	v
s:me	autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:merge_heads	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:messages	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:messages	autoload/plugged/vim-rooter/test/runner.vim	/^let s:messages = []$/;"	v
s:missing_deps	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:missing_deps = s:require(function('s:check_exec'), ['script', 'uname'])$/;"	v
s:months_abbr	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:months_abbr =map(range(86400*2,86400*365,86400*31),'strftime("%b",v:val)')$/;"	v
s:months_engl	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:months_engl =["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]$/;"	v
s:months_full	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:months_full =map(range(86400*2,86400*365,86400*31),'strftime("%B",v:val)')$/;"	v
s:mq_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:mx	autoload/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}'$/;"	v
s:name	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:names	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:namespace_cache	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_cache = {}$/;"	v
s:namespace_id	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_id = 1$/;"	v
s:nbs	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:need_migrate_vals	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:need_migrate_vals = {$/;"	v
s:new_log_session	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:next_sign_id	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:noconfigfile_def	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let s:noconfigfile_def = "'clang-format -lines='.a:firstline.':'.a:lastline.' --assume-filename=\\"'.expand('%:p').'\\" -style=\\"{BasedOnStyle: WebKit, AlignTrailingComments: true, '.(&textwidth ? 'ColumnLimit: '.&textwidth.', ' : '').(&expandtab ? 'UseTab: Never, IndentWidth: '.shiftwidth() : 'UseTab: Always').'}\\"'"$/;"	v
s:noconfigfile_def	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let s:noconfigfile_def = "'yapf --style=\\"{based_on_style:'.g:formatter_yapf_style.',indent_width:'.shiftwidth().(&textwidth ? ',column_limit:'.&textwidth : '').'}\\" -l '.a:firstline.'-'.a:lastline"$/;"	v
s:noconfigfile_def	autoload/plugged/vim-autoformat/plugin/defaults.vim	/^    let s:noconfigfile_def = '"' . s:dfmt_command . ' -t " . (&expandtab ? "space" : "tab") . " --indent_size " . shiftwidth() . (&textwidth ? " --soft_max_line_length " . &textwidth : "")'$/;"	v
s:node	autoload/plugged/undotree/autoload/undotree.vim	/^let s:node = {}$/;"	v
s:node	autoload/plugged/vim-floaterm/autoload/floaterm/buflist.vim	/^let s:node = {}$/;"	v
s:nomodeline	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^let s:nomodeline = v:version > 703 ? '<nomodeline>' : ''$/;"	v
s:nomodeline	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	autoload/plugged/vim-rooter/plugin/rooter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:non_zero_only	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:nowait	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:number_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:number_column = get(s:gb, g:gruvbox_number_column)$/;"	v
s:number_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:number_column = s:none$/;"	v
s:number_map	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:nvim = has('nvim')$/;"	v
s:nvim	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait'))$/;"	v
s:nvim_async_lines	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:nvim_async_lines = {} " to hold partially built lines$/;"	v
s:offset	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:offset     = s:localtime((  0+30*365)*86400).o$/;"	v
s:offset_dst	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:offset_dst = s:localtime((180+30*365)*86400).o$/;"	v
s:old_cpo	autoload/plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:opening_end_regex	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^let s:opening_end_regex = '\\%(\\_[^>]\\{-}\\_[^\\\/]\\)\\=>'$/;"	v
s:opening_regex	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^let s:opening_regex     = '<\\zs\\k[^>\/[:space:]]*'$/;"	v
s:orange	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:orange = s:getGruvColor('GruvboxOrange')$/;"	v
s:orange	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orig_conceal_matches	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^let s:orig_conceal_matches = []$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p = {'normal':{}, 'inactive':{}, 'insert':{}, 'replace':{}, 'visual':{}, 'tabline':{}, 'terminal':{}}$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.left =  [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.middle = [ [ s:bg4, s:bg1 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.right = [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.left = [ [ s:bg0, s:blue, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.right = [ [ s:bg0, s:blue ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.error = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.left = [ [ s:bg0, s:fg4, 'bold' ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.right = [ [ s:bg0, s:fg4 ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.warning = [ [ s:bg2, s:yellow ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.left = [ [ s:bg0, s:aqua, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.right = [ [ s:bg0, s:aqua ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.left = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.middle = [ [ s:bg0, s:bg0 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.right = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.tabsel = [ [ s:bg0, s:fg4 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.left = [ [ s:bg0, s:green, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.right = [ [ s:bg0, s:green ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.left = [ [ s:bg0, s:orange, 'bold' ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.right = [ [ s:bg0, s:orange ], [ s:bg0, s:bg4 ] ]$/;"	v
s:padding_left	autoload/plugged/vim-startify/syntax/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:panel	autoload/plugged/undotree/autoload/undotree.vim	/^let s:panel = {}$/;"	v
s:parts	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:path_separator	autoload/plugged/vista.vim/autoload/vista/util.vim	/^let s:path_separator = has('win32') ? '\\' : '\/'$/;"	v
s:pattern	autoload/plugged/vista.vim/syntax/vista_kind.vim	/^let s:pattern = join(s:prefixes, '\\|')$/;"	v
s:permlookup	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^let s:permlookup = ['---','--x','-w-','-wx','r--','r-x','rw-','rwx']$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plugin_dir	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:plugin_name	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^let s:plugin_name = 'quick-scope'$/;"	v
s:plugin_path	autoload/plugged/bracey.vim/autoload/bracey.vim	/^let s:plugin_path = expand('<sfile>:p:h:h')$/;"	v
s:po_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup = {}$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.close = funcref('s:popup__close')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.echo_help = funcref('s:popup__echo_help')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.floating_win_opts = funcref('s:popup__floating_win_opts')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.get_opener_winnr = funcref('s:popup__get_opener_winnr')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.get_winnr = funcref('s:popup__get_winnr')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.into = funcref('s:popup__into')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.open = funcref('s:popup__open')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.scroll = funcref('s:popup__scroll')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.update = funcref('s:popup__update')$/;"	v
s:popup	autoload/plugged/git-messenger.vim/autoload/gitmessenger/popup.vim	/^let s:popup.window_size = funcref('s:popup__window_size')$/;"	v
s:popup_delay	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^let s:popup_delay = get(g:, 'vista_floating_delay', 100)$/;"	v
s:popup_timer	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^let s:popup_timer = -1$/;"	v
s:pp_purs_state	autoload/plugged/codi.vim/autoload/codi/load.vim	/^let s:pp_purs_state = {}$/;"	v
s:predefined_quotes	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^let s:predefined_quotes = [$/;"	v
s:prefixes	autoload/plugged/vista.vim/syntax/vista_kind.vim	/^let s:prefixes = filter($/;"	v
s:prepare_env	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:preview_bufnr	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:preview_bufnr = 0$/;"	v
s:preview_height	autoload/plugged/vim-floaterm/autoload/clap/provider/floaterm.vim	/^let s:preview_height = 10$/;"	v
s:private	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:private = { 'cache':{}, 'rtp':{}, 'local':{}, 'tasks':{} }$/;"	v
s:prompt_act_func_ref	autoload/plugged/far.vim/autoload/far.vim	/^let s:prompt_act_func_ref={$/;"	v
s:prompt_key_display	autoload/plugged/far.vim/autoload/far.vim	/^    let s:prompt_key_display[key] = g:far#prompt_mapping[key]['prompt']$/;"	v
s:prompt_key_display	autoload/plugged/far.vim/autoload/far.vim	/^let s:prompt_key_display = {}$/;"	v
s:prompt_mapping_keys	autoload/plugged/far.vim/autoload/far.vim	/^    let s:prompt_mapping_keys[key] = g:far#prompt_mapping[key]['key']$/;"	v
s:prompt_mapping_keys	autoload/plugged/far.vim/autoload/far.vim	/^let s:prompt_mapping_keys = {}$/;"	v
s:prompt_snapshot_file	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prop_id	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:prop_id = 1000$/;"	v
s:prototype	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:purple	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:quickfix_open	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^	let s:quickfix_open = 0$/;"	v
s:quit	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:quit = "quit"$/;"	v
s:quit	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:quit = ""$/;"	v
s:rebase_abbrevs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:red	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:redirects	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:ref_header	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:refar_params_meta	autoload/plugged/far.vim/autoload/far.vim	/^let s:refar_params_meta = {$/;"	v
s:reference	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^let s:reference = '\\<\\%(\\c\\%(clos\\|resolv\\|referenc\\)e[sd]\\=\\|\\cfix\\%(e[sd]\\)\\=\\)\\>'$/;"	v
s:registered	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:registered = []$/;"	v
s:reload_only	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:reload_only = v:false$/;"	v
s:repl_params_meta	autoload/plugged/far.vim/autoload/far.vim	/^let s:repl_params_meta = {$/;"	v
s:repo_prototype	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:resume_queue	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:rhs	autoload/plugged/vim-speeddating/plugin/speeddating.vim	/^  let s:rhs = maparg(s:key, 'n')$/;"	v
s:root	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:root = expand('<sfile>:h:h')$/;"	v
s:rootNERDTreePath	autoload/plugged/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:running_task	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:save_cpo	autoload/plugged/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	autoload/plugged/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	autoload/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-airline/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-gist/autoload/gist.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	autoload/plugged/vim-which-key/plugin/which_key.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_cursor	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:saved_cursor = &guicursor$/;"	v
s:saved_ve	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:saved_ve = &t_ve$/;"	v
s:scope_icon	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let s:scope_icon = ['⊕', '⊖']$/;"	v
s:scope_icon	autoload/plugged/vista.vim/autoload/vista/renderer/line.vim	/^let s:scope_icon = ['⊕', '⊖']$/;"	v
s:script	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^let s:script = fnamemodify(s:home . '\/..\/bin', ':p')$/;"	v
s:script_path	autoload/plugged/bracey.vim/autoload/bracey.vim	/^let s:script_path = s:plugin_path.'\/script\/bracey.py'$/;"	v
s:script_path	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:scripthome	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:scripthome = fnamemodify(s:scriptname, ':h:h')$/;"	v
s:scriptname	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:scriptname = expand('<sfile>:p')$/;"	v
s:section_a	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_commit_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:section_truncate_width	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_z	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
s:sections	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	autoload/plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:seed	autoload/plugged/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:select_api	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:sep	autoload/plugged/vim-startify/autoload/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	autoload/plugged/vim-startify/syntax/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	autoload/plugged/vim-which-key/syntax/which_key.vim	/^let s:sep = which_key#get_sep()$/;"	v
s:separators	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:session_dir	autoload/plugged/vim-startify/autoload/startify.vim	/^let s:session_dir = startify#get_session_path()$/;"	v
s:set_match_words	autoload/plugged/coc-snippets/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_match_words	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_path_handler	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:set_path_handler = {}$/;"	v
s:severity_error	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_hint	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:severity_info	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_warning	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:sfile	autoload/plugged/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:sha1size	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:should_display	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^let s:should_display = v:false$/;"	v
s:should_display	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^let s:should_display = v:false$/;"	v
s:should_display	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:should_display = v:false$/;"	v
s:should_display	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:should_display = v:false$/;"	v
s:should_display	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:should_display = v:false$/;"	v
s:should_display	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:should_display = v:false$/;"	v
s:should_note_winid	autoload/plugged/vim-which-key/autoload/which_key.vim	/^let s:should_note_winid = exists('*win_getid')$/;"	v
s:show_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_line_numbers	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:show_message	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:signId	autoload/plugged/undotree/autoload/undotree.vim	/^let s:signId = 2123654789$/;"	v
s:sign_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:skip_check_ft	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
s:skip_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:source	autoload/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:special_keys	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^  let s:special_keys[code] = key$/;"	v
s:special_keys	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:special_keys = {$/;"	v
s:st	autoload/plugged/vim-sneak/plugin/sneak.vim	/^let s:st = { 'rst':1, 'input':'', 'inputlen':0, 'reverse':0, 'bounds':[0,0],$/;"	v
s:strftime_items	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:strftime_items = {$/;"	v
s:strip_whitespace_pattern	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:strip_whitespace_pattern = s:eol_whitespace_pattern$/;"	v
s:subline_position	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^let s:subline_position = 0.0$/;"	v
s:suggest_sources	autoload/plugged/far.vim/autoload/far.vim	/^let s:suggest_sources = keys(filter(copy(g:far#sources), "get(g:far#sources[v:key], 'suggest', '1')"))$/;"	v
s:suite	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:suite = themis#suite('Test for nerdtree-git-plugin')$/;"	v
s:support_json_format	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:support_json_format =$/;"	v
s:supports_star	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:symbol	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:symbol_kind	autoload/plugged/vista.vim/autoload/vista/parser/lsp.vim	/^let s:symbol_kind = {$/;"	v
s:system	autoload/plugged/vim-gist/autoload/gist.vim	/^let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:tab_min_count	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:taboo	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabws	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
s:target_displacement	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^let s:target_displacement = 0$/;"	v
s:temp_files	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_scripts	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:template	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:template = [$/;"	v
s:term_marker	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = ";#FZF"$/;"	v
s:term_marker	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = '&::FZF'$/;"	v
s:test_repo	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	autoload/plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	autoload/plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	autoload/plugged/vim-rooter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	autoload/plugged/vim-rooter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:timeDay	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDay  = '1 d'$/;"	v
s:timeDay	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDay  = '1 day ago'$/;"	v
s:timeDays	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDays = ' d'$/;"	v
s:timeDays	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDays = ' days ago'$/;"	v
s:timeHour	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHour  = '1 h'$/;"	v
s:timeHour	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHour  = '1 hour ago'$/;"	v
s:timeHours	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHours = ' h'$/;"	v
s:timeHours	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHours = ' hours ago'$/;"	v
s:timeMinute	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinute  = '1 m'$/;"	v
s:timeMinute	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinute  = '1 minute ago'$/;"	v
s:timeMinutes	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinutes = ' m'$/;"	v
s:timeMinutes	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinutes = ' minutes ago'$/;"	v
s:timeOriginal	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeOriginal = 'Orig'$/;"	v
s:timeOriginal	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeOriginal = 'Original'$/;"	v
s:timeSecond	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSecond  = '1 s'$/;"	v
s:timeSecond	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSecond = '1 second ago'$/;"	v
s:timeSeconds	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSeconds = ' s'$/;"	v
s:timeSeconds	autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSeconds = ' seconds ago'$/;"	v
s:time_handlers	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^  let s:time_handlers = []$/;"	v
s:tmuxline_snapshot_file	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:toc_supported	autoload/plugged/vista.vim/autoload/vista/toc.vim	/^let s:toc_supported = ['markdown', 'rst', 'vimwiki', 'pandoc', 'apiblueprint']$/;"	v
s:tree_up_dir_line	autoload/plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters = {}$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.BOOL]    = { bol -> bol ? 'v:true' : 'v:false' }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.DICT]    = { dct -> s:prettifyDict(dct, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FLOAT]   = { flt -> string(flt) }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FUNCREF] = { fn  -> string(fn) }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.LIST]    = { lst -> s:prettifyList(lst, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NULL]    = { nul -> string(nul) }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NUMBER]  = { nbr -> string(nbr) }$/;"	v
s:type_formatters	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.STRING]  = { str -> printf("'%s'", str) }$/;"	v
s:types	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:types = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.lang = 'ada'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.sro = '.' " Not sure if possible$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types.lang = 'ant'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types.lang = 'asm'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types.lang = 'asp'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.lang = 'c'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.sro = '::'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types.lang = 'automake'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types.lang = 'awk'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types.lang = 'basic'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types.lang = 'beta'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.lang = 'c'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.sro = '::'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.lang = 'clojure'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.sro = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types.lang = 'cobol'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types.lang = 'autoconf'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.lang = 'c++'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.sro = '::'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.lang = 'c#'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.sro = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types.lang = 'css'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.lang = 'ctags'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.sro = '.' " Not actually possible$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.lang = 'D'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.sro = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types.lang = 'dosbatch'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.lang = 'eiffel'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.lang = 'elm'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.sro = ':'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.lang = 'erlang'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.sro        = '.' " Not sure, is nesting even possible?$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.lang = 'fortran'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types.lang = 'html'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.lang = 'java'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.sro = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.lang = 'javascript'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.sro        = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types.lang = 'lisp'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types.lang = 'lua'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types.lang = 'make'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types.lang = 'matlab'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.lang = 'flex'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.sro        = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.lang = 'objectivec'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.sro = ':'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.lang = 'ocaml'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types.lang = 'pascal'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types.lang = 'perl'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.lang = 'php'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.sro = '\\\\'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types.lang = 'Protobuf'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.kinds     = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.lang = 'python'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.sro        = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types.lang = 'R'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types.kinds     = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types.lang = 'rexx'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.lang = 'ruby'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.sro = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.lang = 'rust'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.sro = '::'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types.lang = 'scheme'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types.lang = 'sh'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types.lang = 'slang'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types.lang = 'sml'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types.lang = 'sql'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types.lang = 'tcl'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.lang = 'tex'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.sort = 0$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.sro = '""'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.lang = 'vala'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.sro = '.'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.kind2scope = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.lang = 'vera'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.scope2kind = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.sro        = '.' " Nesting doesn't seem to be possible$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types.lang = 'verilog'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types.lang = 'vhdl'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types.lang = 'vim'$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types = {}$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types.kinds = {$/;"	v
s:types	autoload/plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types.lang = 'yacc'$/;"	v
s:types6	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6 = {}$/;"	v
s:types6	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6.kinds = {$/;"	v
s:types6	autoload/plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6.lang = 'perl6'$/;"	v
s:uname	autoload/plugged/codi.vim/autoload/codi.vim	/^  let s:uname = system('uname -s')$/;"	v
s:undercurl	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:undo_params_meta	autoload/plugged/far.vim/autoload/far.vim	/^let s:undo_params_meta = {$/;"	v
s:undotree	autoload/plugged/undotree/autoload/undotree.vim	/^let s:undotree = s:new(s:panel)$/;"	v
s:unite_source	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:unmerged_status	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let s:unmerged_status = {$/;"	v
s:untracked_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:update_timer	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:update_timer = -1$/;"	v
s:updating	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:updating = 0$/;"	v
s:use_popup	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^let s:use_popup = exists('*popup_create') && g:which_key_use_floating_win$/;"	v
s:var	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(%\\|#<\\=\\d\\+\\|##\\=\\)'$/;"	v
s:vcs_config	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:vert_split	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:vert_split = s:bg0$/;"	v
s:viewer	autoload/plugged/vista.vim/autoload/vista/renderer/kind.vim	/^let s:viewer = {}$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim8	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_bg	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	autoload/plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:virtual_text_namespace	autoload/plugged/codi.vim/autoload/codi.vim	/^let s:virtual_text_namespace = 0$/;"	v
s:visibility_icon	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let s:visibility_icon = {$/;"	v
s:visibility_icon	autoload/plugged/vista.vim/autoload/vista/renderer/line.vim	/^let s:visibility_icon = {$/;"	v
s:vista_cache_dir	autoload/plugged/vista.vim/autoload/vista/util.vim	/^let s:vista_cache_dir = s:cache_dir.'vista'.s:path_separator$/;"	v
s:visual_handlers	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:visual_handlers += [{'regexp': '-\\=\\<\\%(0x\\x\\+\\|\\d\\+\\)\\>', 'increment': s:function("s:numberincrement")}]$/;"	v
s:visual_handlers	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:visual_handlers += [{'regexp': '\\<[A-Za-z]\\>', 'increment': s:function("s:letterincrement")}]$/;"	v
s:visual_handlers	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:visual_handlers = []$/;"	v
s:warned	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning	autoload/plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:warning = 2 | :lockvar s:warning$/;"	v
s:warning_sign	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') ? '⚠️ ' : 'W')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:watched_keys	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:whitespace_chars	autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:whitespace_chars='\\u0020\\u00a0\\u1680\\u180e\\u2000-\\u200b\\u202f\\u205f\\u3000\\ufeff'$/;"	v
s:wide	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:win_params_meta	autoload/plugged/far.vim/autoload/far.vim	/^let s:win_params_meta = {$/;"	v
s:windows	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^let s:windows = has('win32') || has('win64') || has('win16') || has('win95')$/;"	v
s:windows	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^let s:windows = has('win32') || has('win64')$/;"	v
s:winid	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:winid = 0$/;"	v
s:winnr	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^let s:winnr = -1$/;"	v
s:wordcount_cache	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
s:worktree_for_dir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrappers	autoload/plugged/vim-floaterm/autoload/floaterm.vim	/^let s:wrappers = globpath(&runtimepath, 'autoload\/floaterm\/wrapper\/*vim', 0, 1)$/;"	v
s:xterm_escape_template	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:yellow	autoload/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:yellow = s:getGruvColor('GruvboxYellow')$/;"	v
s:yellow	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	autoload/plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:zoomwintab_status_zoomed_in	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
same	autoload/plugged/bracey.vim/server/htmlfile.js	/^		same: false,$/;"	p	class:diff
save_chars_with_secondary_highlights	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:save_chars_with_secondary_highlights(chars) abort$/;"	f
save_conceal_matches	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! s:save_conceal_matches() abort$/;"	f
save_fold_state	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:save_fold_state()$/;"	f
save_last_seen_change	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
save_mark	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def save_mark(name):$/;"	f
save_restore_view	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:save_restore_view(mode)$/;"	f
save_secondary_highlight	autoload/plugged/quick-scope/autoload/quick_scope.vim	/^function! s:save_secondary_highlight() abort$/;"	f
savedir	autoload/plugged/vim-autoformat/samples/python.py	/^    savedir=None     $/;"	v	class:SuckerThread
savefile	autoload/plugged/vim-autoformat/samples/python.py	/^    def savefile(self,text,path):     $/;"	m	class:SuckerThread
savefilename	autoload/plugged/vim-autoformat/samples/python.py	/^    def savefilename(self,url):     $/;"	m	class:SuckerThread
scan	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f
scanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	422;"	d
sched_param	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_sched_param.h	/^struct sched_param$/;"	s
sched_priority	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@sched.h	47;"	d
sched_priority	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_sched_param.h	/^  int sched_priority;$/;"	m	struct:sched_param
scoreGapExtention	autoload/plugged/fzf/src/algo/algo.go	/^	scoreGapExtention = -1$/;"	c
scoreGapStart	autoload/plugged/fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c
scoreMatch	autoload/plugged/fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c
scratch	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:scratch()$/;"	f
scriptify	autoload/plugged/codi.vim/autoload/codi.vim	/^    function! s:scriptify(bin)$/;"	f
search	autoload/plugged/far.vim/rplugin/python3/far/sources/shell.py	/^def search(ctx, args, cmdargs):$/;"	f
searchRequest	autoload/plugged/fzf/src/terminal.go	/^type searchRequest struct {$/;"	t
search_history_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
search_parent	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def search_parent (self, path):$/;"	m	class:configure
search_parent	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:search_parent(name, cwd)$/;"	f
section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
section_is_empty	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
seek	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^  cookie_seek_function_t *seek;		\/* Seek\/tell file position.  *\/$/;"	m	struct:_IO_cookie_io_functions_t
select	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def select(start, end):$/;"	f
selectItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItem(item *Item) bool {$/;"	f
select_count	autoload/plugged/fzf/test/test_go.rb	/^          def select_count$/;"	f	class:Tmux.until
select_next_tab	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def select_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
select_tab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
selectedItem	autoload/plugged/fzf/src/terminal.go	/^type selectedItem struct {$/;"	t
selectorErrorState	autoload/plugged/bracey.vim/server/frontend.js	/^	var selectorErrorState = function(state){$/;"	f
selectorFromPosition	autoload/plugged/bracey.vim/server/cssfile.js	/^CssFile.prototype.selectorFromPosition = function(line, column){$/;"	m	class:CssFile
semi	autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
send	autoload/plugged/bracey.vim/script/bracey.py	/^def send(msg):$/;"	f
send	autoload/plugged/bracey.vim/server/test/server.js	/^	send: function(msg){$/;"	m	class:editor
send	autoload/plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
sendEdit	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.sendEdit = function(diff){$/;"	m	class:Server
sendGoto	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.sendGoto = function(location){$/;"	m	class:Server
sendPong	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.sendPong = function(){$/;"	m	class:Server
sendSelect	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.sendSelect = function(selector){$/;"	m	class:Server
send_keys	autoload/plugged/fzf/test/test_go.rb	/^  def send_keys(*args)$/;"	f	class:Tmux
send_to_terminal	autoload/plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	autoload/plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	autoload/plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	autoload/plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	autoload/plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
separator	autoload/plugged/vim-eunuch/plugin/eunuch.vim	/^function! s:separator()$/;"	f
separator	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
server_available	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^function! s:server_available(server) abort$/;"	f
set	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
set	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
set	autoload/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
setBg	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) setBg() {$/;"	f
setContent	autoload/plugged/bracey.vim/server/cssfile.js	/^CssFile.prototype.setContent = function(source, callback){$/;"	m	class:CssFile
setContent	autoload/plugged/bracey.vim/server/htmlfile.js	/^HtmlFile.prototype.setContent = function(newHtml, callback){$/;"	m	class:HtmlFile
setCurrentFile	autoload/plugged/bracey.vim/server/filemanager.js	/^FileManager.prototype.setCurrentFile = function(id){$/;"	m	class:FileManager
setError	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.setError = function(message){$/;"	m	class:Server
setHighlighted	autoload/plugged/bracey.vim/server/frontend.js	/^	var  setHighlighted = function(selector){$/;"	f
setHightlighting	autoload/plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:setHightlighting() abort$/;"	f
setUp	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
setUrlParam	autoload/plugged/bracey.vim/server/frontend.js	/^	var setUrlParam = function(url, key, value){$/;"	f
set_clean_jobs_variable	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
set_clean_variables	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
set_color	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def set_color (self, color, stderr = False):$/;"	m	class:PrettyText
set_color	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:set_color(group, attr, color)$/;"	f
set_cursor	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:set_cursor() abort$/;"	f
set_cursor_color_for	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
set_cursor_from_pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_cursor_from_pos(pos):$/;"	f
set_custom_section	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:set_custom_section(section) abort$/;"	f
set_file_contents	autoload/plugged/tagalong.vim/spec/support/vim.rb	/^    def set_file_contents(string)$/;"	f	class:Support.Vim
set_fold_levels	autoload/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:set_fold_levels()$/;"	f
set_highlight_colors	autoload/plugged/quick-scope/plugin/quick_scope.vim	/^function! s:set_highlight_colors()$/;"	f
set_mappings	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:set_mappings() abort$/;"	f
set_mark_from_pos	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_path_handler.err	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.err(buffer) abort$/;"	f
set_path_handler.out	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.out(buffer, path) abort$/;"	f
set_var	autoload/plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestBase.TestShell
set_var	autoload/plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestFish
settings	autoload/plugged/bracey.vim/server/launch.js	/^var settings = {};$/;"	v
setup	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def setup (self, opts):$/;"	m	class:TaskManager
setup	autoload/plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestGoFZF
setup	autoload/plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestShell
setup	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:setup(git_dir, git_origin)$/;"	f
setup	autoload/plugged/nvim-colorizer.lua/lua/colorizer.lua	/^local function setup(filetypes, user_default_options)$/;"	f
setupNERDTreeKeyMappings	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeKeyMappings()$/;"	f
setupNERDTreeListeners	autoload/plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeListeners(listener) abort$/;"	f
setupTerminal	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) setupTerminal() {$/;"	f
setupTerminal	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) setupTerminal() error {$/;"	f
setup_other_plugins	autoload/plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
setup_pad	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:setup_pad(bufnr, vert, size, repel)$/;"	f
setup_path	autoload/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_path(bufnr, continuation)$/;"	f
setvirtcol	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:setvirtcol(line,col)$/;"	f
sh	keys/mappings.vim	/^  nnoremap <silent>sh :set nosplitright<CR>:vsplit<CR>:set splitright<CR>$/;"	m
shell	autoload/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestBash
shell	autoload/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestFish
shell	autoload/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestZsh
shellesc	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
shellesc_cmd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:shellesc_cmd(arg)$/;"	f
shellesc_ps1	autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
shellesc_sh	autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
shellescape	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:shellescape(path)$/;"	f
shellescape_list	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:shellescape_list(l)$/;"	f
shellscript	autoload/plugged/fzf/plugin/fzf.vim	/^    let shellscript = s:fzf_tempname()$/;"	v
shellwords	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:shellwords(str) abort$/;"	f
shift	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  int shift;			\/* interval duration (s) (shift) (ro) *\/$/;"	m	struct:timex
shift	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shift	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shortpath	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
shortpath	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
should	autoload/plugged/bracey.vim/server/test/test.js	/^var should = require('chai').should();$/;"	v
showError	autoload/plugged/bracey.vim/server/frontend.js	/^	var showError = function(message){$/;"	f
showMenu	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
show_bookmarks	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:show_bookmarks() abort$/;"	f
show_category	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
show_commands	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:show_commands() abort$/;"	f
show_dir	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:show_dir() abort$/;"	f
show_documentation	plug-config/coc.vim	/^function! s:show_documentation()$/;"	f
show_done	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
show_files	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:show_files() abort$/;"	f
show_floating_win	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_floating_win(rows, layout) abort$/;"	f
show_lists	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:show_lists(lists) abort$/;"	f
show_next_level_mappings	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:show_next_level_mappings(next_runtime) abort$/;"	f
show_ng	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
show_old_win	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_old_win(rows, layout) abort$/;"	f
show_pass	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_popup	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_popup(rows) abort$/;"	f
show_sessions	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:show_sessions() abort$/;"	f
show_skip	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
show_title	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	autoload/plugged/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
show_upper_level_mappings	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! s:show_upper_level_mappings() abort$/;"	f
shrug	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:shrug()$/;"	f
sigset_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@sigset_t.h	/^typedef __sigset_t sigset_t;$/;"	t
silent_call	autoload/plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
sincos	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2021;"	d
sincosf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2026;"	d
sincosl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2031;"	d
sinf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2036;"	d
sinhf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2041;"	d
sinhl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2046;"	d
sinl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2051;"	d
sizeSpec	autoload/plugged/fzf/src/options.go	/^type sizeSpec struct {$/;"	t
size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^  typedef __SIZE_TYPE__ 	size_t;$/;"	t	namespace:std
size_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
sj	keys/mappings.vim	/^  nnoremap <silent>sj :set splitbelow<CR>:split<CR>$/;"	m
sk	keys/mappings.vim	/^  nnoremap <silent>sk :set nosplitbelow<CR>:split<CR>:set splitbelow<CR>$/;"	m
skip_if	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = ($/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
skip_if	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
skip_if	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
skip_if	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
skip_if	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
skip_if	autoload/plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:_UmlautsBase
skip_if	autoload/plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
skip_if	autoload/plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
skip_if	autoload/plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Leave
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_ShebangPython
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_SimpleExample
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TextInNextLine
skip_if	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_WithUmlauts
skip_if	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	autoload/plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_LowerCaseAsciiResult
skip_if	autoload/plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_SimpleCaseAsciiResult
skip_if	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	autoload/plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	v	class:VimTestCase
sl	keys/mappings.vim	/^  nnoremap <silent>sl :set splitright<CR>:vsplit<CR>$/;"	m
sl	vscode/settings.vim	/^nnoremap sl  :Split<CR>$/;"	m
slab	autoload/plugged/fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v
slab16Size	autoload/plugged/fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c
slab32Size	autoload/plugged/fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c
sleeptime	autoload/plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
sleuth	autoload/plugged/vim-sleuth/plugin/sleuth.vim	/^augroup sleuth$/;"	a
sliceChunks	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f
smcup	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) smcup() {$/;"	f
smoothie#backwards	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#backwards()$/;"	f
smoothie#downwards	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#downwards()$/;"	f
smoothie#forwards	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#forwards()$/;"	f
smoothie#upwards	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#upwards()$/;"	f
snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
sneak#cancel	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#cancel() abort$/;"	f
sneak#init	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#init() abort$/;"	f
sneak#is_sneaking	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#is_sneaking() abort$/;"	f
sneak#label#sanitize_target_labels	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! sneak#label#sanitize_target_labels() abort$/;"	f
sneak#label#to	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^func! sneak#label#to(s, v, label) abort$/;"	f
sneak#reset	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#reset(key) abort$/;"	f
sneak#search#get_cs	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^func! sneak#search#get_cs(input, use_ic_scs) abort$/;"	f
sneak#search#new	autoload/plugged/vim-sneak/autoload/sneak/search.vim	/^func! sneak#search#new() abort$/;"	f
sneak#state	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#state() abort$/;"	f
sneak#to	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#to(op, input, inputlen, count, register, repeatmotion, reverse, inclusive, label) abort "{{{$/;"	f
sneak#util#echo	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#echo(msg) abort$/;"	f
sneak#util#getc	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#getc() abort$/;"	f
sneak#util#getchar	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#getchar() abort$/;"	f
sneak#util#has_upper	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#has_upper(s) abort$/;"	f
sneak#util#isvisualop	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#isvisualop(op) abort$/;"	f
sneak#util#links_to	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#links_to(hlgroup) abort$/;"	f
sneak#util#nudge	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#nudge(right) abort$/;"	f
sneak#util#removehl	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#removehl() abort$/;"	f
sneak#util#skipfold	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#skipfold(current_line, reverse) abort$/;"	f
sneak#util#strlen	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^  func! sneak#util#strlen(s) abort$/;"	f
sneak#util#wincol1	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#wincol1() abort$/;"	f
sneak#wrap	autoload/plugged/vim-sneak/plugin/sneak.vim	/^func! sneak#wrap(op, inputlen, reverse, inclusive, label) abort$/;"	f
sneak_colorscheme	autoload/plugged/vim-sneak/autoload/sneak/util.vim	/^augroup sneak_colorscheme  " Re-init on :colorscheme change at runtime. #108$/;"	a
sneak_netrw	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  augroup sneak_netrw$/;"	a
sneak_optionset	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  augroup sneak_optionset$/;"	a
snipMate_Disabled	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue658	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	autoload/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_end	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_start	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippet_start	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	autoload/plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ("test", "[ ${1:foo} ]")$/;"	v	class:Autocommands
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü $1")$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üüüüüßßßß")$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndNL
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndStartNL
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_JustNL
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_StartNL
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:_MultiLineDefault
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts_List
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	autoload/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${0|red,blue|}")$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}} ${3}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,,c|}")$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|} is ${2:color}\\nline 2")$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_WillBeExpandedToInlineSelection
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1||}")$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
snippets	autoload/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|Русский язык,中文,한국어,öääö|}")$/;"	v	class:Choices_CanTakeNonAsciiCharacters
snippets	autoload/plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	autoload/plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	autoload/plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_ChangesInPlaceholder
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:one}(${2:xxx})${3:three}")$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	autoload/plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	autoload/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo ${1:Welt}")$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
snippets	autoload/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	autoload/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	autoload/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
snippets	autoload/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
snippets	autoload/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	autoload/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
snippets	autoload/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "\\t${1}${0}")$/;"	v	class:ShiftWidthZero
snippets	autoload/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "hello")$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	autoload/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldOverwrite_Simple_ECR
snippets	autoload/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	autoload/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	autoload/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:PerlSyntaxFold
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	autoload/plugged/ultisnips/test/test_Format.py	/^    snippets = (("m1", "Something"), ("m", "\\t$0"))$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "`!p snip.rv = 5`")$/;"	v	class:Python_SnipRvCanBeNonText
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_IndentedMultiline
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSw
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSwOffset
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentNoetSwTs
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentProblem
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_Locals
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppend
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShift
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultilineIndented
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_ResetIndent
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleAppend
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleMkline
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TransformedBeforeMultiLine
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_UseNewOverOld
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:TabStop_Shell_ShebangPython
snippets	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = ($/;"	v	class:_ListAllSnippets
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	autoload/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:_MultipleMatches
snippets	autoload/plugged/ultisnips/test/test_Plugin.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ $1 $2 ] $1"), ("m1", "ASnip $1 ASnip $2 ASnip"))$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"${1:one}${0:explicit zero}${2:two}", "snip", "i"),)$/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"_${0:explicit zero}", "snip", "i"),)$/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "Just some Text"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	autoload/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "[ ${1:first} $0 ${2:sec} ]"), ("m", "[ ${1:first} ${2:sec} ]"))$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	autoload/plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	autoload/plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	autoload/plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	autoload/plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	autoload/plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:OldSelection_RealWorldCase_Test
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test ", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:_TabExpand_RealWorld
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "w"),)$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "w"),)$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We do not overwrite", "Overwrite the two", "", -1),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", -5),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", 1),)$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "[ $1$2 ] $1")$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world")$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Leave
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Overwrite
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "t$1t${2: }t{\\n\\t$0\\n}")$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	autoload/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	autoload/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict3
snippets	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("testâ", "abc123ά", "123'êabc")$/;"	v	class:VerifyVimDict1
snippets	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict2
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordExclusive
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordInclusive
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	autoload/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	autoload/plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, search_all):$/;"	m	class:SnippetManager
sortByLength	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
sortCriteria	autoload/plugged/fzf/src/result.go	/^var sortCriteria []criterion$/;"	v
sortSelected	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f
sort_buffers	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
sort_by_tick	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:sort_by_tick(one, two)$/;"	f
source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
source.gather_candidates	autoload/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
source_handle	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  let source_handle = {}$/;"	v
source_handle.extension	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.extension() abort$/;"	f
source_handle.filetype	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.filetype() abort$/;"	f
source_handle.get_winid	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.get_winid() abort$/;"	f
source_handle.get_winnr	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.get_winnr() abort$/;"	f
source_handle.line	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.line(lnum) abort$/;"	f
source_handle.line_trimmed	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.line_trimmed(lnum) abort$/;"	f
source_handle.lines	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.lines() abort$/;"	f
source_handle.scope_seperator	autoload/plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.scope_seperator() abort$/;"	f
space_before_function_paren	autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
spaces_to_indent	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spaces_to_indent	autoload/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
speeddating#adddate	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#adddate(master,count,bang)$/;"	f
speeddating#increment	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#increment(increment)$/;"	f
speeddating#incrementvisual	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#incrementvisual(count)$/;"	f
speeddating#loadformats	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#loadformats()$/;"	f
speeddating#timestamp	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#timestamp(utc,count)$/;"	f
spinnerDuration	autoload/plugged/fzf/src/constants.go	/^	spinnerDuration   = 100 * time.Millisecond$/;"	c
split	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
split	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:split(tab)$/;"	f
split	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:split(str, delimiter)$/;"	f
split	vscode/settings.vim	/^function! s:split(...) abort$/;"	f
splitNew	vscode/settings.vim	/^function! s:splitNew(...)$/;"	f
splitNth	autoload/plugged/fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f
split_at_whitespace	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def split_at_whitespace(string):$/;"	f
split_or_new	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:split_or_new() abort$/;"	f
split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
splittable	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
sqrtf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2056;"	d
sqrtl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2061;"	d
sscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	423;"	d
ssize_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __ssize_t ssize_t;$/;"	t
ssize_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __ssize_t ssize_t;$/;"	t
stabil	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t stabil;	\/* pps stability (scaled ppm) (ro) *\/$/;"	m	struct:timex
stage	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
start	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.start = function(){$/;"	m	class:Server
start	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
start	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def start(self):$/;"	m	class:TextObject
startEventPoller	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) startEventPoller() {$/;"	f
startServer	autoload/plugged/bracey.vim/script/bracey.py	/^def startServer():$/;"	f
start_in_terminal	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:start_in_terminal(opts)$/;"	f
start_moving	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:start_moving()$/;"	f
start_prompt	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:start_prompt(eventName)$/;"	f
start_prompt_vim	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:start_prompt_vim(eventName) abort$/;"	f
start_resize_timer	autoload/plugged/far.vim/autoload/far.vim	/^function! s:start_resize_timer() abort$/;"	f
startify	autoload/plugged/vim-startify/plugin/startify.vim	/^augroup startify$/;"	a
startify#center	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#center(lines) abort$/;"	f
startify#debug	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#debug()$/;"	f
startify#fortune#boxed	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#boxed(...) abort$/;"	f
startify#fortune#cowsay	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#cowsay(...) abort$/;"	f
startify#fortune#predefined_quotes	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#predefined_quotes() abort$/;"	f
startify#fortune#quote	autoload/plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#quote() abort$/;"	f
startify#get_lastline	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#get_lastline() abort$/;"	f
startify#get_separator	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#get_separator() abort$/;"	f
startify#get_session_path	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#get_session_path() abort$/;"	f
startify#insane_in_the_membrane	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#insane_in_the_membrane(on_vimenter) abort$/;"	f
startify#open_buffers	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#open_buffers(...) abort$/;"	f
startify#pad	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#pad(lines) abort$/;"	f
startify#session_close	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_close() abort$/;"	f
startify#session_delete	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete(bang, ...) abort$/;"	f
startify#session_delete_buffers	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete_buffers()$/;"	f
startify#session_list	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list(lead, ...) abort$/;"	f
startify#session_list_as_string	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list_as_string(lead, ...) abort$/;"	f
startify#session_load	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_load(source_last_session, ...) abort$/;"	f
startify#session_save	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_save(bang, ...) abort$/;"	f
startify#session_write	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#session_write(session_path)$/;"	f
startify#set_batchmode	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#set_batchmode(batchmode) abort$/;"	f
startify#set_mark	autoload/plugged/vim-startify/autoload/startify.vim	/^function! startify#set_mark(type, ...) abort$/;"	f
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ChoicesToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream, chars=r"{}\\$`"):$/;"	m	class:EscapeCharToken
state	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdlib.h	/^    int32_t *state;		\/* Array of state values.  *\/$/;"	m	struct:random_data
status	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  int status;			\/* clock command\/status *\/$/;"	m	struct:timex
status	autoload/plug.vim	/^function! s:status()$/;"	f
status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
stbcnt	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t stbcnt;	\/* stability limit exceeded (ro) *\/$/;"	m	struct:timex
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@cxxabi_init_exception.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@erase_if.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^namespace std $/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@hash_bytes.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@debug@debug.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++allocator.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	/^namespace std { typedef decltype(nullptr) nullptr_t; }$/;"	n
stderr	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	143;"	d
stderr	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderr(str string) {$/;"	f
stderrInternal	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderrInternal(str string, allowNLCR bool) {$/;"	f
stderrInternal	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) stderrInternal(str string, allowNLCR bool) {$/;"	f
stdin	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	141;"	d
stdin	autoload/plugged/fzf/plugin/fzf.vim	/^    let stdin = has_key(a:dict, 'source') ? '' : '< \/dev\/tty'$/;"	v
stdout	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	142;"	d
step_down	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:step_down()$/;"	f
step_many	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:step_many(lines)$/;"	f
step_up	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:step_up()$/;"	f
steps	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 1), (0, -8), (0, 1)), ((0, 1), (0, 1), (0, 2)))$/;"	v	class:MovePosition_DelSameLine
steps	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 12), (0, -4), (1, 0)), ((0, 12), (-1, 0), (0, 12)))$/;"	v	class:MovePosition_DelSecondLine
steps	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 3), (0, 3), (0, 12)),)$/;"	v	class:MovePosition_InsSameLine2
steps	autoload/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 4), (0, -3), (0, 3)), ((0, 8), (0, -1), (0, 3)))$/;"	v	class:MovePosition_DelSameLine1
stl	autoload/plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	autoload/plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
stop	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.stop = function(){$/;"	m	class:Server
stopServer	autoload/plugged/bracey.vim/script/bracey.py	/^def stopServer():$/;"	f
stop_job_for_buf	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:stop_job_for_buf(buf, ...)$/;"	f
stop_moving	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:stop_moving()$/;"	f
stopit	autoload/plugged/vim-autoformat/samples/python.py	/^    stopit=0     $/;"	v	class:SuckerThread
str2bufnr	autoload/plugged/vim-bbye/plugin/bbye.vim	/^function! s:str2bufnr(buffer)$/;"	f
strLines	autoload/plugged/fzf/src/options.go	/^func strLines(str string) []string {$/;"	f
str_function	autoload/plugged/vim-autoformat/samples/fortran.f90	/^        str_function(/;"	f	module:prettify_selftest
strchar	autoload/plugged/vim-sneak/autoload/sneak/label.vim	/^  func! s:strchar(s, i) abort$/;"	f
strftime	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:strftime(pattern,time)$/;"	f
string_literals	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^    inline namespace string_literals { }$/;"	n	namespace:std::literals
string_to_keys	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:string_to_keys(input) abort$/;"	f
string_view_literals	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	/^    inline namespace string_view_literals { }$/;"	n	namespace:std::literals
strip	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:strip(text)$/;"	f
strip	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
stripElement	autoload/plugged/bracey.vim/server/htmlfile.js	/^function stripElement(elem, include_index){$/;"	f
stripElements	autoload/plugged/bracey.vim/server/htmlfile.js	/^function stripElements(elems, include_index){$/;"	f
stripParams	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.stripParams = function(url){$/;"	m	class:Server
strip_trailing_new_line	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
strip_white_space	autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
strtof	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2066;"	d
strtold	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2071;"	d
style	autoload/plugged/fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f
sub	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:sub(dir, identifier)$/;"	f
sucker	autoload/plugged/vim-autoformat/samples/python.py	/^    sucker=None     $/;"	v	class:App
suite.BuildGitStatusCommand	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitStatusCommand() abort$/;"	f
suite.BuildGitWorkdirCommand	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitWorkdirCommand() abort$/;"	f
suite.CustomIndicator	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.CustomIndicator() abort$/;"	f
suite.Initializing	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Initializing() abort$/;"	f
suite.Logger	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Logger() abort$/;"	f
suite.UpdateParentDirsStatus	autoload/plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.UpdateParentDirsStatus() abort$/;"	f
summary	autoload/plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
summary	autoload/plugged/vim-rooter/test/runner.vim	/^let summary = [$/;"	v
surroundings	autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
suseconds_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@select.h	/^typedef __suseconds_t suseconds_t;$/;"	t
suseconds_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __suseconds_t suseconds_t;$/;"	t
suspend_proxy_edits	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
swap	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@exception_ptr.h	/^    swap(exception_ptr& __lhs, exception_ptr& __rhs)$/;"	f	namespace:std::__exception_ptr
switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
swscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	660;"	d
symbol_kind_str	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/parse.vim	/^function! s:symbol_kind_str(kind) abort$/;"	f
syn_name	autoload/plugged/vim-floaterm/rplugin/python3/denite/source/floaterm.py	/^            def syn_name(key: str) -> str:$/;"	f	function:Source.highlight
syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
syntax	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:syntax()$/;"	f
system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system	autoload/plugged/bracey.vim/server/filemanager.js	/^		system: path,$/;"	p	class:createdFile.path
system	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:system(cmd)$/;"	f
system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
t	autoload/plugged/vim-autoformat/samples/fortran.f90	/^   ty/;"	v	program:example_prog
tabline_evaluated_length	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
tabnew	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:tabnew()$/;"	f
tabulify	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def tabulify (self, rows):$/;"	m	class:PrettyText
tagFromPosition	autoload/plugged/bracey.vim/server/htmlfile.js	/^HtmlFile.prototype.tagFromPosition = function(line, column){$/;"	m	class:HtmlFile
tagNumFromIndex	autoload/plugged/bracey.vim/server/htmlfile.js	/^function tagNumFromIndex(index, elem){$/;"	f
tagalong	autoload/plugged/tagalong.vim/plugin/tagalong.vim	/^augroup tagalong$/;"	a
tagalong#Apply	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! tagalong#Apply()$/;"	f
tagalong#Deinit	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! tagalong#Deinit()$/;"	f
tagalong#Init	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! tagalong#Init()$/;"	f
tagalong#Reapply	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! tagalong#Reapply()$/;"	f
tagalong#Trigger	autoload/plugged/tagalong.vim/autoload/tagalong.vim	/^function! tagalong#Trigger(...)$/;"	f
tagalong#util#DropCursor	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#DropCursor()$/;"	f
tagalong#util#GetByPosition	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#GetByPosition(start, end)$/;"	f
tagalong#util#GetMotion	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#GetMotion(motion)$/;"	f
tagalong#util#PopCursor	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#PopCursor()$/;"	f
tagalong#util#PosBetween	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#PosBetween(pos, start, end)$/;"	f
tagalong#util#PushCursor	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#PushCursor()$/;"	f
tagalong#util#ReplaceMotion	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#ReplaceMotion(motion, text)$/;"	f
tagalong#util#SearchSkip	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#SearchSkip(pattern, skip, ...)$/;"	f
tagalong#util#SearchUnderCursor	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#SearchUnderCursor(pattern, ...)$/;"	f
tagalong#util#SearchposUnderCursor	autoload/plugged/tagalong.vim/autoload/tagalong/util.vim	/^function! tagalong#util#SearchposUnderCursor(pattern, ...)$/;"	f
tags_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
tai	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  int tai;			\/* TAI offset (ro) *\/$/;"	m	struct:timex
tanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2076;"	d
tanhf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2081;"	d
tanhl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2086;"	d
tanl	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@c++config.h	2091;"	d
task_edit	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:task_edit(mode, path, template)$/;"	f
task_list	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def task_list (self, all = False, raw = False):$/;"	m	class:TaskManager
task_list	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:task_list(path, showall)$/;"	f
task_macro	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:task_macro(wsl)$/;"	f
task_macros	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def task_macros (self, wsl = False):$/;"	m	class:TaskManager
task_option	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def task_option (self, task):$/;"	m	class:TaskManager
task_option	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:task_option(task)$/;"	f
task_run	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def task_run (self, taskname):$/;"	m	class:TaskManager
tearDown	autoload/plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
teardown	autoload/plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestBase.TestGoFZF
teardown	autoload/plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestBase.TestShell
tempname	autoload/plugged/fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	autoload/plugged/fzf/src/pattern.go	/^type term struct {$/;"	t
termEqual	autoload/plugged/fzf/src/pattern.go	/^	termEqual$/;"	c
termExact	autoload/plugged/fzf/src/pattern.go	/^	termExact$/;"	c
termFuzzy	autoload/plugged/fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c
termPrefix	autoload/plugged/fzf/src/pattern.go	/^	termPrefix$/;"	c
termSet	autoload/plugged/fzf/src/pattern.go	/^type termSet []term$/;"	t
termSuffix	autoload/plugged/fzf/src/pattern.go	/^	termSuffix$/;"	c
termType	autoload/plugged/fzf/src/pattern.go	/^type termType int$/;"	t
term_opts	autoload/plugged/fzf/plugin/fzf.vim	/^        let term_opts.curwin = 1$/;"	v
term_opts	autoload/plugged/fzf/plugin/fzf.vim	/^        let term_opts.hidden = 1$/;"	v
term_opts	autoload/plugged/fzf/plugin/fzf.vim	/^      let term_opts = {'exit_cb': function(fzf.on_exit)}$/;"	v
terminal_exit	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:terminal_exit(...)$/;"	f
terminal_open	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^function! s:terminal_open(opts)$/;"	f
terminate	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) terminate() {$/;"	f
terminateTree	autoload/plugged/coc.nvim/terminateProcess.sh	/^terminateTree() {$/;"	f
termname	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
test	autoload/plugged/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
test1	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test1():$/;"	f
test2	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test2():$/;"	f
test3	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test3():$/;"	f
test4	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test4():$/;"	f
test5	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test5():$/;"	f
test6	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test6():$/;"	f
test7	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def test7():$/;"	f
test_accept_non_empty	autoload/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty$/;"	f	class:TestBase.TestGoFZF
test_accept_non_empty_with_empty_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_empty_list$/;"	f	class:TestBase.TestGoFZF
test_accept_non_empty_with_multi_selection	autoload/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_multi_selection$/;"	f	class:TestBase.TestGoFZF
test_alt_c	autoload/plugged/fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	class:TestBase.TestShell
test_alt_c_command	autoload/plugged/fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	class:TestBase.TestShell
test_backward_delete_char_eof	autoload/plugged/fzf/test/test_go.rb	/^  def test_backward_delete_char_eof$/;"	f	class:TestBase.TestGoFZF
test_backward_eof	autoload/plugged/fzf/test/test_go.rb	/^  def test_backward_eof$/;"	f	class:TestBase.TestGoFZF
test_bind	autoload/plugged/fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestBase.TestGoFZF
test_bind_print_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestBase.TestGoFZF
test_bind_replace_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_bind_replace_query$/;"	f	class:TestBase.TestGoFZF
test_cancel	autoload/plugged/fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestBase.TestGoFZF
test_change_top	autoload/plugged/fzf/test/test_go.rb	/^  def test_change_top$/;"	f	class:TestBase.TestGoFZF
test_clear_list_when_header_lines_changed_due_to_reload	autoload/plugged/fzf/test/test_go.rb	/^  def test_clear_list_when_header_lines_changed_due_to_reload$/;"	f	class:TestBase.TestGoFZF
test_clear_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_clear_query$/;"	f	class:TestBase.TestGoFZF
test_clear_selection	autoload/plugged/fzf/test/test_go.rb	/^  def test_clear_selection$/;"	f	class:TestBase.TestGoFZF
test_complete_quoted_command	autoload/plugged/fzf/test/test_go.rb	/^  def test_complete_quoted_command$/;"	f	class:TestZsh
test_ctrl_r	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	class:TestBase.TestShell
test_ctrl_r_abort	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_abort$/;"	f	class:TestBase.TestShell
test_ctrl_r_multiline	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_multiline$/;"	f	class:TestBase.TestShell
test_ctrl_t	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	class:TestBase.TestShell
test_ctrl_t_unicode	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	class:TestBase.TestShell
test_custom_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	class:CompletionTest
test_custom_completion_api	autoload/plugged/fzf/test/test_go.rb	/^  def test_custom_completion_api$/;"	f	class:CompletionTest
test_cycle	autoload/plugged/fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestBase.TestGoFZF
test_default_extended	autoload/plugged/fzf/test/test_go.rb	/^  def test_default_extended$/;"	f	class:TestBase.TestGoFZF
test_dir_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	class:CompletionTest
test_dynamic_completion_loader	autoload/plugged/fzf/test/test_go.rb	/^  def test_dynamic_completion_loader$/;"	f	class:TestBash
test_escaped_meta_characters	autoload/plugged/fzf/test/test_go.rb	/^  def test_escaped_meta_characters$/;"	f	class:TestBase.TestGoFZF
test_exact	autoload/plugged/fzf/test/test_go.rb	/^  def test_exact$/;"	f	class:TestBase.TestGoFZF
test_execute	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestBase.TestGoFZF
test_execute_multi	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestBase.TestGoFZF
test_execute_plus_flag	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute_plus_flag$/;"	f	class:TestBase.TestGoFZF
test_execute_shell	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestBase.TestGoFZF
test_exit_0	autoload/plugged/fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestBase.TestGoFZF
test_exit_0_exit_code	autoload/plugged/fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestBase.TestGoFZF
test_exitstatus_empty	autoload/plugged/fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f	class:TestBase.TestGoFZF
test_expect	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestBase.TestGoFZF
test_expect_print_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestBase.TestGoFZF
test_expect_print_query_select_1	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestBase.TestGoFZF
test_expect_printable_character_print_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestBase.TestGoFZF
test_file_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	class:CompletionTest
test_file_completion_root	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	class:CompletionTest
test_file_completion_unicode	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	class:CompletionTest
test_file_word	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_word$/;"	f	class:TestBase.TestGoFZF
test_filter_exitstatus	autoload/plugged/fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestBase.TestGoFZF
test_function	autoload/plugged/vim-autoformat/samples/fortran.f90	/^ pure function test_function(/;"	f	module:prettify_selftest
test_fzf_default_command	autoload/plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestBase.TestGoFZF
test_fzf_default_command_failure	autoload/plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command_failure$/;"	f	class:TestBase.TestGoFZF
test_header	autoload/plugged/fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestBase.TestGoFZF
test_header_and_header_lines	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestBase.TestGoFZF
test_header_and_header_lines_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestBase.TestGoFZF
test_header_and_header_lines_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_header_lines	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestBase.TestGoFZF
test_header_lines_overflow	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestBase.TestGoFZF
test_header_lines_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestBase.TestGoFZF
test_header_lines_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_header_lines_with_nth	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestBase.TestGoFZF
test_header_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestBase.TestGoFZF
test_header_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_history	autoload/plugged/fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestBase.TestGoFZF
test_hscroll_off	autoload/plugged/fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f	class:TestBase.TestGoFZF
test_info_hidden	autoload/plugged/fzf/test/test_go.rb	/^  def test_info_hidden$/;"	f	class:TestBase.TestGoFZF
test_invalid_cache	autoload/plugged/fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestBase.TestGoFZF
test_invalid_cache_query_type	autoload/plugged/fzf/test/test_go.rb	/^  def test_invalid_cache_query_type$/;"	f	class:TestBase.TestGoFZF
test_invalid_option	autoload/plugged/fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestBase.TestGoFZF
test_inverse_only_search_should_not_sort_the_result	autoload/plugged/fzf/test/test_go.rb	/^  def test_inverse_only_search_should_not_sort_the_result$/;"	f	class:TestBase.TestGoFZF
test_jump	autoload/plugged/fzf/test/test_go.rb	/^  def test_jump$/;"	f	class:TestBase.TestGoFZF
test_jump_accept	autoload/plugged/fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f	class:TestBase.TestGoFZF
test_keep_right	autoload/plugged/fzf/test/test_go.rb	/^  def test_keep_right$/;"	f	class:TestBase.TestGoFZF
test_key_bindings	autoload/plugged/fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestBase.TestGoFZF
test_long_line	autoload/plugged/fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestBase.TestGoFZF
test_margin	autoload/plugged/fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestBase.TestGoFZF
test_margin_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestBase.TestGoFZF
test_margin_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_margin_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_marker	autoload/plugged/fzf/test/test_go.rb	/^  def test_marker$/;"	f	class:TestBase.TestGoFZF
test_multi_max	autoload/plugged/fzf/test/test_go.rb	/^  def test_multi_max$/;"	f	class:TestBase.TestGoFZF
test_multi_order	autoload/plugged/fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestBase.TestGoFZF
test_no_clear	autoload/plugged/fzf/test/test_go.rb	/^  def test_no_clear$/;"	f	class:TestBase.TestGoFZF
test_normalized_match	autoload/plugged/fzf/test/test_go.rb	/^  def test_normalized_match$/;"	f	class:TestBase.TestGoFZF
test_or_operator	autoload/plugged/fzf/test/test_go.rb	/^  def test_or_operator$/;"	f	class:TestBase.TestGoFZF
test_partial_caching	autoload/plugged/fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f	class:TestBase.TestGoFZF
test_phony	autoload/plugged/fzf/test/test_go.rb	/^  def test_phony$/;"	f	class:TestBase.TestGoFZF
test_pointer	autoload/plugged/fzf/test/test_go.rb	/^  def test_pointer$/;"	f	class:TestBase.TestGoFZF
test_pointer_with_jump	autoload/plugged/fzf/test/test_go.rb	/^  def test_pointer_with_jump$/;"	f	class:TestBase.TestGoFZF
test_preview	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview$/;"	f	class:TestBase.TestGoFZF
test_preview_bindings_with_default_preview	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_with_default_preview$/;"	f	class:TestBase.TestGoFZF
test_preview_bindings_without_default_preview	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_without_default_preview$/;"	f	class:TestBase.TestGoFZF
test_preview_correct_tab_width_after_ansi_reset_code	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_correct_tab_width_after_ansi_reset_code$/;"	f	class:TestBase.TestGoFZF
test_preview_file	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_file$/;"	f	class:TestBase.TestGoFZF
test_preview_flags	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_flags$/;"	f	class:TestBase.TestGoFZF
test_preview_hidden	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f	class:TestBase.TestGoFZF
test_preview_q_no_match	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match$/;"	f	class:TestBase.TestGoFZF
test_preview_q_no_match_with_initial_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match_with_initial_query$/;"	f	class:TestBase.TestGoFZF
test_preview_scroll_begin_and_offset	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_and_offset$/;"	f	class:TestBase.TestGoFZF
test_preview_scroll_begin_constant	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_constant$/;"	f	class:TestBase.TestGoFZF
test_preview_scroll_begin_expr	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_expr$/;"	f	class:TestBase.TestGoFZF
test_preview_size_0	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_size_0$/;"	f	class:TestBase.TestGoFZF
test_preview_update_on_select	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_update_on_select$/;"	f	class:TestBase.TestGoFZF
test_process_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	class:CompletionTest
test_query_unicode	autoload/plugged/fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestBase.TestGoFZF
test_read0	autoload/plugged/fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestBase.TestGoFZF
test_reload	autoload/plugged/fzf/test/test_go.rb	/^  def test_reload$/;"	f	class:TestBase.TestGoFZF
test_reload_even_when_theres_no_match	autoload/plugged/fzf/test/test_go.rb	/^  def test_reload_even_when_theres_no_match$/;"	f	class:TestBase.TestGoFZF
test_routine	autoload/plugged/vim-autoformat/samples/fortran.f90	/^   subroutine test_routine(/;"	s	module:prettify_selftest
test_scroll	autoload/plugged/fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestBase.TestGoFZF
test_select_1	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestBase.TestGoFZF
test_select_1_exit_0_fail	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestBase.TestGoFZF
test_select_all_deselect_all_toggle_all	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestBase.TestGoFZF
test_smart_case_for_each_term	autoload/plugged/fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestBase.TestGoFZF
test_snipmate_format	autoload/plugged/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	autoload/plugged/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
test_strip_xterm_osc_sequence	autoload/plugged/fzf/test/test_go.rb	/^  def test_strip_xterm_osc_sequence$/;"	f	class:TestBase.TestGoFZF
test_sync	autoload/plugged/fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestBase.TestGoFZF
test_tabstop	autoload/plugged/fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestBase.TestGoFZF
test_tac	autoload/plugged/fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestBase.TestGoFZF
test_tac_nosort	autoload/plugged/fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestBase.TestGoFZF
test_tac_sort	autoload/plugged/fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestBase.TestGoFZF
test_tiebreak	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_begin_algo_v2	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_begin_algo_v2$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_end	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_index_begin	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_length_with_nth	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestBase.TestGoFZF
test_toggle_sort	autoload/plugged/fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestBase.TestGoFZF
test_type	autoload/plugged/vim-autoformat/samples/fortran.f90	/^   type  test_type$/;"	t	module:prettify_selftest
test_unicode_case	autoload/plugged/fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestBase.TestGoFZF
test_unset_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	class:CompletionTest
test_vanilla	autoload/plugged/fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestBase.TestGoFZF
test_with_nth	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestBase.TestGoFZF
test_with_nth_ansi	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestBase.TestGoFZF
test_with_nth_basic	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth_basic$/;"	f	class:TestBase.TestGoFZF
test_with_nth_no_ansi	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestBase.TestGoFZF
text	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	autoload/plugged/ultisnips/test/test_Format.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	autoload/plugged/ultisnips/test/vim_test_case.py	/^    text_after = "\\n\\n --- some text after --- "$/;"	v	class:VimTestCase
text_before	autoload/plugged/ultisnips/test/test_Format.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	autoload/plugged/ultisnips/test/vim_test_case.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:VimTestCase
textobject	autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
thing1	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing1():$/;"	f	function:Foo.qux
thing1	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing1():$/;"	f	function:Foo.qux1
thing2	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing2():$/;"	f	function:Foo.qux.thing1
thing2	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing2():$/;"	f	function:Foo.qux1.thing1
thing3	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing3():$/;"	f	function:Foo.qux.thing1
thing3	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing3():$/;"	f	function:Foo.qux1.thing1
thing4	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing4():$/;"	f	function:Foo.qux
thing4	autoload/plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing4():$/;"	f	function:Foo.qux1
thousands_sep	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@locale.h	/^  char *thousands_sep;		\/* Thousands separator.  *\/$/;"	m	struct:lconv
thread_local_storage	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@c++@10@bits@gthr-default.h	/^static void *thread_local_storage = NULL;$/;"	v
throw	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:throw(string) abort$/;"	f
throw_with_nested	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@c++@10@bits@nested_exception.h	/^    throw_with_nested(_Tp&& __t)$/;"	f	namespace:std
tick	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t tick;	\/* (modified) usecs between clock ticks *\/$/;"	m	struct:timex
tick	autoload/plug.vim	/^function! s:tick()$/;"	f
time	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  struct timeval time;		\/* (read only, except for ADJ_SETOFFSET) *\/$/;"	m	struct:timex	typeref:struct:timex::timeval
time_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@time_t.h	/^typedef __time_t time_t;$/;"	t
timeout	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let timeout = s:is_vim ? 10 : 0$/;"	v
timer_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@timer_t.h	/^typedef __timer_t timer_t;$/;"	t
timeregexp	autoload/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:timeregexp() dict$/;"	f
timespec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timespec.h	/^struct timespec$/;"	s
timeval	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timeval.h	/^struct timeval$/;"	s
timex	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^struct timex$/;"	s
tm	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^struct tm$/;"	s
tm_gmtoff	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  long int tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm
tm_hour	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_hour;			\/* Hours.	[0-23] *\/$/;"	m	struct:tm
tm_isdst	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_isdst;			\/* DST.		[-1\/0\/1]*\/$/;"	m	struct:tm
tm_mday	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_mday;			\/* Day.		[1-31] *\/$/;"	m	struct:tm
tm_min	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_min;			\/* Minutes.	[0-59] *\/$/;"	m	struct:tm
tm_mon	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_mon;			\/* Month.	[0-11] *\/$/;"	m	struct:tm
tm_sec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_sec;			\/* Seconds.	[0-60] (1 leap second) *\/$/;"	m	struct:tm
tm_wday	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_wday;			\/* Day of week.	[0-6] *\/$/;"	m	struct:tm
tm_yday	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_yday;			\/* Days in year.[0-365]	*\/$/;"	m	struct:tm
tm_year	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  int tm_year;			\/* Year	- 1900.  *\/$/;"	m	struct:tm
tm_zone	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_tm.h	/^  const char *tm_zone;		\/* Timezone abbreviation.  *\/$/;"	m	struct:tm
tmpfile	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	178;"	d
tmux_enabled	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
toActions	autoload/plugged/fzf/src/terminal.go	/^func toActions(types ...actionType) []action {$/;"	f
toAnsiString	autoload/plugged/fzf/src/ansi.go	/^func toAnsiString(color tui.Color, offset int) string {$/;"	f
toJSON	autoload/plugged/vim-autoformat/samples/js.js	/^    "use strict", typeof Date.prototype.toJSON != "function" &&$/;"	m	class:use strict
to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_list	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:to_list(o)$/;"	f
to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
to_vim	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
to_vim_cursor	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
toascii	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	226;"	d
toascii_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	320;"	d
toggle	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:toggle()$/;"	f
toggleIgnoreFilter	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
toggleItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) toggleItem(item *Item) bool {$/;"	f
toggleShowBookmarks	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
toggleShowFiles	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
toggleShowHidden	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
toggleZoom	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
toggle_off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
tokenize	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def tokenize_snippet_text($/;"	f
tolerance	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@timex.h	/^  __syscall_slong_t tolerance;	\/* clock frequency tolerance (ppm) (ro) *\/$/;"	m	struct:timex
tolower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__NTH (tolower (int __c))$/;"	f
tolower	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	220;"	d
tolower_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	279;"	d
toupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	/^__NTH (toupper (int __c))$/;"	f
toupper	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	221;"	d
toupper_l	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@ctype.h	280;"	d
tracked	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:tracked(fugitive_repo, file)$/;"	f
tranquilize	autoload/plugged/goyo.vim/autoload/goyo.vim	/^function! s:tranquilize()$/;"	f
transform	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
transform	autoload/plugged/vim-startify/autoload/startify.vim	/^function s:transform(absolute_path)$/;"	f
transformInput	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) transformInput(item *Item) []Token {$/;"	f
trie_as_table	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_as_table(trie)$/;"	f
trie_create	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_create()$/;"	f
trie_destroy	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_destroy(trie)$/;"	f
trie_extend	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_extend(trie, t)$/;"	f
trie_insert	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_insert(trie, value)$/;"	f
trie_longest_prefix	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_longest_prefix(trie, value, start)$/;"	f
trie_search	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_search(trie, value, start)$/;"	f
trie_to_string	autoload/plugged/nvim-colorizer.lua/lua/colorizer/trie.lua	/^local function trie_to_string(trie)$/;"	f
trigger	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
trigger_gitgutter	autoload/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
trim	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! s:trim(str)$/;"	f
trim	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:trim(arg)$/;"	f
trimLeft	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f
trimQuery	autoload/plugged/fzf/src/terminal.go	/^func trimQuery(query string) []rune {$/;"	f
trimRight	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimRight(runes []rune, width int) ([]rune, int) {$/;"	f
trinity_split	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def trinity_split (self, text):$/;"	m	class:configure
trinity_split	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:trinity_split(text)$/;"	f
truncate	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:truncate(str, num)$/;"	f
truncateQuery	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) truncateQuery() {$/;"	f
trySkip	autoload/plugged/fzf/src/algo/algo.go	/^func trySkip(input *util.Chars, caseSensitive bool, b byte, from int) int {$/;"	f
try_curl	autoload/plugged/fzf/install	/^try_curl() {$/;"	f
try_download	autoload/plugged/vista.vim/test/fetch_testdata.sh	/^try_download() {$/;"	f
try_wget	autoload/plugged/fzf/install	/^try_wget() {$/;"	f
ts	plug-config/coc.vim	/^nmap ts <Plug>(coc-translator-p)$/;"	m
tt	plug-config/coc.vim	/^nmap tt :CocCommand explorer<CR>$/;"	m
ttyname	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^func ttyname() string {$/;"	f
ttyname	autoload/plugged/fzf/src/tui/ttyname_windows.go	/^func ttyname() string {$/;"	f
tui	autoload/plugged/fzf/src/tui/dummy.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/light.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/light_unix.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/light_windows.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/ttyname_windows.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/tui.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/tui_test.go	/^package tui$/;"	p
tv_nsec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timespec.h	/^  __syscall_slong_t tv_nsec;	\/* Nanoseconds.  *\/$/;"	m	struct:timespec
tv_nsec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timespec.h	/^  long int tv_nsec;  \/* Nanoseconds.  *\/$/;"	m	struct:timespec
tv_sec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timespec.h	/^  __time_t tv_sec;		\/* Seconds.  *\/$/;"	m	struct:timespec
tv_sec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timeval.h	/^  __time_t tv_sec;		\/* Seconds.  *\/$/;"	m	struct:timeval
tv_usec	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@struct_timeval.h	/^  __suseconds_t tv_usec;	\/* Microseconds.  *\/$/;"	m	struct:timeval
type	autoload/plugged/bracey.vim/server/htmlfile.js	/^		type: elem.type$/;"	p	class:stripElement.newElem
type	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:type(visual)$/;"	f
type_go	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go = {}$/;"	v
type_go	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.kind2scope = {$/;"	v
type_go	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.kinds = {$/;"	v
type_go	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.lang = 'go'$/;"	v
type_go	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.scope2kind = {$/;"	v
type_go	autoload/plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.sro = '.'$/;"	v
u	autoload/plugged/vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
u_char	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __u_char u_char;$/;"	t
u_int	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __u_int u_int;$/;"	t
u_int16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __uint16_t u_int16_t;$/;"	t
u_int32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __uint32_t u_int32_t;$/;"	t
u_int64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __uint64_t u_int64_t;$/;"	t
u_int8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __uint8_t u_int8_t;$/;"	t
u_long	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __u_long u_long;$/;"	t
u_quad_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __u_quad_t u_quad_t;$/;"	t
u_short	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __u_short u_short;$/;"	t
uid_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __uid_t uid_t;$/;"	t
uint	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef unsigned int uint;$/;"	t
uint16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-uintn.h	/^typedef __uint16_t uint16_t;$/;"	t
uint16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT16_TYPE__ uint16_t;$/;"	t
uint24_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT24_TYPE__ uint24_t;$/;"	t
uint32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-uintn.h	/^typedef __uint32_t uint32_t;$/;"	t
uint32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT32_TYPE__ uint32_t;$/;"	t
uint40_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT40_TYPE__ uint40_t;$/;"	t
uint48_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT48_TYPE__ uint48_t;$/;"	t
uint56_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT56_TYPE__ uint56_t;$/;"	t
uint64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-uintn.h	/^typedef __uint64_t uint64_t;$/;"	t
uint64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT64_TYPE__ uint64_t;$/;"	t
uint8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@stdint-uintn.h	/^typedef __uint8_t uint8_t;$/;"	t
uint8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINT8_TYPE__ uint8_t;$/;"	t
uint_fast16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned int		uint_fast16_t;$/;"	t
uint_fast16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned long int	uint_fast16_t;$/;"	t
uint_fast16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least16_t uint_fast16_t;$/;"	t
uint_fast24_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint24_t uint_fast24_t;$/;"	t
uint_fast32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned int		uint_fast32_t;$/;"	t
uint_fast32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned long int	uint_fast32_t;$/;"	t
uint_fast32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least32_t uint_fast32_t;$/;"	t
uint_fast40_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint40_t uint_fast40_t;$/;"	t
uint_fast48_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint48_t uint_fast48_t;$/;"	t
uint_fast56_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint56_t uint_fast56_t;$/;"	t
uint_fast64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned long int	uint_fast64_t;$/;"	t
uint_fast64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned long long int	uint_fast64_t;$/;"	t
uint_fast64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least64_t uint_fast64_t;$/;"	t
uint_fast8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned char		uint_fast8_t;$/;"	t
uint_fast8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least8_t uint_fast8_t;$/;"	t
uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __uint_least16_t uint_least16_t;$/;"	t
uint_least16_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least16_t uint_least16_t;$/;"	t
uint_least24_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint24_t uint_least24_t;$/;"	t
uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __uint_least32_t uint_least32_t;$/;"	t
uint_least32_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least32_t uint_least32_t;$/;"	t
uint_least40_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint40_t uint_least40_t;$/;"	t
uint_least48_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint48_t uint_least48_t;$/;"	t
uint_least56_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef uint56_t uint_least56_t;$/;"	t
uint_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __uint_least64_t uint_least64_t;$/;"	t
uint_least64_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least64_t uint_least64_t;$/;"	t
uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __uint_least8_t uint_least8_t;$/;"	t
uint_least8_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __uint_least8_t uint_least8_t;$/;"	t
uintmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef __uintmax_t		uintmax_t;$/;"	t
uintmax_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINTMAX_TYPE__ uintmax_t;$/;"	t
uintptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned int		uintptr_t;$/;"	t
uintptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdint.h	/^typedef unsigned long int	uintptr_t;$/;"	t
uintptr_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdint.h	/^typedef __UINTPTR_TYPE__ uintptr_t;$/;"	t
uis	autoload/plugged/asyncrun.vim/plugin/asyncrun.vim	/^		let uis = nvim_list_uis()[0]$/;"	v
ulen	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
ulong	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef unsigned long int ulong;$/;"	t
ultisnips_snippets	autoload/plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
unc_path	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
undo	autoload/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
undotree#UndotreeFocus	autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeFocus() abort$/;"	f
undotree#UndotreeHide	autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeHide() abort$/;"	f
undotree#UndotreeIsVisible	autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeIsVisible() abort$/;"	f
undotree#UndotreeShow	autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeShow() abort$/;"	f
undotree#UndotreeToggle	autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeToggle() abort$/;"	f
undotree#UndotreeUpdate	autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeUpdate() abort$/;"	f
undotree.Action	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Action(action) abort$/;"	f
undotree.ActionClearHistory	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionClearHistory() abort$/;"	f
undotree.ActionClose	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionClose() abort$/;"	f
undotree.ActionDiffToggle	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionDiffToggle() abort$/;"	f
undotree.ActionEnter	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionEnter() abort$/;"	f
undotree.ActionFocusTarget	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionFocusTarget() abort$/;"	f
undotree.ActionHelp	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionHelp() abort$/;"	f
undotree.ActionInTarget	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionInTarget(cmd) abort$/;"	f
undotree.ActionNextSavedState	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionNextSavedState() abort$/;"	f
undotree.ActionNextState	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionNextState() abort$/;"	f
undotree.ActionPreviousSavedState	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionPreviousSavedState() abort$/;"	f
undotree.ActionPreviousState	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionPreviousState() abort$/;"	f
undotree.ActionRedo	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionRedo() abort$/;"	f
undotree.ActionTimestampToggle	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionTimestampToggle() abort$/;"	f
undotree.ActionUndo	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionUndo() abort$/;"	f
undotree.AppendHelp	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.AppendHelp() abort$/;"	f
undotree.BindAu	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.BindAu() abort$/;"	f
undotree.BindKey	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.BindKey() abort$/;"	f
undotree.ConvertInput	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ConvertInput(updatetree) abort$/;"	f
undotree.Draw	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Draw() abort$/;"	f
undotree.GetStatusLine	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.GetStatusLine() abort$/;"	f
undotree.Index2Screen	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Index2Screen(index) abort$/;"	f
undotree.Init	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Init() abort$/;"	f
undotree.MarkSeqs	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.MarkSeqs() abort$/;"	f
undotree.Render	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Render() abort$/;"	f
undotree.Screen2Index	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Screen2Index(line) abort$/;"	f
undotree.SetTargetFocus	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.SetTargetFocus() abort$/;"	f
undotree.Show	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Show() abort$/;"	f
undotree.Toggle	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Toggle() abort$/;"	f
undotree.Update	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Update() abort$/;"	f
undotree.UpdateDiff	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.UpdateDiff() abort$/;"	f
undotree._parseNode	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree._parseNode(in,out) abort$/;"	f
undotreeAction	autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotreeAction(action) abort$/;"	f
unescape	autoload/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unescape_urlencode	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! s:unescape_urlencode(str) abort$/;"	f
unicode	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    unicode = str$/;"	v
unique_name_temp	autoload/plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix="", prefix=""):$/;"	m	class:TempFileManager
unite#sources#ultisnips#define	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define() abort$/;"	f
unite_source.action_table.expand.func	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate) abort$/;"	f
unite_source.action_table.preview.func	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate) abort$/;"	f
unite_source.gather_candidates	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context) abort$/;"	f
unite_source.get_longest_snippet_len	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list) abort$/;"	f
unite_source.hooks.on_syntax	autoload/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
unlet_codi	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:unlet_codi(key, ...)$/;"	f
unregister_snippet_source	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unset_var	autoload/plugged/fzf/test/test_go.rb	/^  def unset_var(name)$/;"	f	class:TestBase.TestShell
unshift	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
unshift	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
until	autoload/plugged/fzf/test/test_go.rb	/^  def until(refresh = false)$/;"	f	class:Tmux
untracked_output	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
upDirCurrentRootClosed	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
upDirCurrentRootOpen	autoload/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
updateCharIndex	autoload/plugged/bracey.vim/server/htmlfile.js	/^function updateCharIndex(from, to){$/;"	f
updatePromptOffset	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) updatePromptOffset() ([]rune, []rune) {$/;"	f
updateTerminalSize	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f
updateTerminalSize	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f
update_GistID	autoload/plugged/vim-gist/autoload/gist.vim	/^function! s:update_GistID(id) abort$/;"	f
update_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
update_extends	autoload/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_far_buffer	autoload/plugged/far.vim/autoload/far.vim	/^function! s:update_far_buffer(far_ctx, bufnr) abort "{{{$/;"	f
update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_git_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
update_hg_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_oldfiles	autoload/plugged/vim-startify/plugin/startify.vim	/^function! s:update_oldfiles(file)$/;"	f
update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline(forceit)$/;"	f
update_target	autoload/plugged/vim-smoothie/autoload/smoothie.vim	/^function s:update_target(lines)$/;"	f
update_textobjects	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
update_untracked	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
update_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
upsert_new_gitgutter_signs	autoload/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
uri2bufnr	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl.vim	/^function! s:uri2bufnr(uri) abort$/;"	f
url	autoload/plugged/bracey.vim/script/bracey.py	/^url = vim.eval("g:bracey_server_path.':'.g:bracey_server_port")$/;"	v
url_encode	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:url_encode(str) abort$/;"	f
usage	autoload/plugged/fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c
usage_help	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^def usage_help(prog):$/;"	f
use strict	autoload/plugged/vim-autoformat/samples/js.js	/^    "use strict", typeof Date.prototype.toJSON != "function" &&$/;"	c
use_known_shell	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
use_proxy_buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
use_sh	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:use_sh()$/;"	f
useconds_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef __useconds_t useconds_t;$/;"	t
useful_diff_colours	autoload/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:useful_diff_colours()$/;"	f
user_au	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:user_au(au)$/;"	f
ushort	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@sys@types.h	/^typedef unsigned short int ushort;$/;"	t
util	autoload/plugged/bracey.vim/server/htmlfile.js	/^var util = require('util');$/;"	v
util	autoload/plugged/bracey.vim/server/launch.js	/^var util = require('util');$/;"	v
util	autoload/plugged/fzf/src/util/atomicbool.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/chars.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/chars_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/eventbox.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/slab.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util_unix.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util_windows.go	/^package util$/;"	p
v	autoload/plugged/coc-snippets/python/ultisnips.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
v	autoload/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
va_arg	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	19;"	d
va_copy	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	27;"	d
va_end	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	18;"	d
va_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	/^typedef __gnuc_va_list va_list;$/;"	t
va_list	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stdarg.h	17;"	d
val	autoload/plugged/codi.vim/autoload/codi.vim	/^      let val = getwinvar(winnr, '&'.opt)$/;"	v
valid_dir	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
validateSign	autoload/plugged/fzf/src/options.go	/^func validateSign(sign string, signOptName string) error {$/;"	f
validate_buffer	autoload/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
validate_layout	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:validate_layout(layout)$/;"	f
variables	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:variables(bufnr) abort$/;"	f
version	autoload/plugged/fzf/src/constants.go	/^	version = "0.23.0"$/;"	c
version	autoload/plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
version_compare	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:version_compare(current, require)$/;"	f
version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
vfscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	473;"	d
vfwscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	713;"	d
viewer.init	autoload/plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:viewer.init(data) abort$/;"	f
viewer.render	autoload/plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:viewer.render() abort$/;"	f
vifm_callback	autoload/plugged/vim-floaterm/autoload/floaterm/wrapper/vifm.vim	/^function! s:vifm_callback(...) abort$/;"	f
vim	autoload/plugged/vim-floaterm/bin/floaterm.cmd	/^:vim$/;"	l
vim_executable	autoload/plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	autoload/plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None  # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_lsp_check_servers	autoload/plugged/vim-lsp-cxx-highlight/autoload/lsp_cxx_hl/client/vim_lsp.vim	/^augroup vim_lsp_check_servers$/;"	a
vim_snippets#Filename	autoload/plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vim_version	autoload/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
virtual_position	autoload/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def virtual_position(line, col):$/;"	f
virtual_text_codi_handle_done	autoload/plugged/codi.vim/autoload/codi.vim	/^function! s:virtual_text_codi_handle_done(bufnr, output)$/;"	f
vista#	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#(bang, ...) abort$/;"	f
vista#AutoUpdateWithDelay	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#AutoUpdateWithDelay(Fn, Args) abort$/;"	f
vista#Debug	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#Debug(...) abort$/;"	f
vista#FindItemsUnderDirectory	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#FindItemsUnderDirectory(dir) abort$/;"	f
vista#GetExplicitExecutive	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#GetExplicitExecutive(filetype) abort$/;"	f
vista#GetExplicitExecutiveOrDefault	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#GetExplicitExecutiveOrDefault() abort$/;"	f
vista#OnExecute	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#OnExecute(provider, AUF) abort$/;"	f
vista#RunForNearestMethodOrFunction	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#RunForNearestMethodOrFunction() abort$/;"	f
vista#SetProvider	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#SetProvider(provider) abort$/;"	f
vista#ShouldIgnore	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#ShouldIgnore(kind) abort$/;"	f
vista#ShouldSkip	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#ShouldSkip() abort$/;"	f
vista#Sort	autoload/plugged/vista.vim/autoload/vista.vim	/^function! vista#Sort() abort$/;"	f
vista#autocmd#Init	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! vista#autocmd#Init(group_name, AUF) abort$/;"	f
vista#autocmd#InitMOF	autoload/plugged/vista.vim/autoload/vista/autocmd.vim	/^function! vista#autocmd#InitMOF() abort$/;"	f
vista#cursor#FindNearestMethodOrFunction	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#FindNearestMethodOrFunction() abort$/;"	f
vista#cursor#FoldOrJump	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#FoldOrJump() abort$/;"	f
vista#cursor#NearestSymbol	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#NearestSymbol() abort$/;"	f
vista#cursor#ShowDetail	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowDetail(_timer) abort$/;"	f
vista#cursor#ShowDetailWithDelay	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowDetailWithDelay() abort$/;"	f
vista#cursor#ShowTag	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowTag() abort$/;"	f
vista#cursor#ShowTagFor	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowTagFor(lnum) abort$/;"	f
vista#cursor#TogglePreview	autoload/plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#TogglePreview() abort$/;"	f
vista#cursor#ctags#GetInfo	autoload/plugged/vista.vim/autoload/vista/cursor/ctags.vim	/^function! vista#cursor#ctags#GetInfo() abort$/;"	f
vista#cursor#lsp#GetInfo	autoload/plugged/vista.vim/autoload/vista/cursor/lsp.vim	/^function! vista#cursor#lsp#GetInfo() abort$/;"	f
vista#debugging#Info	autoload/plugged/vista.vim/autoload/vista/debugging.vim	/^function! vista#debugging#Info() abort$/;"	f
vista#debugging#InfoToClipboard	autoload/plugged/vista.vim/autoload/vista/debugging.vim	/^function! vista#debugging#InfoToClipboard() abort$/;"	f
vista#echo#EchoInCmdline	autoload/plugged/vista.vim/autoload/vista/echo.vim	/^function! vista#echo#EchoInCmdline(msg, tag) abort$/;"	f
vista#echo#EchoScopeInCmdlineIsOk	autoload/plugged/vista.vim/autoload/vista/echo.vim	/^function! vista#echo#EchoScopeInCmdlineIsOk() abort$/;"	f
vista#error#	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#(msg) abort$/;"	f
vista#error#Expect	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#Expect(expected) abort$/;"	f
vista#error#For	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#For(cmd, filetype) abort$/;"	f
vista#error#InvalidExecutive	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidExecutive(exe) abort$/;"	f
vista#error#InvalidFinderArgument	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidFinderArgument() abort$/;"	f
vista#error#InvalidOption	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidOption(opt, ...) abort$/;"	f
vista#error#Need	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#Need(needed) abort$/;"	f
vista#error#Notify	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#Notify(msg) abort$/;"	f
vista#error#RunCtags	autoload/plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#RunCtags(cmd) abort$/;"	f
vista#executive#ale#Cache	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#Cache() abort$/;"	f
vista#executive#ale#Execute	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#ale#Run	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#Run(fpath) abort$/;"	f
vista#executive#ale#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#RunAsync() abort$/;"	f
vista#executive#coc#Cache	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Cache() abort$/;"	f
vista#executive#coc#Execute	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#coc#Run	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Run(fpath) abort$/;"	f
vista#executive#coc#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#RunAsync() abort$/;"	f
vista#executive#ctags#AutoUpdate	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#AutoUpdate(fpath) abort$/;"	f
vista#executive#ctags#Cache	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Cache() abort$/;"	f
vista#executive#ctags#Execute	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#ctags#ProjectRun	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#ProjectRun() abort$/;"	f
vista#executive#ctags#Run	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Run(fpath) abort$/;"	f
vista#executive#ctags#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#RunAsync(fpath) abort$/;"	f
vista#executive#lcn#Cache	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Cache() abort$/;"	f
vista#executive#lcn#Execute	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#lcn#Run	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Run(fpath) abort$/;"	f
vista#executive#lcn#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#RunAsync() abort$/;"	f
vista#executive#nvim_lsp#Cache	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#Cache() abort$/;"	f
vista#executive#nvim_lsp#Execute	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#nvim_lsp#Run	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#Run(fpath) abort$/;"	f
vista#executive#nvim_lsp#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#RunAsync() abort$/;"	f
vista#executive#nvim_lsp#SetData	autoload/plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#SetData(data) abort$/;"	f
vista#executive#vim_lsc#Cache	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#Cache() abort$/;"	f
vista#executive#vim_lsc#Execute	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#vim_lsc#Run	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#Run(fpath) abort$/;"	f
vista#executive#vim_lsc#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#RunAsync() abort$/;"	f
vista#executive#vim_lsp#Cache	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Cache() abort$/;"	f
vista#executive#vim_lsp#Execute	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#vim_lsp#Run	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Run(fpath) abort$/;"	f
vista#executive#vim_lsp#RunAsync	autoload/plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#RunAsync() abort$/;"	f
vista#extension#markdown#AutoUpdate	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#AutoUpdate(fpath) abort$/;"	f
vista#extension#markdown#Execute	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#Execute(_bang, should_display) abort$/;"	f
vista#extension#markdown#GetHeader	autoload/plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#GetHeader(lnum) abort$/;"	f
vista#extension#rst#AutoUpdate	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! vista#extension#rst#AutoUpdate(fpath) abort$/;"	f
vista#extension#rst#Execute	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! vista#extension#rst#Execute(_bang, should_display) abort$/;"	f
vista#extension#rst#GetHeader	autoload/plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! vista#extension#rst#GetHeader(lnum) abort$/;"	f
vista#finder#Dispatch	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#Dispatch(bang, finder, executive) abort$/;"	f
vista#finder#GetSymbols	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#GetSymbols(...) abort$/;"	f
vista#finder#PrepareOpts	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#PrepareOpts(source, prompt) abort$/;"	f
vista#finder#PrepareSource	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#PrepareSource(raw_items) abort$/;"	f
vista#finder#RunFZFOrSkim	autoload/plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#RunFZFOrSkim(apply_run) abort$/;"	f
vista#finder#clap#Run	autoload/plugged/vista.vim/autoload/vista/finder/clap.vim	/^function! vista#finder#clap#Run(...) abort$/;"	f
vista#finder#fzf#Highlight	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#Highlight() abort$/;"	f
vista#finder#fzf#ProjectRun	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#ProjectRun(executive) abort$/;"	f
vista#finder#fzf#Run	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#Run(...) abort$/;"	f
vista#finder#fzf#extract	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#extract(line) abort$/;"	f
vista#finder#fzf#sink	autoload/plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#sink(line, ...) abort$/;"	f
vista#finder#skim#Run	autoload/plugged/vista.vim/autoload/vista/finder/skim.vim	/^function! vista#finder#skim#Run(...) abort$/;"	f
vista#floating#Close	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#Close() abort$/;"	f
vista#floating#DisplayAt	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#DisplayAt(lnum, tag) abort$/;"	f
vista#floating#DisplayRawAt	autoload/plugged/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#DisplayRawAt(lnum, lines) abort$/;"	f
vista#fold#Expr	autoload/plugged/vista.vim/autoload/vista/fold.vim	/^function! vista#fold#Expr() abort$/;"	f
vista#fold#Text	autoload/plugged/vista.vim/autoload/vista/fold.vim	/^function! vista#fold#Text() abort$/;"	f
vista#ftplugin#Set	autoload/plugged/vista.vim/autoload/vista/ftplugin.vim	/^function! vista#ftplugin#Set() abort$/;"	f
vista#highlight#Add	autoload/plugged/vista.vim/autoload/vista/highlight.vim	/^function! vista#highlight#Add(lnum, ensure_visible, tag) abort$/;"	f
vista#init#Api	autoload/plugged/vista.vim/autoload/vista/init.vim	/^function! vista#init#Api() abort$/;"	f
vista#jump#NextTopLevel	autoload/plugged/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#NextTopLevel() abort$/;"	f
vista#jump#PrevTopLevel	autoload/plugged/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#PrevTopLevel() abort$/;"	f
vista#jump#TagLine	autoload/plugged/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#TagLine(tag) abort$/;"	f
vista#parser#ctags#FromExtendedRaw	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#FromExtendedRaw(line, container) abort$/;"	f
vista#parser#ctags#FromJSON	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#FromJSON(line, container) abort$/;"	f
vista#parser#ctags#RecursiveFromJSON	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#RecursiveFromJSON(line, container) abort$/;"	f
vista#parser#ctags#RecursiveFromXformat	autoload/plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#RecursiveFromXformat(line, container) abort$/;"	f
vista#parser#lsp#CocSymbols	autoload/plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#CocSymbols(symbol, container) abort$/;"	f
vista#parser#lsp#ExtractSymbol	autoload/plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#ExtractSymbol(symbol, container) abort$/;"	f
vista#parser#lsp#KindToSymbol	autoload/plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#KindToSymbol(line, container) abort$/;"	f
vista#popup#Close	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#Close() abort$/;"	f
vista#popup#DisplayAt	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#DisplayAt(lnum, tag) abort$/;"	f
vista#popup#DisplayRawAt	autoload/plugged/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#DisplayRawAt(lnum, lines) abort$/;"	f
vista#preview#GetLines	autoload/plugged/vista.vim/autoload/vista/preview.vim	/^function! vista#preview#GetLines(lnum) abort$/;"	f
vista#renderer#Decorate	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#Decorate(kind) abort$/;"	f
vista#renderer#IconFor	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#IconFor(kind) abort$/;"	f
vista#renderer#LSPPreprocess	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#LSPPreprocess(lsp_result) abort$/;"	f
vista#renderer#LSPProcess	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#LSPProcess(processed_data, reload_only, should_display) abort$/;"	f
vista#renderer#Render	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#Render(data) abort$/;"	f
vista#renderer#RenderAndDisplay	autoload/plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#RenderAndDisplay(data) abort$/;"	f
vista#renderer#hir#ctags#Render	autoload/plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! vista#renderer#hir#ctags#Render() abort$/;"	f
vista#renderer#hir#lsp#Coc	autoload/plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! vista#renderer#hir#lsp#Coc(data) abort$/;"	f
vista#renderer#kind#Render	autoload/plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! vista#renderer#kind#Render(data) abort$/;"	f
vista#renderer#line#Render	autoload/plugged/vista.vim/autoload/vista/renderer/line.vim	/^function! vista#renderer#line#Render() abort$/;"	f
vista#renderer#markdown_like#MD	autoload/plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! vista#renderer#markdown_like#MD(data) abort$/;"	f
vista#renderer#markdown_like#RST	autoload/plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! vista#renderer#markdown_like#RST(data) abort$/;"	f
vista#sidebar#Close	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Close() abort$/;"	f
vista#sidebar#IsOpen	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#IsOpen() abort$/;"	f
vista#sidebar#Open	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Open() abort$/;"	f
vista#sidebar#OpenOrUpdate	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#OpenOrUpdate(rows) abort$/;"	f
vista#sidebar#Reload	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Reload(data) abort$/;"	f
vista#sidebar#Toggle	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Toggle() abort$/;"	f
vista#sidebar#ToggleFocus	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#ToggleFocus() abort$/;"	f
vista#sidebar#WhichFileType	autoload/plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#WhichFileType() abort$/;"	f
vista#source#GotoWin	autoload/plugged/vista.vim/autoload/vista/source.vim	/^function! vista#source#GotoWin() abort$/;"	f
vista#source#PeekSymbol	autoload/plugged/vista.vim/autoload/vista/source.vim	/^  function! vista#source#PeekSymbol(lnum, tag) abort$/;"	f
vista#source#Update	autoload/plugged/vista.vim/autoload/vista/source.vim	/^function! vista#source#Update(bufnr, winnr, ...) abort$/;"	f
vista#statusline#	autoload/plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#() abort$/;"	f
vista#statusline#Render	autoload/plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#Render() abort$/;"	f
vista#statusline#RenderOnWinEvent	autoload/plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#RenderOnWinEvent() abort$/;"	f
vista#statusline#ShouldDisable	autoload/plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#ShouldDisable() abort$/;"	f
vista#toc#IsSupported	autoload/plugged/vista.vim/autoload/vista/toc.vim	/^function! vista#toc#IsSupported(filetype) abort$/;"	f
vista#toc#Run	autoload/plugged/vista.vim/autoload/vista/toc.vim	/^function! vista#toc#Run() abort$/;"	f
vista#types#uctags#KindsFor	autoload/plugged/vista.vim/autoload/vista/types/uctags.vim	/^function! vista#types#uctags#KindsFor(filetype) abort$/;"	f
vista#util#BinarySearch	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#BinarySearch(array, target, cmp_key, ret_key) abort$/;"	f
vista#util#Blink	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Blink(times, delay, ...) abort$/;"	f
vista#util#CacheDirectory	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#CacheDirectory() abort$/;"	f
vista#util#Complete	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Complete(A, L, P) abort$/;"	f
vista#util#Cursor	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Cursor(...) abort$/;"	f
vista#util#JobStop	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  function! vista#util#JobStop(jobid) abort$/;"	f
vista#util#Join	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Join(...) abort$/;"	f
vista#util#LowerIndentLineNr	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#LowerIndentLineNr() abort$/;"	f
vista#util#MaxLen	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#MaxLen() abort$/;"	f
vista#util#Retriving	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Retriving(executive) abort$/;"	f
vista#util#SetBufline	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#SetBufline(bufnr, lines) abort$/;"	f
vista#util#ToCamelCase	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#ToCamelCase(s) abort$/;"	f
vista#util#Trim	autoload/plugged/vista.vim/autoload/vista/util.vim	/^  function! vista#util#Trim(str) abort$/;"	f
vista#util#Truncate	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Truncate(msg) abort$/;"	f
vista#util#TryAdd	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#TryAdd(dict, key, value) abort$/;"	f
vista#util#Warning	autoload/plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Warning(msg) abort$/;"	f
vista#win#CloseFloating	autoload/plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#CloseFloating() abort$/;"	f
vista#win#Execute	autoload/plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#Execute(winnr, Run, ...) abort$/;"	f
vista#win#FloatingDisplay	autoload/plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#FloatingDisplay(...) abort$/;"	f
vista#win#FloatingDisplayOrPeek	autoload/plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#FloatingDisplayOrPeek(lnum, tag) abort$/;"	f
vista#win#ShowFoldedDetailInFloatingIsOk	autoload/plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#ShowFoldedDetailInFloatingIsOk() abort$/;"	f
vmove	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) vmove(o int, allowCycle bool) {$/;"	f
vscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	474;"	d
vscodeCommentary	vscode/settings.vim	/^function! s:vscodeCommentary(...) abort$/;"	f
vset	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f
vsscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@stdio.h	475;"	d
vswscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	715;"	d
vwscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	714;"	d
w!!	general/settings.vim	/^cmap w!! w !sudo tee %$/;"	m
wait	autoload/plugged/fzf/test/test_go.rb	/^def wait$/;"	f
wait_until_file_exists	autoload/plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wait_with_timeout	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:wait_with_timeout(timeout) abort$/;"	f
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 0, "abc"), ("I", 0, 0, "def"))$/;"	v	class:TestNoSubstring
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "asomelongertextb"), ("I", 0, 1, "o"))$/;"	v	class:TestCommonCharacters
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "tdin.h"),)$/;"	v	class:MatchIsTooCheap
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 10, "Beginning"), ("I", 0, 10, "t"))$/;"	v	class:TestRealLife
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 11, "this is it"), ("I", 0, 11, "a"))$/;"	v	class:TestUltiSnipsProblem
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " "),)$/;"	v	class:TestGuessing_DeleteOneChar
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " hallo"),)$/;"	v	class:TestCheapDelete
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 6, " "),)$/;"	v	class:TestGuessing_BackspaceOneChar
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 1, 6, "kjsdhfjksdhfkjhsdfkh"), ("I", 1, 6, "b"))$/;"	v	class:TestCrash
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 11, " "),)$/;"	v	class:TestRealLife1
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 6, " "),)$/;"	v	class:TestGuessing_InsertOneChar
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 7, " "),)$/;"	v	class:TestGuessing_InsertOneChar1
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	autoload/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	autoload/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	autoload/plugged/ultisnips/test/test_Autocommands.py	/^    wanted = "[ [ bar ] ] done M1U1"$/;"	v	class:Autocommands
wanted	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	autoload/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na"$/;"	v	class:Autotrigger_CanMatchContext
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "oouu success b"$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = "ööuu success b"$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote
wanted	autoload/plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1 is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.a|2.c"$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.red|2.gray"$/;"	v	class:Choices_WillBeExpandedToInlineSelection
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.Русский язык|2.中文|3.한국어|4.öääö"$/;"	v	class:Choices_CanTakeNonAsciiCharacters
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan is a color, mirror: cyan is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan, mirror: cyan"$/;"	v	class:Choices_With_Mirror
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray is color\\nline 2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray"$/;"	v	class:Choices_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah"$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer foo"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
wanted	autoload/plugged/ultisnips/test/test_Choices.py	/^    wanted = "||"$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
wanted	autoload/plugged/ultisnips/test/test_Completion.py	/^    wanted = ($/;"	v	class:Completion_SimpleExample_ECR
wanted	autoload/plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	autoload/plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "b"$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportError
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "{ < a > }"$/;"	v	class:ContextSnippets_UseContext
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	autoload/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = ""$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "aaaaa()3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "first line\\n\\n\\ntest\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if :\\n\\t"$/;"	v	class:Undo_ChangesInPlaceholder
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if a: test"$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\t"$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\ti"$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:DeleteSnippetInsertion1
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	autoload/plugged/ultisnips/test/test_Editing.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo \\n"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Expand.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
wanted	autoload/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	autoload/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
wanted	autoload/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\tfoo"$/;"	v	class:ShiftWidthZero
wanted	autoload/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "hello"$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	autoload/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
wanted	autoload/plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Folding.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <foo>"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Format.py	/^    wanted = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "5"$/;"	v	class:Python_SnipRvCanBeNonText
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi New End"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + 100 * "\\n" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	autoload/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Mirror.py	/^    wanted = ($/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = ($/;"	v	class:CursorMovement_Multiline_ECR
wanted	autoload/plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	autoload/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x first a bob b y"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	autoload/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	autoload/plugged/ultisnips/test/test_Plugin.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END -> hallo\\n" "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = ($/;"	v
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	autoload/plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	autoload/plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blah"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blah"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blub, blah is blah"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hblablubb"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "lac03lu"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "laöäülu"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "two"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "ultisnips"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "1: 1\\n2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "[(1)2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "\\nabc"$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "abc\\n"$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	autoload/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "def123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test fedcab"$/;"	v
wanted	autoload/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Should only expand in p.\\ntest" + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	autoload/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "[ HelloWorld ] Hello"$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah Lets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Hi" + 2 * JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "tt\\nt{\\n\\tt\\n}"$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	autoload/plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "* test\\n* test\\n* test"$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes:no)"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "ab no\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	autoload/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "blumba" + EX + "\\n" + "this is a dynamic snippet" + "\\n" + "blumba" + EX$/;"	v	class:AddNewSnippetSource
wanted	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "test41123'êabc0"$/;"	v	class:VerifyVimDict1
wanted	autoload/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyybyxxx"$/;"	v	class:Visual_SelectOneWordExclusive
wanted	autoload/plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyyybxxx"$/;"	v	class:Visual_SelectOneWordInclusive
wanted	autoload/plugged/ultisnips/test/vim_test_case.py	/^    wanted = ""$/;"	v	class:VimTestCase
warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
warn	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
warn	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
warn	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:warn(message)$/;"	f
warn	autoload/plugged/vim-startify/autoload/startify.vim	/^function! s:warn(msg) abort$/;"	f
warning	autoload/plugged/asynctasks.vim/bin/asynctask.py	/^    def warning (self, text):$/;"	m	class:PrettyText
warning	autoload/plugged/asynctasks.vim/plugin/asynctasks.vim	/^function! s:warning(msg)$/;"	f
wctob	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	/^__NTH (wctob (wint_t __wc))$/;"	f
wctrans_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wctype.h	/^typedef const __int32_t *wctrans_t;$/;"	t
wctype_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@wctype-wchar.h	/^typedef unsigned long int wctype_t;$/;"	t
we_handle_message	autoload/plugged/bracey.vim/server/frontend.js	/^	var we_handle_message = function(event){$/;"	f
web-address	autoload/plugged/bracey.vim/server/test/server.js	/^	'web-address': '127.0.0.1',$/;"	p	class:serverSettings
webSocket	autoload/plugged/bracey.vim/server/frontend.js	/^	var webSocket = null;$/;"	v
webSocketRequest	autoload/plugged/bracey.vim/server/server.js	/^Server.prototype.webSocketRequest = function(request){$/;"	m	class:Server
webSrc	autoload/plugged/bracey.vim/server/cssfile.js	/^CssFile.prototype.webSrc = function(){$/;"	m	class:CssFile
webSrc	autoload/plugged/bracey.vim/server/htmlfile.js	/^HtmlFile.prototype.webSrc = function(){$/;"	m	class:HtmlFile
websocket	autoload/plugged/bracey.vim/server/server.js	/^var websocket = require("websocket");$/;"	v
which_key#char_handler#is_exit_code	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#is_exit_code(raw_char) abort$/;"	f
which_key#char_handler#parse_raw	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#parse_raw(raw_char)$/;"	f
which_key#char_handler#timeout_for_next_char	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#timeout_for_next_char() abort$/;"	f
which_key#char_handler#wait_with_timeout	autoload/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#wait_with_timeout() abort$/;"	f
which_key#error#missing_mapping	autoload/plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#missing_mapping() abort$/;"	f
which_key#error#report	autoload/plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#report(err_msg) abort$/;"	f
which_key#error#undefined_key	autoload/plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#undefined_key(key) abort$/;"	f
which_key#format	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#format(mapping) abort$/;"	f
which_key#get_sep	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#get_sep() abort$/;"	f
which_key#mappings#parse	autoload/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! which_key#mappings#parse(key, dict, visual) " {{{$/;"	f
which_key#parse_mappings	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#parse_mappings() " {{{$/;"	f
which_key#register	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#register(prefix, dict) abort$/;"	f
which_key#renderer#get_displaynames	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! which_key#renderer#get_displaynames()$/;"	f
which_key#renderer#prepare	autoload/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! which_key#renderer#prepare(runtime) abort$/;"	f
which_key#start	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#start(vis, bang, prefix) " {{{$/;"	f
which_key#statusline	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#statusline() abort$/;"	f
which_key#trigger	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#trigger() abort$/;"	f
which_key#wait_for_input	autoload/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#wait_for_input() " {{{$/;"	f
which_key#window#close	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#close() abort$/;"	f
which_key#window#name	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#name() abort$/;"	f
which_key#window#show	autoload/plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#show(runtime) abort$/;"	f
white	syntax/java.vim	/^let white = "#ABB2BF"$/;"	v
win_execute	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^  function! s:win_execute(win_id, cmd, ...) abort$/;"	f
windowPosition	autoload/plugged/fzf/src/options.go	/^type windowPosition int$/;"	t
windows_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
winexists	autoload/plugged/vim-floaterm/autoload/floaterm/window.vim	/^function! s:winexists(winid) abort$/;"	f
winnr	autoload/plugged/codi.vim/autoload/codi.vim	/^  let winnr = winnr()$/;"	v
winshell	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
winshell	autoload/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
wint_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@wint_t.h	/^typedef __WINT_TYPE__ wint_t;$/;"	t
wint_t	.ccls-cache/@@home@tablinux@.config@nvim/@usr@lib@llvm-9@lib@clang@9.0.1@include@stddef.h	/^typedef __WINT_TYPE__ wint_t;$/;"	t
withIndex	autoload/plugged/fzf/src/result_test.go	/^func withIndex(i *Item, index int) *Item {$/;"	f
withPrefixLengths	autoload/plugged/fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []string, begin int) []Token {$/;"	f
with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
wrap	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
wrap	autoload/plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrap	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrapLine	autoload/plugged/fzf/src/tui/light.go	/^func wrapLine(input string, prefixLength int, max int, tabstop int) []wrappedLine {$/;"	f
wrap_accent	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrap_cmds	autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
wrap_cmds	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
wrapped	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  let wrapped['sink*'] = remove(wrapped, 'newsink')$/;"	v
wrappedLine	autoload/plugged/fzf/src/tui/light.go	/^type wrappedLine struct {$/;"	t
wrapper	autoload/plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap
wrapreg	autoload/plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
write	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@x86_64-linux-gnu@bits@types@cookie_io_functions_t.h	/^  cookie_write_function_t *write;	\/* Write bytes.  *\/$/;"	m	struct:_IO_cookie_io_functions_t
writeTemporaryFile	autoload/plugged/fzf/src/terminal.go	/^func writeTemporaryFile(data []string, printSep string) string {$/;"	f
write_buffer	autoload/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
write_temp	autoload/plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
writelines	autoload/plugged/fzf/test/test_go.rb	/^  def writelines(path, lines)$/;"	f	class:TestBase
ws_handle_close	autoload/plugged/bracey.vim/server/frontend.js	/^	var ws_handle_close = function(event){$/;"	f
ws_handle_error	autoload/plugged/bracey.vim/server/frontend.js	/^	var ws_handle_error = function(event){$/;"	f
ws_handle_open	autoload/plugged/bracey.vim/server/frontend.js	/^	var ws_handle_open = function(event){$/;"	f
ws_refresh	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
wscanf	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@wchar.h	659;"	d
x	autoload/plugged/vista.vim/test/data/123.cpp	/^	static const int x = 1;$/;"	m	namespace:foo::bar	file:
xterm_launcher	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
y	autoload/plugged/vista.vim/test/data/123.cpp	/^	static const int y = 2;$/;"	m	namespace:foo::bar	file:
yS	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yank_to_register	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
yellow	syntax/java.vim	/^let yellow = "#E5C07B"$/;"	v
ys	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	autoload/plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
z	autoload/plugged/vim-sneak/plugin/sneak.vim	/^  omap z <Plug>Sneak_s$/;"	m
zsh	autoload/plugged/fzf/test/test_go.rb	/^    def zsh$/;"	f	class:Shell
~__pthread_cleanup_class	.ccls-cache/@@home@tablinux@.config@nvim/@usr@include@pthread.h	/^  ~__pthread_cleanup_class () { if (__do_it) __cancel_routine (__cancel_arg); }$/;"	f	class:__pthread_cleanup_class
